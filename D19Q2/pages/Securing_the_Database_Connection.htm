<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title></title>
    </head>
    <body>
        <h1>Securing the Database Connection</h1>
        <p>Datical employs a JDBC to establish a connection to the database for both the packaging and deployment phases.</p>
        <h1 id="SecuringtheDatabaseConnection-DatabaseConnectionMethod">Database Connection Method</h1>
        <ul>
            <li>Uses standard JDBC Providers (database vendors)</li>
            <li>Username/hostname is defined in connection string</li>
            <li>Password is passed via database driver property method<em>(not as part of the connection string)</em></li>
            <li>Information on setup of SSL JDBC connections<ul><li>Oracle through Oracle Wallet -&#160;<a href="..\..\Content\zz_sandbox\SSL_Connection_to_an_Oracle_Database_Through_Oracle_Wallet.htm" rel="nofollow" style="text-decoration: none;">Using Oracle Wallet for SSL Connections to Oracle Databases</a></li><li>SQL Server -<a class="external-link" href="https://msdn.microsoft.com/en-us/library/bb879935(v=sql.110).aspx" rel="nofollow" style="text-decoration: none;">https://msdn.microsoft.com/en-us/library/bb879935(v=sql.110).aspx</a></li><li>DB2 -<a class="external-link" href="https://www.ibm.com/support/knowledgecenter/SSEPGG_9.5.0/com.ibm.db2.luw.admin.sec.doc/doc/c0005815.html" rel="nofollow" style="text-decoration: none;">https://www.ibm.com/support/knowledgecenter/SSEPGG_9.5.0/com.ibm.db2.luw.admin.sec.doc/doc/c0005815.html</a></li></ul></li>
        </ul>
        <h1 id="SecuringtheDatabaseConnection-DaticalDatabaseConnectionInformation">Datical Database Connection Information</h1>
        <p>Datical DB obtains connection user/password information from one of these two methods below.&#160;<em><strong>We strongly recommend to use the first method (runtime credentials) because it is more secure</strong></em>.&#160; The second option (storing credentials in the datical.project file) is to be avoided because of the possibility of the encoded passwords being decoded.</p>
        <ul>
            <li><strong>Option 1: Runtime Credentials (more secure)</strong>
                <ul>
                    <li><em>This method is<strong>strongly recommended</strong>for securely passing database credentials to Datical in the GUI or in automation (using the Command Line)</em>
                    </li>
                    <li>For Automation/Command Line, the automation platform retrieves database credentials from the company's credential store (often a 3rd-party tool like CyberArk or the CI/CD platform's native credential store) and loads them&#160;into environment variables before calling the Datical CLI<ul><li>Credentials are passed to the CLI at runtime&#160;via environment variables</li><li>They are not persisted by&#160;Datical</li></ul></li>
                    <li>For GUI usage, the user is prompted for database credentials at run-time<ul><li>The Graphical User interface prompts users for information in real-time</li><li>They are not persisted by Datical</li></ul></li>
                </ul>
            </li>
            <li><strong>Option 2: Stored Credentials (less secure)</strong>
                <ul>
                    <li><em>This method is only for evaluations and single-user usage as the encoding method is not secure and could compromise passwords in a multi-user environment.</em>
                    </li>
                    <li>For both the GUI and CLI, database User and Password are stored and persisted in the datical.project file<ul><li>Password is encoded (but not encrypted)</li><li>There may be potential risk of having the stored password be decoded</li></ul></li>
                </ul>
            </li>
            <li>See&#160;<a href="..\..\DDOC59\pages\Database_Credential_Management.htm">Database Credential Management</a>.&#160;</li>
        </ul>
        <p>
            <br />
        </p>
        <p>
            <br />
        </p>
    </body>
</html>