<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title></title>
    </head>
    <body>
        <h1>Using SQL Parser</h1>
        <p>SQL Parser allows you to benefit from rules and forecast capabilities for Oracle SQL Scripts that are being packaged through the DIRECT or DATA_DML package methods.</p>
        <div class="confluence-information-macro confluence-information-macro-note conf-macro output-block">
            <div class="confluence-information-macro-body">
                <p>Currently, the SQL Parser&#160;only supports Oracle SQL scripts.</p>
            </div>
        </div>
        <h2 id="UsingSQLParser-PropertiesoftheSQLParser:">Properties of the SQL Parser:</h2>
        <ul>
            <li>SQL Parser only applies to changes that are:<ul><li>Packaged using the DIRECT or DATA_DML method</li><li>Created in the ChangeSet Wizard as 'Custom SQL (External File)'. NOTE: Changes created as 'Custom SQL' will NOT be processed by SQL Parser.</li><li>Created in the ChangeSet Wizard as 'Execute with SQLPlus'</li></ul></li>
            <li>SQL Parser does not change how these scripts are executed. The DIRECT packaging method, DATA_DML packaging method, changes created as 'Custom SQL (External File)', and changes created as 'Execute with SQLPlus' will result in execution of a SQL script as provided.</li>
            <li>SQL Parser does not validate SQL statements. Instead, SQL Parser simply parses provided SQL scripts and models them into Datical's object model for subsequent validation with rules and forecast.<ul><li>In the event the SQL Parser is unable to parse a statement that is included in a provided SQL script:<ul><li>The Forecast Report will include a warning for the statement(s) that cannot be parsed. The warning will read: "WARNING - Will not be forecast"</li><li>SQL Parser will continue parsing the provided SQL script and attempt to parse all other statements</li></ul></li><li>In the event the SQL Parser is unable to parse the provided SQL script file or otherwise encounters an error:<ul><li>The Forecast Report will include a warning that will read: `SQL Parser could not parse sql script file &lt;script&gt;`</li></ul></li></ul></li>
        </ul>
        <div class="confluence-information-macro confluence-information-macro-warning conf-macro output-block">
            <div class="confluence-information-macro-body">
                <p>In rare cases, the SQL Parser may incorrectly model a statement found in a provided SQL script, which may lead to erroneous rules and forecast violations (or the erroneous lack thereof). If you encounter such behavior, we sincerely request you contact&#160;<a class="external-link" href="mailto:support@datical.com" rel="nofollow">support@datical.com</a>&#160;so that the matter may be addressed.</p>
            </div>
        </div>
        <h1 id="UsingSQLParser-ConfiguringProjectstoUseSQLParser">Configuring Projects to Use SQL Parser</h1>
        <p>SQL Parser is a global setting that applies to the entire project. As a global setting, there is no way to selectively enable SQL Parser. Instead, SQL Parser can be selectively disabled for specific folders after the global setting has been enabled. To enable the SQL Parser:</p>
        <ul>
            <li>
                <p class="auto-cursor-target">In the GUI, navigate to the <strong>Deployment Settings</strong> section of the project settings (<strong>Settings</strong> tab), then check the checkbox next to '<strong>Enable Parser</strong>'. NOTE: As a project-level setting, checking the checkbox for '<strong>Enable Parser</strong>' will enable SQL Parser globally for the entire project.<br /><br />The setting is represented in the&#160;&#160;<code>datical.project</code> file by <code>enableSqlParser=true.</code></p>
                <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                    <div class="codeContent panelContent pdl"><pre class="syntaxhighlighter-pre" xml:space="preserve">enableSqlParser=[true | false]</pre>
                    </div>
                </div>
            </li>
        </ul>
        <p>To selectively disable the SQL Parser after it has been enabled:</p>
        <ul>
            <li>
                <p class="auto-cursor-target">Set <code>disableSqlParser=true&#160;</code>in the <code>metadata.properties</code> file for any folders that you do not want SQL Parser to process.&#160;</p>
                <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                    <div class="codeContent panelContent pdl"><pre class="syntaxhighlighter-pre" xml:space="preserve">disableSqlParser=[true | false]</pre>
                    </div>
                </div>
                <div class="confluence-information-macro confluence-information-macro-note conf-macro output-block">
                    <div class="confluence-information-macro-body">
                        <p>Selectively disabling the SQL Parser using the <code>metadata.properties</code>&#160;file will only apply when packaging changes using the Packager. Selectively disabling the SQL Parser is not available with the ChangeSet Wizard.</p>
                    </div>
                </div>
            </li>
        </ul>
        <h2 id="UsingSQLParser-AdditionalFilesProduced">Additional Files Produced</h2>
        <p>When SQL parsing is enabled, a file is produced after any of the following operations:</p>
        <ul>
            <li>Package</li>
            <li>Forecast</li>
            <li>Deploy</li>
        </ul>
        <p>The file contains the modeled changes produced by the SQL Parser. It can be used for debugging. The produced file&#160;is stored in the project in the following directory:</p>
        <p><code>Reports/&lt;year&gt;/&lt;date&gt;/&lt;dbdef&gt;/[forecast | deploy]/parser_output/&lt;filename&gt;_&lt;timestamp&gt;.xml</code>
        </p>
        <h1 id="UsingSQLParser-SupportedDatabases">Supported Databases</h1>
        <p>Using SQL Parser is available only for the following databases. See each section for additional information about object support and limitations.&#160;</p>
        <ul>
            <li>Oracle Database</li>
        </ul>
        <h1 id="UsingSQLParser-LimitationsofSQLParser">Limitations of SQL Parser</h1>
        <h2 id="UsingSQLParser-SyntaxandModelingLimitations:">Syntax and Modeling Limitations:</h2>
        <ul>
            <li>
                <p class="auto-cursor-target">SQL Parser requires statement blocks to be separated by a forward slash&#160;"/". Expand for examples:</p>
                <div class="expand-container conf-macro output-block" id="expander-1079724078">
                    <div id="expander-control-1079724078" class="expand-control"><span class="expand-control-text">Click here to expand...</span>
                    </div>
                    <div id="expander-content-1079724078" class="expand-content expand-hidden">
                        <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                            <div class="codeHeader panelHeader pdl" style="border-bottom-width: 1px;"><b>Single Block</b>
                            </div>
                            <div class="codeContent panelContent pdl"><pre class="syntaxhighlighter-pre" xml:space="preserve">CREATE OR REPLACE PACKAGE
test_methods
IS
...
END test_methods;

CREATE OR REPLACE PACKAGE emp_mgmt AS 
...
END emp_mgmt; 
/ </pre>
                            </div>
                        </div>
                        <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                            <div class="codeHeader panelHeader pdl" style="border-bottom-width: 1px;"><b>Multiple Blocks</b>
                            </div>
                            <div class="codeContent panelContent pdl"><pre class="syntaxhighlighter-pre" xml:space="preserve">CREATE OR REPLACE PACKAGE
test_methods
IS
...
END test_methods;
/

CREATE OR REPLACE PACKAGE emp_mgmt AS 
...
END emp_mgmt; 
/ </pre>
                            </div>
                        </div>
                    </div>
                </div>
            </li>
            <li>
                <p class="auto-cursor-target">For constraints that require a unique index (such as addPrimaryKey or addUniqueConstraint), the SQL Parser does not model creating a unique index. Expand for example:</p>
                <div class="expand-container conf-macro output-block" id="expander-87793657">
                    <div id="expander-control-87793657" class="expand-control"><span class="expand-control-text">Click here to expand...</span>
                    </div>
                    <div id="expander-content-87793657" class="expand-content expand-hidden">
                        <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                            <div class="codeHeader panelHeader pdl" style="border-bottom-width: 1px;"><b>Sample SQL Statement</b>
                            </div>
                            <div class="codeContent panelContent pdl"><pre class="syntaxhighlighter-pre" xml:space="preserve">ALTER TABLE SCHEMA1.COUNTRIES 
  ADD CONSTRAINT COUNTRY_C_ID_PK PRIMARY KEY ( COUNTRY_ID ) ;</pre>
                            </div>
                        </div>
                        <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                            <div class="codeHeader panelHeader pdl" style="border-bottom-width: 1px;"><b>SQL Parser Model (internal)</b>
                            </div>
                            <div class="codeContent panelContent pdl"><pre class="syntaxhighlighter-pre" xml:space="preserve">&lt;addPrimaryKey columnNames="COUNTRY_ID" constraintName="COUNTRY_C_ID_PK" schemaName="SCHEMA1" tableName="COUNTRIES"/&gt;</pre>
                            </div>
                        </div>
                        <p class="auto-cursor-target">In this example, it might be the case that the unique index "COUNTRY_C_ID_PKX" had to be first created in schema "SCHEMA1" in table "COUNTRIES" before the primary key can be added. The limitation is that the unique index creation is not modeled by SQL Parser because that cannot be determined without first interacting with the target database and finding out whether the unique index already exists or not.</p>
                        <p class="auto-cursor-target">Same goes to the statements with&#160;<code>USING INDEX</code> with index name following it.</p>
                        <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                            <div class="codeHeader panelHeader pdl" style="border-bottom-width: 1px;"><b>Sample SQL Statement</b>
                            </div>
                            <div class="codeContent panelContent pdl"><pre class="syntaxhighlighter-pre" xml:space="preserve">ALTER TABLE "MYSCHEMA"."AWESOME_TABLE" ADD CONSTRAINT "AWESOME_TABLE_PK1" PRIMARY KEY ("AWESOME_TABLE_ID")
USING INDEX MY_NEW_IDX TABLESPACE TS1;</pre>
                            </div>
                        </div>
                        <p class="auto-cursor-target">is modeled to</p>
                        <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                            <div class="codeHeader panelHeader pdl" style="border-bottom-width: 1px;"><b>SQL Parser Model (internal)</b>
                            </div>
                            <div class="codeContent panelContent pdl"><pre class="syntaxhighlighter-pre" xml:space="preserve">&lt;addPrimaryKey columnNames="AWESOME_TABLE_ID" constraintName="AWESOME_TABLE_PK1" forIndexName="MY_NEW_IDX" schemaName="MYSCHEMA" tableName="AWESOME_TABLE" tablespace="TS1"/&gt;</pre>
                            </div>
                        </div>
                        <div class="confluence-information-macro confluence-information-macro-note conf-macro output-block">
                            <div class="confluence-information-macro-body">
                                <p>In this same example, if the statement makes explicit use of the <code>USING INDEX</code>  &#160;<strong>without</strong>&#160;the name of the index then the SQL Parser will model the index creation as well as the primary key.</p>
                                <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                                    <div class="codeHeader panelHeader pdl" style="border-bottom-width: 1px;"><b>Sample SQL Statement</b>
                                    </div>
                                    <div class="codeContent panelContent pdl"><pre class="syntaxhighlighter-pre" xml:space="preserve">ALTER TABLE "MYSCHEMA"."AWESOME_TABLE" ADD CONSTRAINT "AWESOME_TABLE_PK1" PRIMARY KEY ("AWESOME_TABLE_ID")
USING INDEX TABLESPACE TS1;</pre>
                                    </div>
                                </div>
                                <p>is modeled to</p>
                                <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                                    <div class="codeHeader panelHeader pdl" style="border-bottom-width: 1px;"><b>SQL Parser Model (internal)</b>
                                    </div>
                                    <div class="codeContent panelContent pdl"><pre class="syntaxhighlighter-pre" xml:space="preserve">&lt;createIndex indexName="AWESOME_TABLE_PK1" schemaName="MYSCHEMA" unique="true"&gt;&lt;column name="AWESOME_TABLE_ID"/&gt;&lt;appdba:storageOptions dbms="oracle"&gt;TABLESPACE TS1&lt;/appdba:storageOptions&gt;&lt;/createIndex&gt;&lt;addPrimaryKey columnNames="AWESOME_TABLE_ID" constraintName="AWESOME_TABLE_PK1" forIndexName="AWESOME_TABLE_PK1" forIndexSchemaName="MYSCHEMA" schemaName="MYSCHEMA" tableName="AWESOME_TABLE"/&gt;</pre>
                                    </div>
                                </div>
                                <p>
                                    <br />
                                </p>
                                <p>The exception to this is when the&#160;<code>USING INDEX</code> has a&#160;<code>CREATE INDEX</code> statement inline. These statements will NOT be modeled by SQL Parser.</p>
                                <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                                    <div class="codeHeader panelHeader pdl" style="border-bottom-width: 1px;"><b>Sample SQL Statement</b>
                                    </div>
                                    <div class="codeContent panelContent pdl"><pre class="syntaxhighlighter-pre" xml:space="preserve">ALTER TABLE "MYSCHEMA"."AWESOME_TABLE" ADD CONSTRAINT "AWESOME_TABLE_PK1" PRIMARY KEY ("AWESOME_TABLE_ID")
USING INDEX (CREATE UNIQUE INDEX "MYSCHEMA"."AWESOME_TABLE_PK1" ON "MYSCHEMA"."AWESOME_TABLE" ("AWESOME_TABLE_ID")
TABLESPACE "SOME_TABLESPACE") ENABLE;</pre>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </li>
        </ul>
        <h2 id="UsingSQLParser-SQLStatementsNotModeled">SQL Statements Not Modeled</h2>
        <p>The following statements will not be modeled by the SQL Parser and will instead just be run as provided:</p>
        <ul style="text-align: left;">
            <li>Anonymous SQL Block (BEGIN ... END)</li>
            <li>ALTER TABLE ENABLE CONSTRAINT</li>
            <li>ALTER TABLE DISABLE CONSTRAINT</li>
            <li>ALTER TABLE DROP CONSTRAINT</li>
            <li>ALTER TABLE MODIFY PRIMARY KEY</li>
            <li>ALTER TABLE with inline create index statement after USING INDEX<br /><ul><li>This is illustrated in the Syntax and Modeling Limitations section</li></ul></li>
            <li>ALTER CLUSTER</li>
            <li>ALTER DATABASE</li>
            <li>ALTER DIMENSION</li>
            <li>ALTER DISKGROUP</li>
            <li>ALTER FLASHBACK ARCHIVE</li>
            <li>ALTER FUNCTION</li>
            <li>ALTER INDEXTYPE</li>
            <li>ALTER JAVA</li>
            <li>ALTER MATERIALIZED VIEW</li>
            <li>ALTER MATERIALIZED VIEW LOG</li>
            <li>ALTER OPERATOR</li>
            <li>ALTER OUTLINE</li>
            <li>ALTER PACKAGE</li>
            <li>ALTER PROFILE</li>
            <li>ALTER RESOURCE COST</li>
            <li>ALTER ROLE</li>
            <li>ALTER ROLLBACK SEGMENT</li>
            <li>ALTER TRIGGER</li>
            <li>ALTER SYSTEM</li>
            <li>ALTER TABLESPACE</li>
            <li>ALTER USER</li>
            <li>ALTER VIEW</li>
            <li>ANALYZE</li>
            <li>ASSOCIATE STATISTICS</li>
            <li>AUDIT</li>
            <li>CALL</li>
            <li>COMMIT</li>
            <li>CREATE CLUSTER</li>
            <li>CREATE CONTEXT</li>
            <li>CREATE CONTROLFILE</li>
            <li>CREATE DATABASE</li>
            <li>CREATE DATABASE LINK</li>
            <li>CREATE DIMENSION</li>
            <li>CREATE DIRECTORY</li>
            <li>CREATE DISKGROUP</li>
            <li>CREATE FLASHBACK ARCHIVE</li>
            <li>CREATE INDEXTYPE</li>
            <li>CREATE LIBRARY</li>
            <li>CREATE MATERIALIZED VIEW</li>
            <li>CREATE MATERIALIZED VIEW LOG</li>
            <li>CREATE OPERATOR</li>
            <li>CREATE OUTLINE</li>
            <li>CREATE PACKAGE</li>
            <li>CREATE PACKAGE BODY</li>
            <li>CREATE PFILE</li>
            <li>CREATE PROFILE</li>
            <li>CREATE RESTORE POINT</li>
            <li>CREATE ROLLBACK SEGMENT</li>
            <li>CREATE SCHEMA</li>
            <li>CREATE SPFILE</li>
            <li>CREATE TABLE with subquery</li>
            <li>CREATE TABLE of XMLTYPE</li>
            <li>CREATE TABLESPACE</li>
            <li>CREATE TYPE</li>
            <li>CREATE TYPE BODY</li>
            <li>CREATE USER</li>
            <li>DISASSOCIATE STATISTICS</li>
            <li>DROP CLUSTER</li>
            <li>DROP CONTEXT</li>
            <li>DROP DATABASE</li>
            <li>DROP DATABASE LINK</li>
            <li>DROP DIMENSION</li>
            <li>DROP DIRECTORY</li>
            <li>DROP DISKGROUP</li>
            <li>DROP FLASHBACK ARCHIVE</li>
            <li>DROP INDEXTYPE</li>
            <li>DROP JAVA</li>
            <li>DROP LIBRARY</li>
            <li>DROP MATERIALIZED VIEW</li>
            <li>DROP MATERIALIZED VIEW LOG</li>
            <li>DROP OPERATOR</li>
            <li>DROP OUTLINE</li>
            <li>DROP PACKAGE</li>
            <li>DROP PACKAGE BODY</li>
            <li>DROP PROFILE</li>
            <li>DROP RESTORE POINT</li>
            <li>DROP ROLE</li>
            <li>DROP ROLLBACK SEGMENT</li>
            <li>DROP TABLESPACE</li>
            <li>DROP TYPE</li>
            <li>DROP TYPE BODY</li>
            <li>DROP USER</li>
            <li>EXPLAIN PLAN</li>
            <li>FLASHBACK DATABASE</li>
            <li>FLASHBACK TABLE</li>
            <li>GRANT</li>
            <li>INSERT</li>
            <li>LOCK TABLE</li>
            <li>MERGE</li>
            <li>NOAUDIT</li>
            <li>PURGE</li>
            <li>RENAME without object type (ambiguous Table, View, Sequence, Private Synonym)</li>
            <li>REVOKE</li>
            <li>ROLLBACK</li>
            <li>SAVEPOINT</li>
            <li>SELECT</li>
            <li>SET COLUMN REMARKS (COMMENT ON COLUMN)</li>
            <li>SET CONSTRAINT</li>
            <li>SET CONSTRAINTS</li>
            <li>SET ROLE</li>
            <li>SET TABLE REMARKS (COMMENT ON TABLE)</li>
            <li>SET TRANSACTION</li>
            <li>TRUNCATE CLUSTER</li>
            <li>TRUNCATE TABLE</li>
            <li>UPDATE</li>
        </ul>
        <h2 id="UsingSQLParser-SQLStatementstoAvoid">SQL Statements to Avoid</h2>
        <p>Do not use SQL Parser with the following statements.&#160;</p>
        <ul>
            <li>CREATE JAVA - produces unpredictable results, including incorrect forecasts and forecast failure</li>
        </ul>
        <p>
            <br />
        </p>
        <p>
            <br />
        </p>
    </body>
</html>