<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title></title>
    </head>
    <body>
        <h1>Fixed Folder Names</h1>
        <p />
        <div class="toc-macro client-side-toc-macro  conf-macro output-block">
        </div>
        <h1 id="FixedFolderNames-Fixed-NameDirectoriesintheSCMRepository">Fixed-Name Directories in the SCM Repository</h1>
        <p>Use the following structure and naming. You can create sub-directories as desired.&#160;</p><pre class="conf-macro output-block" xml:space="preserve">&lt;sql_code_dir&gt; # for example, sql_scripts
   archive
   data_dml
   ddl
   function
   package
   packagebody
   procedure
   sql_direct
   ssis
   ssis_project
   trigger
   view</pre>
        <h2 id="FixedFolderNames-ScriptDirectories">Script Directories</h2>
        <div class="table-wrap">
            <table class="wrapped confluenceTable">
                <colgroup>
                    <col />
                    <col />
                </colgroup>
                <tbody>
                    <tr>
                        <th class="confluenceTh">
                            <p><span style="color: rgb(0,0,0);"><strong>SCM Directory Name</strong></span>
                            </p>
                        </th>
                        <th class="confluenceTh">
                            <p><span style="color: rgb(0,0,0);"><strong>Description</strong></span>
                            </p>
                        </th>
                    </tr>
                    <tr>
                        <td class="confluenceTd">
                            <p><strong>&lt;sql_code_dir&gt;</strong>
                            </p>
                        </td>
                        <td class="confluenceTd">
                            <p>User-defined directory in SCM to use as the root for SQL scripts. Subdirectories are provided for different types of SQL. Example: <code>sql_code</code>.&#160;</p>
                        </td>
                    </tr>
                    <tr>
                        <td class="confluenceTd">
                            <p><strong>archive</strong>
                            </p>
                        </td>
                        <td class="confluenceTd">
                            <p>The archive directory is created and managed by the Deployment Packager. Files added in the <strong>ddl</strong>, <strong>sql</strong>, <strong>sqlplus, sql_direct,</strong> and <strong>data_dml</strong> directories will be copied here after successful Packaging to prevent post Packaging modification. The user does not need to create this directory.</p>
                        </td>
                    </tr>
                    <tr>
                        <td class="confluenceTd">
                            <p><strong>data_dml</strong>
                            </p>
                        </td>
                        <td class="confluenceTd">
                            <p>Contains scripts that load, manipulate or delete data.</p>
                        </td>
                    </tr>
                    <tr>
                        <td class="confluenceTd">
                            <p><strong>ddl</strong>
                            </p>
                        </td>
                        <td class="confluenceTd">
                            <p>Contains scripts that make ddl changes such as creating, modifying, and dropping tables, indexes, sequences, and other database objects that are not one of the other types.</p>
                        </td>
                    </tr>
                    <tr>
                        <td class="confluenceTd">
                            <p><strong>function</strong>
                            </p>
                        </td>
                        <td class="confluenceTd">
                            <p>Contains scripts that create or replace one function.</p>
                        </td>
                    </tr>
                    <tr>
                        <td class="confluenceTd">
                            <p><strong>package</strong>
                            </p>
                        </td>
                        <td class="confluenceTd">
                            <p>Contains scripts that create or replace one package definition.</p>
                        </td>
                    </tr>
                    <tr>
                        <td class="confluenceTd">
                            <p><strong>packagebody</strong>
                            </p>
                        </td>
                        <td class="confluenceTd">
                            <p>Contains scripts that create new or replace existing package bodies.</p>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>procedure</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">Contains scripts that create or replace one procedure.</td>
                    </tr>
                    <tr>
                        <td class="confluenceTd">
                            <p><span style="color: rgb(128,128,128);"><strong>sql</strong></span>
                            </p>
                        </td>
                        <td class="confluenceTd">
                            <p><span style="color: rgb(128,128,128);">Limited Use.</span>
                            </p>
                            <p><span style="color: rgb(128,128,128);">Creates a <code>sqlFile</code> changeset. When deployed, an internal SQL processor to run the script. These changesets can be deployed to any database platform. This is useful if you have a multi-platform project (e.g., Oracle and SQL Server).</span>
                            </p>
                            <p><span style="color: rgb(128,128,128);">It's strongly suggested to use&#160;<code>sql_direct</code> if you use the same database platform in all steps in a project.&#160;</span>
                            </p>
                        </td>
                    </tr>
                    <tr>
                        <td class="confluenceTd">
                            <p><span style="color: rgb(153,153,153);"><strong>sqlplus</strong></span>
                            </p>
                        </td>
                        <td class="confluenceTd">
                            <p><span style="color: rgb(153,153,153);">Deprecated.&#160;</span>
                            </p>
                            <p><span style="color: rgb(153,153,153);">Use <code>sql_direct</code> instead.</span>
                            </p>
                        </td>
                    </tr>
                    <tr>
                        <td class="confluenceTd">
                            <p><strong>sql_direct</strong>
                            </p>
                        </td>
                        <td class="confluenceTd">
                            <p>The scripts are run directly using the database's native client. The changesets produced during packaging are database-specific. They cannot be deployed to other database platforms.&#160;</p>
                            <p><em>Database - Command Processor - Datical DB changeset type</em>
                            </p>
                            <ul>
                                <li>DB2 - Command Line Processor Plus - clpplus</li>
                                <li>Oracle - SQL*Plus - sqlplus</li>
                                <li>EDB Postgres - EDB*Plus - edbplus</li>
                                <li>PostgreSQL - psql - psql</li>
                                <li>SQL Server - SQLCMD - sqlcmd</li>
                            </ul>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>ssis</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">Contains .dtsx files (SSIS Package) and other support files used in ETL processes.&#160;</td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>ssis_project</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">Contains .ispac files (SSIS Project)</td>
                    </tr>
                    <tr>
                        <td class="confluenceTd">
                            <p><strong>trigger</strong>
                            </p>
                        </td>
                        <td class="confluenceTd">
                            <p>Contains SQL scripts that create or replace one trigger.</p>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>view</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">Contains SQL scripts that create or replace one view.</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <h2 id="FixedFolderNames-AdditionalGuidelinesforObjects">Additional Guidelines for Objects</h2>
        <div class="table-wrap">
            <table class="relative-table wrapped confluenceTable" style="width: 1551.0px;">
                <colgroup>
                    <col style="width: 0.0px;" />
                    <col style="width: 0.0px;" />
                </colgroup>
                <tbody>
                    <tr>
                        <th class="confluenceTh">Object Type</th>
                        <th class="confluenceTh">Notes</th>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd">Databases and Schema</td>
                        <td colspan="1" class="confluenceTd">
                            <div class="content-wrapper">
                                <p>
                                    <br />
                                </p>
                                <div class="confluence-information-macro confluence-information-macro-warning conf-macro output-block">
                                    <div class="confluence-information-macro-body">
                                        <p>Create databases, schema, tablespaces, users and roles outside of Datical. Datical is typically used to manage objects and data once the environment has been setup.</p>
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="confluenceTd">
                            <p>Inserts, Updates and Deletes (DML)</p>
                        </td>
                        <td class="confluenceTd">
                            <p>Place DML scripts into the <code>/data_dml</code> folder.</p>
                        </td>
                    </tr>
                    <tr>
                        <td class="confluenceTd">
                            <p>Procedures, Packages, Functions, Views and Triggers (Stored Logic)</p>
                        </td>
                        <td class="confluenceTd">
                            <div class="content-wrapper">
                                <p><span class="inline-comment-marker">Objects</span> are managed as non-transient changes. Scripts remain in their folders after packaging. They are not moved to the archive directory. This behavior supports managing database changes like application source code: the same code is updated in place as changes are needed.&#160;By contrast, once DDL changes are made, the script is moved to the archive directory.&#160;&#160;</p>
                                <p>When the changes are committed, Datical repackages the file and increments the version (the versioning feature was available as of Datical DB 4.31).&#160;</p>
                                <p>For stored logic scripts, create objects using the CREATE command. When you update and deploy the file again, Datical automatically converts the CREATE to an ALTER as needed. Permissions are maintained on the object when deployed.</p>
                                <div class="confluence-information-macro confluence-information-macro-information conf-macro output-block">
                                    <p class="title">Note</p>
                                    <div class="confluence-information-macro-body">
                                        <p>Stored-logic scripts must create only one object per script.</p>
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="confluenceTd">
                            <p>Complex and Interdependent Database Changes</p>
                        </td>
                        <td class="confluenceTd">
                            <div class="content-wrapper">
                                <p>Normally DDL changes are placed in the <code>ddl</code> directory.</p>
                                <p>However, when you need to package complicated or interdependent changes, place them in the <code>/sql_direct</code> folder.</p>
                                <p>Example of a set of changes that need to be maintained in a single sql script and placed into&#160;<code>/sql_direct</code>:</p>
                                <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                                    <div class="codeContent panelContent pdl"><pre class="syntaxhighlighter-pre" xml:space="preserve">create table
move data from old table to new table
drop old table</pre>
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd">Rename any object</td>
                        <td colspan="1" class="confluenceTd">Place SQL scripts into the <code>/sql</code> or <code>/sql_direct</code> folder.&#160; When you do, they are processed as a rename operation (rather than a DROP and CREATE).</td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd">Using Changelog Properties</td>
                        <td colspan="1" class="confluenceTd">
                            <p>All sql scripts can take advantage of properties.</p>
                            <p>Property key/value pairs are set directly in the changelog. See <a href="Setting_Properties_in_the_Project_Changelog.htm">Setting Properties in the Project Changelog</a>.&#160;</p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <h1 id="FixedFolderNames-SQLTypesandChangesetProcessing">SQL Types and Changeset Processing</h1>
        <div class="table-wrap">
            <table class="wrapped confluenceTable">
                <colgroup>
                    <col />
                    <col />
                    <col />
                </colgroup>
                <tbody>
                    <tr>
                        <th colspan="1" class="confluenceTh">Description</th>
                        <th colspan="1" class="confluenceTh">SQL Statements</th>
                        <th colspan="1" class="confluenceTh">Process Type for Packaging</th>
                    </tr>
                    <tr>
                        <td class="confluenceTd">
                            <p>DDL - Data Definition Language</p>
                        </td>
                        <td class="confluenceTd"><pre xml:space="preserve">CREATE, ALTER, DROP, COMMENT</pre>
                        </td>
                        <td colspan="1" class="confluenceTd">Transient</td>
                    </tr>
                    <tr>
                        <td class="confluenceTd">
                            <p>DML - Data Manipulation Language</p>
                        </td>
                        <td class="confluenceTd"><pre xml:space="preserve">INSERT, UPDATE, DELETE, TRUNCATE, MERGE, SELECT</pre>
                        </td>
                        <td colspan="1" class="confluenceTd">Transient</td>
                    </tr>
                    <tr>
                        <td class="confluenceTd">
                            <p>DCL - Data Control Language</p>
                        </td>
                        <td class="confluenceTd"><pre xml:space="preserve">GRANT, REVOKE</pre>
                        </td>
                        <td colspan="1" class="confluenceTd">Transient</td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd">
                            <p>Stored Logic</p>
                        </td>
                        <td colspan="1" class="confluenceTd"><pre xml:space="preserve">CREATE (OR REPLACE) / DROP PACKAGE, PACKAGE BODY, PROCEDURE, FUNCTION, TRIGGER&#160;</pre>
                        </td>
                        <td colspan="1" class="confluenceTd">Non-transient</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <h2 id="FixedFolderNames-ProcessingChanges">Processing Changes</h2>
        <p>The process type drives the type of processing used, the type changeset produced and determines if the original scripts are archived.</p>
        <div class="table-wrap">
            <table class="wrapped confluenceTable">
                <colgroup>
                    <col />
                    <col />
                    <col />
                </colgroup>
                <tbody>
                    <tr>
                        <th class="confluenceTh">Process Type</th>
                        <th class="confluenceTh">Processing</th>
                        <th colspan="1" class="confluenceTh">Directories</th>
                    </tr>
                    <tr>
                        <td class="confluenceTd">Transient</td>
                        <td class="confluenceTd">
                            <ul>
                                <li><strong>Archived</strong>: After the changes are processed, the SQL script is moved to the archive directory.</li>
                                <li>SQL scripts with the same name in the same directory cannot be re-packaged</li>
                            </ul>
                        </td>
                        <td colspan="1" class="confluenceTd">
                            <p>ddl</p>
                            <p>sql_direct</p>
                            <p>data_dml</p>
                        </td>
                    </tr>
                    <tr>
                        <td class="confluenceTd">Non-transient</td>
                        <td class="confluenceTd">
                            <ul>
                                <li><strong>Not archived</strong>: The SQL script remains in the directory and is versioned.&#160;</li>
                                <li>SQL scripts can be repackaged</li>
                            </ul>
                        </td>
                        <td colspan="1" class="confluenceTd">all other directories</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="table-wrap">
            <table class="wrapped confluenceTable">
                <colgroup>
                    <col />
                    <col />
                    <col />
                </colgroup>
                <tbody>
                    <tr>
                        <th class="confluenceTh">Process Type</th>
                        <th class="confluenceTh">Processing</th>
                        <th colspan="1" class="confluenceTh">Directories</th>
                    </tr>
                    <tr>
                        <td class="confluenceTd">Convert SQL</td>
                        <td class="confluenceTd">
                            <ul>
                                <li><strong>Converts SQL</strong>&#160;code to produce changesets into an object model.&#160;</li>
                                <li>Full Forecasting and Rules&#160;</li>
                                <li>Slower</li>
                            </ul>
                        </td>
                        <td colspan="1" class="confluenceTd">
                            <p>ddl</p>
                        </td>
                    </tr>
                    <tr>
                        <td class="confluenceTd">Native SQL</td>
                        <td class="confluenceTd">
                            <ul>
                                <li><strong>Runs SQL</strong>&#160;to produce the changes and embeds native SQL calls in the changesets.</li>
                                <li>Limited Forecasting and Rules</li>
                                <li>Faster</li>
                            </ul>
                        </td>
                        <td colspan="1" class="confluenceTd">
                            <p>all other directories</p>
                            <p>
                                <br />
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <h2 id="FixedFolderNames-ProcessingOrder">Processing Order</h2>
        <p>Deployment Packager in SCM Mode follows 3 ordering tiers for automating the execution order of new SQL scripts:</p>
        <ol style="margin-left: 0.0px;">
            <li><strong>Tier 1:&#160; Commit Sequence</strong>
                <ol>
                    <li>The group of files in a single commit is processed as a unit. Within a commit, files are processed within the file type sequence and then within the filename sequence.&#160;</li>
                    <li>Groups of commits are processed in order of checkin time. The earliest commit is processed first, then the next, and so on.&#160;</li>
                    <li>If you commit a file as part of a group and then later commit it again with changes (with a group), it is processed with the later commit group.&#160;</li>
                </ol>
            </li>
            <li><strong>Tier 2:&#160; File Type Sequence</strong>
                <ol>
                    <li>ddl</li>
                    <li>view</li>
                    <li>ssis/ssis_project</li>
                    <li>function</li>
                    <li>procedure</li>
                    <li>package</li>
                    <li>packagebody</li>
                    <li>trigger</li>
                    <li>sql</li>
                    <li>sqlplus</li>
                    <li>sql_direct</li>
                    <li>data_dml</li>
                </ol>
            </li>
            <li><strong>Tier 3: Filename Sequence<br /></strong>If multiple files are included in the same commit, and in the same directory, then files will be executed in alphabetical filename order</li>
        </ol>
        <p><strong>NOTE</strong>: You may need to perform separate commits in cases where objects are created and accessed in different steps in the execution order. For example, you may want to commit views for tables that are not created until the sql_direct step. In that case, commit the view separately <em>after</em> you have committed the steps that create the tables.</p>
        <h1 id="FixedFolderNames-SourceControlOperationsandPackagingEffects">Source Control Operations and Packaging Effects</h1>
        <div class="table-wrap">
            <table class="wrapped confluenceTable">
                <colgroup>
                    <col />
                    <col />
                </colgroup>
                <tbody>
                    <tr>
                        <th class="confluenceTh">SCM Operation</th>
                        <th class="confluenceTh">Effect on Packaging</th>
                    </tr>
                    <tr>
                        <td class="confluenceTd">
                            <p>Check In New File</p>
                        </td>
                        <td class="confluenceTd">
                            <p>Processed as a new file. The changes are packaged as a changeset to be added to the changelog.xml file.</p>
                        </td>
                    </tr>
                    <tr>
                        <td class="confluenceTd">
                            <p>Rename File</p>
                        </td>
                        <td class="confluenceTd">
                            <p>Packaging processes the script with the new filename as a new changeset.&#160;</p>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd">Move File</td>
                        <td colspan="1" class="confluenceTd">
                            <p>Moving a file more than once may cause errors.</p>
                        </td>
                    </tr>
                    <tr>
                        <td class="confluenceTd">
                            <p>Delete File</p>
                        </td>
                        <td class="confluenceTd">
                            <ul>
                                <li>For procedures, functions, views and triggers, the packager creates a "<strong>DROP &lt;object&gt;</strong>" changeset in the changelog.xml file.</li>
                                <li>For all other object types, deleting a file has no effect on the changelog.xml file.</li>
                            </ul>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <h2 id="FixedFolderNames-DefiningLabelsinSCMCheckInComments">Defining Labels in SCM Check In Comments</h2>
        <p>The packager parses the source control commit message. Strings enclosed by square brackets are treated as labels for the changeset generated by packaging sql scripts.</p>
        <p>For example, if a developer checked in a SQL script with the following comment:</p>
        <div class="preformatted panel conf-macro output-block" style="border-width: 1px;">
            <div class="preformattedContent panelContent"><pre xml:space="preserve">Add a new column foo to the table bar [label1,label2] [label3]</pre>
            </div>
        </div>
        <p>The packager adds labels to all changesets generated from the SQL script:</p>
        <div class="preformatted panel conf-macro output-block" style="border-width: 1px;">
            <div class="preformattedContent panelContent"><pre xml:space="preserve">label1 label2 label3</pre>
            </div>
        </div>
        <p>
            <br />
        </p>
    </body>
</html>