<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title></title>
    </head>
    <body>
        <h1>CLI Commands</h1>
        <p />
        <div class="toc-macro client-side-toc-macro  conf-macro output-block">
        </div>
        <h1 id="CLICommands-DatabaseCredentials">Database Credentials</h1>
        <p>The command descriptions assume that database credentials are stored in the project (the default) or in environment variables.</p>
        <p>If you have <code>runtimeCredentials</code> set and the credentials are not stored in environment variables, then you need to specify the database credentials on the command line</p>
        <p>See&#160;<a href="Database_Credential_Management.htm">Database Credential Management</a>.&#160;</p>
        <p><strong>Single-credential</strong>
        </p>
        <p style="margin-left: 30.0px;">Commands that work on a single database (dbdef) require the <code>-un</code>  &#160;<code>&lt;username&gt;</code> and -pw <code>&lt;password&gt;</code> options to specify the database credentials.</p>
        <p><strong>Two-credentia</strong>l</p>
        <p style="margin-left: 30.0px;">Commands that work on two databases require credentials for the reference (desired state) and target (changed) databases</p>
        <ul>
            <li>Reference database:&#160; Use <code>-ru &lt;username&gt;</code> and <code>-rpw &lt;password&gt;</code> options.</li>
            <li>Target database:&#160; Use <code>-tu &lt;username&gt;</code> and <code>-tpw &lt;password&gt;</code> options.</li>
        </ul>
        <h1 id="CLICommands-GettingHelp">Getting Help</h1>
        <p>To get a list of available commands, run <code>hammer help</code> at a system command prompt.&#160;</p>
        <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
            <div class="codeHeader panelHeader pdl hide-border-bottom" style="border-bottom-width: 1px;"><b class="code-title">Datical DB CLI Help</b><span class="collapse-source expand-control" style="display: none;"><span class="expand-control-text">Expand source</span></span>
            </div>
            <div class="codeContent panelContent pdl hide-toolbar"><pre class="syntaxhighlighter-pre" xml:space="preserve">USAGE: hammer [OPTION]... [COMMAND] [OPTIONS]...
Use 'hammer help options' for available options
Use 'hammer help [COMMAND] for more help on a command

AVAILABLE COMMANDS:
     add-to-property: Add a path to a property.
         addContexts: Add contexts to change sets.
           addLabels: Add labels to change sets.
      assignMetadata: Assign metadata information to a label.
       changelogSync: Mark all changes as executed in the database.
        checkDrivers: Check that JDBC driver jars are installed or on the specified paths.
          checkRules: Compiles rules and reports any errors.
      clearCheckSums: Delete the checksums used to detect altered change sets from the tracking tables.
              dbshow: List all databases for a project, along with extra info about each.
              deploy: Deploy the changelog, updating the target database's schema to the latest version.
 deploy-autoRollback: Deploy the changelog to the target database; if an error occurs, rollback to the revision before the command was given.
                diff: Compares two databases and produces a report.
       diffChangelog: Compares two databases and produces a changelog.
      findChangeSets: Locates changesets based on label expression and script checksum
            forecast: Simulate unexecuted change sets against the specified database.
              groovy: Run a script that can use Datical DB REPL commands using the Groovy script engine.
                help: Print help on available commands.
             history: Show the applied change set history of a database.
insertSavedAuditData: Insert all audit entries temporarily saved in the project into the user-configured Audit DB.
      installDrivers: Run the custom script 'installDrivers.groovy'.
      installLicense: Install a license file to allow continued use of Datical DB.
     modifyChangeSet: Modify changeset attributes.
      removeContexts: Remove contexts from change sets. 
        removeLabels: Remove labels from change sets.
            rollback: Roll the target database back to a previous state, using a variety of methods.
         schemaStats: Display summary schema info.
                 set: Set properties, database definitions, etc. See 'set help' for more information and sub commands.
                show: Display project properties, database definitions, etc. See 'show help' for more information and sub commands.
            snapshot: Captures a snapshot of a database as either a persistent object file or as a Liquibase changelog.
              status: Show the deployment status of a database.
       statusDetails: Show detailed status for each of the changesets in the changelog.
         testConnect: Test the connection for one or more databases.
    uninstallDrivers: Run the custom script 'uninstallDrivers.groovy'.
 validateStoredLogic: Compiles stored logic and reports any validation errors.
    versionChangeLog: Upgrades project changelog to the current version.
</pre>
            </div>
        </div>
        <p>
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-add-to-property">add-to-property</h1>
        <p style="margin-left: 30.0px;">Add a path to a property</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">add-to-property &lt;property&gt; &lt;path&gt;</code>
        </p>
        <p><strong>EXAMPLE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">add-to-property drivers /home/user/newdrivers</code>
        </p>
        <p><strong>NOTES</strong>
        </p>
        <p style="margin-left: 30.0px;">This command appends a new path to an existing property that expects path values.</p>
        <p>
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-addContexts">addContexts</h1>
        <p style="margin-left: 30.0px;">Add contexts to changesets. Adds context attributes to a set of changesets in the changelog. The attributes are selected using a label expression. This commmand is used by the Deployment Packager to indicate that a group of changesets is ready to be deployed to a new environment.<br /><br /></p>
        <div class="confluence-information-macro confluence-information-macro-information conf-macro output-block">
            <p class="title">Note</p>
            <div class="confluence-information-macro-body">Starting with v4.32, please use the <code>modifyChangeSet</code> command. The <code>addContexts</code> command is deprecated and support may be removed in the future.&#160;</div>
        </div>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">addContexts --lookupChangesets=&lt;label-expression&gt; --context=&lt;contexts&gt; [--scriptChecksum=&lt;checksum&gt;] [<code style="margin-left: 0.0px;">--matchAll=true|false</code>]</code>
        </p>
        <p><strong>OPTIONS</strong>
        </p>
        <ul>
            <li><code>lookupChangesets </code>- Label expression used to matchthe change sets (required)</li>
            <li><code>context</code> - Comma-separated list of contexts (required)</li>
            <li><code>scriptChucksum</code> - SQL script checksum value</li>
            <li><code>matchAll</code> - SQL Script checksums must match for change set lookup. Default value is true.&#160;</li>
        </ul>
        <p><strong>NOTES</strong>
        </p>
        <p style="margin-left: 30.0px;">The value of the <code>scriptChecksum</code> parameter can be used to further qualify change sets that match the label expression. This is used primarily in the Deployment Packager to confirm that the change set was generated by the expected version of a script.</p>
        <p style="margin-left: 30.0px;">The value of the <code>matchAll</code> parameter impacts the matching behavior of the <code>scriptChecksum</code> parameter.</p>
        <ul>
            <li style="margin-left: 30.0px;">If <code>matchAll</code> is true, all change sets identified by the label expression must have a <code>scriptChecksum</code> attribute that matches the attribute passed on the command line.</li>
            <li style="margin-left: 30.0px;">If <code>matchAll</code> is false,only one change set returned by the label expression needs to have a matching <code>scriptChecksum</code> attribute.</li>
        </ul>
        <p>
            <br />
        </p>
        <p>
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-addLabels">addLabels</h1>
        <p style="margin-left: 30.0px;">Add labels to changesets. Adds label attributes to a set of changesets in the changelog that are selected using a label expression.</p>
        <div class="confluence-information-macro confluence-information-macro-information conf-macro output-block">
            <p class="title">Note</p>
            <div class="confluence-information-macro-body">Starting with v4.32, please use the <code>modifyChangeSet</code> command. The <code>addLabels</code>&#160;command is deprecated and support may be removed in the future.&#160;</div>
        </div>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code><span style="margin-left: 0.0px;">addLabels&#160;<code style="margin-left: 0.0px;">--lookupChangesets=&lt;label-expression&gt; --context=&lt;contexts&gt; [--scriptChecksum=&lt;checksum&gt;] [<code style="margin-left: 0.0px;">--matchAll=true|false</code>]</code></span></code>
        </p>
        <p><strong>OPTIONS</strong>
        </p>
        <ul>
            <li><code>lookupChangesets</code> - Label expression used to match the change sets (required)</li>
            <li><code>labels</code> - Comma-separated list of labels (required)</li>
            <li><code>scriptChecksum</code> - SQL script checksum value</li>
            <li><code>matchAll</code> - SQL Script checksums must match for change set lookup. Default value is true</li>
        </ul>
        <p><strong>NOTES</strong>
        </p>
        <p style="margin-left: 30.0px;">The value of the <code>scriptChecksum</code> parameter can be used to further qualify change sets that match the label expression. This is used primarily in the Deployment Packager to confirm that the change set was generated by the expected version of a script.</p>
        <p style="margin-left: 30.0px;">The value of the <code>matchAll</code> parameter impacts the matching behavior of the <code>scriptChecksum</code> parameter.</p>
        <ul>
            <li style="margin-left: 30.0px;">If <code>matchAll</code> is true, all change sets identified by the label expression must have a <code>scriptChecksum</code> attribute that matches the attribute passed on the command line.</li>
            <li style="margin-left: 30.0px;">If <code>matchAll</code> is false,only one change set returned by the label expression needs to have a matching <code>scriptChecksum</code> attribute.</li>
        </ul>
        <p>
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-assignMetadata">assignMetadata</h1>
        <p style="margin-left: 30.0px;">Assign metadata information to a label. Used to associate more information with a label than could be expressed in the label itself. The metadata is stored in the project’s associated audit database, so this command requires that an audit database has been configured for the project.</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code><span style="margin-left: 0.0px;">assignMetadata --metdataLabel=&lt;label name&gt; --metadataFile=&lt;path to file&gt;</span></code>
        </p>
        <p><strong>OPTIONS</strong>
        </p>
        <ul>
            <li><code>metadataLabel</code> - Name of the label</li>
            <li><code>metadataFile&#160;</code> - Path to a properties file containing the metadata key-value pairs</li>
        </ul>
        <p>
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-changelogSync">changelogSync</h1>
        <p style="margin-left: 30.0px;">Mark all change sets as executed in the database. Marks all changesets as applied to the specified database.</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">changelogSync &lt;dbdef&gt; &lt;options&gt;</code>
        </p>
        <p><strong>EXAMPLE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">changelogSync myAppDev --mergeLabels=merge --pipeline=Feature1</code>
        </p>
        <p><strong><strong>OPTIONS</strong></strong>
        </p>
        <ul style="margin-left: 0.0px;">
            <li><code>mergeLabels</code> - Label merge strategy, one of override (default), merge (AND), append (OR). Specifies how to combine labels set on the command line with labels set on the step.&#160;</li>
            <li><code>pipeline</code> - Specifies the pipeline&#160;associated with the changelogSync for auditing purposes.<ul><li>If not set and the dbDef is a member of only one pipeline, then that pipeline is used.</li><li>If not set and the dbDef is a member of multiple pipelines, then an error is returned.</li></ul></li>
        </ul>
        <p><strong>NOTES</strong>
        </p>
        <p style="margin-left: 30.0px;">USE CAUTION! Before running changelogSync, verify that the specified database is up to date!</p>
        <p style="margin-left: 30.0px;">Running <code>changelogSync</code> against a database that is not complete can lead to future deployment failures.</p>
        <p style="margin-left: 30.0px;">
            <br />
        </p>
        <p style="margin-left: 30.0px;">
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-checkDrivers">checkDrivers</h1>
        <p style="margin-left: 30.0px;">Check that JDBC driver jars are installed or on the specified path. Scans the path(s) specified by the 'drivers' property for accessible JDBC drivers.</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">checkDrivers</code>
        </p>
        <p><strong>EXAMPLE OUTPUT</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;"><span style="color: rgb(23,43,77);">Found installed driver: com.ibm.db2.jcc.DB2Driver driver: (v3.63) jar: (v1.0.11.20181126111708)</span><br /><span style="color: rgb(23,43,77);">Found installed driver: com.datical.jdbc.oracle.DaticalOracleDriver jar: (v0.0.60.20181126114644)</span><br /><span style="color: rgb(23,43,77);">Found installed driver: com.microsoft.sqlserver.jdbc.SQLServerDriver driver: (v6.3) jar: (v1.0.11)</span><br /><span style="color: rgb(23,43,77);">Found installed driver: oracle.jdbc.OracleDriver driver: (v18.3) jar: (v1.0.11)</span><br /></code>
        </p>
        <p><strong>NOTES</strong>
        </p>
        <p style="margin-left: 30.0px;">There are several ways to configure Datical DB to use the JDBC drivers that communicate with the databases being managed. The preferred method is to install the drivers into the OSGi environment using the <code>installDrivers</code> command. Drivers can also be found by creating a <span>properties</span> file in the project and then either</p>
        <ul>
            <li>manually editing the file</li>
            <li>using the command <code><span>set property drivers &lt;path-to-drivers&gt;</span></code></li>
        </ul>
        <p style="margin-left: 30.0px;">For more information on setting the drivers property, see the help:&#160;<code><span>help set property</span></code></p>
        <div class="confluence-information-macro confluence-information-macro-information conf-macro output-block">
            <p class="title">Note</p>
            <div class="confluence-information-macro-body">
                <p>For backward compatibility, <code>checkdrivers</code> (all lowercase) also works.&#160;</p>
            </div>
        </div>
        <p style="margin-left: 30.0px;">
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-checkRules">checkRules</h1>
        <p style="margin-left: 30.0px;">Compiles rules and reports any errors.</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">checkRules [PreForecast|Forecast|PostForecast|SqlRules]</code>
        </p>
        <p><strong>EXAMPLE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">checkRules PreForecast</code>
        </p>
        <p><strong>OPTIONS</strong>
        </p>
        <ul>
            <li><code>rulesFolder</code> - specifies the folder to check, one of PreForecast, Forecast, PostForecast, SqlRules. These are the standard folders under the Rules folder for the project. If rulesFolder is not specified, then rules in all the standard folders are compiled.</li>
        </ul>
        <p><strong>NOTES</strong>
        </p>
        <p style="margin-left: 30.0px;">Run the command from a valid Datical DB project directory.</p>
        <p style="margin-left: 30.0px;">
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-clearCheckSums">clearCheckSums</h1>
        <p style="margin-left: 30.0px;">Delete the checksums used to detect altered change sets from the tracking tables.</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;">&#160;clearCheckSums &lt;dbdef&gt;</p>
        <p><strong>EXAMPLE</strong>
        </p>
        <p style="margin-left: 30.0px;">clearCheckSums myAppDevDB</p>
        <p><strong>OPTIONS</strong>
        </p>
        <p><strong>NOTES</strong>
        </p>
        <p style="margin-left: 30.0px;">Use only under the direction of a Datical Support Engineer or if you are very experienced with Datical DB.</p>
        <p style="margin-left: 30.0px;">This command is helpful when you need to respond to a change to an existing object that is made outside of Datical DB. For example, someone uses a SQL script to change a database directly.&#160; It allows you to update the change set that creates this object and clear the existing checksums to avoid validation errors. The checksums are recreated on the next <code>deploy</code> or <code>changeLogSync</code> command.&#160;</p>
        <p style="margin-left: 30.0px;">
            <br />
        </p>
        <p style="margin-left: 30.0px;">
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-create">create</h1>
        <p style="margin-left: 30.0px;">Create various project artifacts.</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;">create &lt;object&gt; &lt;options&gt;</p>
        <p><strong>OBJECTS</strong>
        </p>
        <ul>
            <li style="margin-left: 30.0px;">DbDef &lt;json_file&gt; - create a new DbDef in the current project using &lt;json_file&gt;, a file containing JSON key-value pairs.</li>
        </ul>
        <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
            <div class="codeContent panelContent pdl"><pre class="syntaxhighlighter-pre" xml:space="preserve">{
"DbDefClass":"OracleDbDef",
"name":"MyNewOracleDB",
"hostname":"127.0.0.1",
"port":"1521",
"username":"orclUser",
"password":"hammer01@",
"sid":"ORCLSID",
"contexts":"DEV,QA"}</pre>
            </div>
        </div>
        <p style="margin-left: 30.0px;">
            <br /><strong>Keys</strong>
        </p>
        <ul>
            <li style="margin-left: 30.0px;"><code>DbDefClass</code> - Database type (OracleDbDef | Db2DbDef | MysqlDbDef | SqlServerDbDef | PostgresqlDbDef)</li>
            <li style="margin-left: 30.0px;"><code>name</code> - Name for the dbDef. Used as an alias in the command interpreter and the UI.</li>
            <li style="margin-left: 30.0px;"><code>hostname</code> - Host name or IP address of the target database server</li>
            <li style="margin-left: 30.0px;"><code>port</code> - Port number for JDBC connections to the target database server</li>
            <li style="margin-left: 30.0px;"><code>username</code> - Database user name to use for the connection</li>
            <li style="margin-left: 30.0px;"><code>password</code> - Password for the database user</li>
            <li style="margin-left: 30.0px;"><code>database</code> - (for MySQL, DB2, Postgres) The name of the database you wish to manage.</li>
            <li style="margin-left: 30.0px;"><code>databaseName</code> - (for SQLServer)&#160; The name of the database you wish to manage.</li>
            <li style="margin-left: 30.0px;"><code>instanceName</code> - (for SQLServer)&#160; The name of the instance you wish to manage.</li>
            <li style="margin-left: 30.0px;"><code>applicationName</code> - (for SQLServer)&#160; The name of the database application you wish to manage.</li>
            <li style="margin-left: 30.0px;"><code>sid</code> - (for Oracle) - Oracle SID for the connection</li>
            <li style="margin-left: 30.0px;"><code>serviceName</code> - (for Oracle) - Oracle Service for the connection</li>
            <li style="margin-left: 30.0px;"><code>defaultSchemaName</code> - Name of the schema/catalog to manage.</li>
            <li style="margin-left: 30.0px;"><code>contexts</code> - Comma-separated list of contexts for the DbDef.</li>
        </ul>
        <p>
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-dbshow">dbshow</h1>
        <p style="margin-left: 30.0px;">List all databases for a project, along with extra info about each.&#160;</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code>dbshow</code>
        </p>
        <p style="margin-left: 30.0px;"><code>dbshow &lt;dbdef&gt;...</code>
        </p>
        <p><strong>EXAMPLE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code>dbshow DEVdb QAdb STAGEdb</code>
        </p>
        <p><strong>NOTES</strong>
        </p>
        <p style="margin-left: 30.0px;">If you use the command without specifying a database, information for all dbdefs is shown.</p>
        <p style="margin-left: 30.0px;">To obtain information on a subset of database definitions, use their names&#160;as command line parameters.</p>
        <p><strong style="margin-left: 0.0px;">OUTPUT</strong>
        </p>
        <p style="margin-left: 30.0px;">Lists the name, URL, database name, alternate schema, and default context.</p>
        <p style="margin-left: 30.0px;">
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-debugexport">debug export</h1>
        <p style="margin-left: 30.0px;">Export and scrub sensitive data from files to be sent to Datical support for debugging or troubleshooting.</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code>debug export&#160;<code style="margin-left: 0.0px;">[<span>--scrub=true|false</span>]&#160;[<code>--include=&lt;searchstring&gt;[,&lt;searchstring&gt;,...]</code>]&#160;<code style="margin-left: 0.0px;">[<code>--exclude=&lt;searchstring&gt;[,&lt;searchstring&gt;,...]</code>] </code>[<code>--lastmodified=&lt;N&gt;</code>] [</code></code><span style="font-family: monospace;">--report=&lt;path/file&gt;]</span>
        </p>
        <p><strong>EXAMPLE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code>debug export&#160;</code>
        </p>
        <p style="margin-left: 30.0px;">
            <br />
        </p>
        <p><strong>OPTIONS</strong>
        </p>
        <ul>
            <li><span style="font-family: monospace;">--scrub=true|false&#160;</span>- Default is true. When set, replace sensitive information with tokens.&#160;</li>
            <li><code>--include=&lt;searchstring&gt;[,&lt;searchstring&gt;,...]</code> - include only files specified by one or more search strings (filters).&#160;</li>
            <li><code>--exclude=&lt;searchstring&gt;[,&lt;searchstring&gt;,...]</code> - include all files except those specified by one or more search strings (filters).&#160;</li>
            <li><code>--lastmodified=&lt;N&gt;</code>&#160;- include only files modified within the last &lt;N&gt; hours.Specifies the pipeline&#160;associated with the changelogSync for auditing purposes.</li>
            <li><code>--report=&lt;path/file&gt;</code> - put the resulting zip file in a specified file. By default it is placed in&#160;<code><span style="color: rgb(0,0,0);">&lt;project&gt;/Reports/debug/&lt;project&gt;.zip</span></code></li>
        </ul>
        <p><strong>NOTES</strong>
        </p>
        <p style="margin-left: 30.0px;">Run the command at the root of a project directory, <code>&lt;project&gt;</code>.&#160;</p>
        <p style="margin-left: 30.0px;">For use case scenarios and examples, see&#160;<a href="Assembling_Data_for_Datical_Support.htm" rel="nofollow">Assembling Data for Datical Support</a>.&#160;</p>
        <p style="margin-left: 30.0px;">To include an external file, place it in the project directory, preferably in the root, <code>&lt;project&gt;</code>.</p>
        <p style="margin-left: 30.0px;">Do not use : or / characters in <code>&lt;searchstring&gt;</code>. If you search for a URL, do not include the prefix (<code><span class="nolink">http://,</span>&#160;https://</code>)</p>
        <p><strong style="margin-left: 0.0px;">OUTPUT</strong>
        </p>
        <p style="margin-left: 30.0px;">Creates a zip file of the specified project files. The zip file is placed in&#160;<code><span style="color: rgb(0,0,0);">&lt;project&gt;/Reports/debug/&lt;project&gt;.zip</span></code><span style="color: rgb(0,0,0);"> by default.&#160;</span></p>
        <p style="margin-left: 30.0px;">
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-deploy">deploy</h1>
        <p style="margin-left: 30.0px;">Deploy the changelog, updating the target database schema to the latest version. Deploys all change sets that have not been applied to the indicated database in the project.</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">deploy &lt;dbdef&gt; [–log=]&#160;[--enableRowCount=exact|approximate|disabled]&#160;<code style="margin-left: 0.0px;">[--pipeline=&lt;name&gt;] </code>[--report=&lt;path&gt;] [--context=context1,context2] [--labels=&lt;label expression&gt;][--mergeLabels=override|merge|append][–immutableProject=&lt;true|false&gt;] [--invalidsAction=&lt;warn|fail&gt;]</code>
        </p>
        <p><strong>EXAMPLE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">deploy myAppDevDb --log=/home/user/dbadmin/daticallogs/ --report=/home/user/dbadmin/daticalreports --context=dev,integration --labels="JUN AND (poolApp or beachApp)"&#160;--invalidsAction=fail</code>
        </p>
        <p><strong>DATICAL SERVICE OPTIONS</strong>
        </p>
        <p style="margin-left: 30.0px;">Use these options to access a project that is stored on Datical Service.&#160;</p>
        <ul>
            <li><code>--daticalServer=&lt;cluster-name&gt;&#160;</code>- The cluster name set for Datical Service. The cluster name is set during Datical Service installation.&#160;</li>
            <li><code>--daticalUsername=&lt;user&gt;</code> - User name, must be configured in Datical Service. Use the DATICAL_PASSWORD environment variable to provide the password.&#160;</li>
            <li><span style="font-family: monospace;">--projectKey=&lt;projectRef&gt; -&#160;</span>Project to use, specified <code>&lt;projectRef&gt;</code>,&#160; a project name or project key. The project key is defined in Datical Service only.&#160;</li>
        </ul>
        <p><strong>OPTIONS</strong>
        </p>
        <ul>
            <li><code>log</code> - When set, the <code>daticaldb.log</code> file will be written to the directory specified. Log is written to <code>Logs</code> directory of project by default.</li>
            <li><code>enableRowCount - exact | approximate | disabled</code>, method for counting rows in tables. Default is disabled.&#160;<ul><li>Before v5.7 used <code>true | false</code>, with default as true. New default is <code>disabled</code>. Older projects are interpreted correctly and mapped to the new values.&#160;</li></ul></li>
            <li><code>pipeline</code> - Specifies the pipeline&#160;associated with the changelogSync for auditing purposes.<ul><li>If not set and the dbDef is a member of only one pipeline, then that pipeline is used.</li><li>If not set and the dbDef is a member of multiple pipelines, then an error is returned.</li></ul></li>
            <li><code>report</code> - When set, deploy report will be written to the directory specified. Report is written to the <code>Reports</code> directory by default.</li>
            <li><code>context</code> - When set, only change sets marked with the contexts specified will be executed. To run all contexts, specify <code>$all</code>.</li>
            <li><code>labels</code>&#160;- When set, only change sets marked with the label expression will be executed. To run all labels, specify <code>$all</code>.</li>
            <li><code>mergeLabels</code> - Label merge strategy, one of override (default), merge (AND), append (OR). Specifies how to combine labels set on the command line with labels set on the step.&#160;</li>
            <li><code>deployMode</code> - Override the <code>deployMode</code> project setting, either <code>full</code> (default), which includes forecasting and rules checking, or <code>quick</code>.</li>
            <li><code>limitForecast</code> - Override the <code>limitForecast</code> project setting. Set to either <code>false</code> (default), where forecasting is done for all objects in the target database, or <code>true</code>, which limits forecasting to objects directly affected by the deployment.&#160;</li>
            <li><code>immutableProject</code> - When running with Datical Service options, set to <code>true</code> to use the local project files rather than download the project information from Datical Service. Helpful in automated environments where project files are kept in artifact repositories.&#160;</li>
            <li><code>invalidsAction</code> - Override the storedLogicValidityAction project setting for this deploy.&#160;<strong>NOTE:&#160;</strong>Option would be applied when Stored Logic Validity Check is not disabled.<ul><li><code>warn</code>: Set to either warn (default), current behavior. New invalid stored logic will cause the Deploy to flag as deployment warning.</li><li><code>fail</code>: New invalid stored logic will cause a deployment to be marked as a failure.</li></ul></li>
        </ul>
        <p>
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-deploy-autoRollback">deploy-autoRollback</h1>
        <p style="margin-left: 30.0px;">Deploy to the target database with the latest schema revision; if an error occurs, rollback to the revision before the command was given.<br />USAGE: <code>deploy-autoRollback &lt;dbdef&gt; [--log=/path/to/log] [--report=/path/to/report] [--context=context1,context2] [--labels=&lt;label expression&gt;] [--force]</code></p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">deploy-autoRollback myAppDevDb --log=&lt;path&gt; --report=&lt;path&gt; --context=&lt;contexts&gt; --labels=&lt;label-expression&gt;</code>
        </p>
        <p><strong><strong>EXAMPLE</strong></strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">deploy-autoRollback myAppDevDb --log=<code style="margin-left: 0.0px;">/home/user/daticallogs</code> --report=&lt;path&gt; --context=dev,integration --labels="JUN AND (poolApp or beachApp)"</code>
        </p>
        <p><strong>OPTIONS</strong>
        </p>
        <ul>
            <li><code>log</code>&#160;- When set, the <code>daticaldb.log</code> file will be written to the directory specified. Log is written to <code>Logs</code> directory of project by default.</li>
            <li><code>report</code> - When set, deploy report will be written to the directory specified. Report is written to the <code>Reports</code> directory by default.</li>
            <li><code>context</code> - When set, only change sets marked with the contexts specified will be executed. To run all contexts, specify <code>$all</code>.</li>
            <li><code>labels</code>&#160;- When set, only change sets marked with the label expression will be executed. To run all labels, specify <code>$all</code>.</li>
            <li><code>force</code> - When set, attempts the update even there are changesets that cannot be rolled back. USE CAUTION!</li>
        </ul>
        <p>
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-diff">diff</h1>
        <p style="margin-left: 30.0px;">Compare two databases and produce a report. Compares two database definitions in a project and produces a text report of the differences.</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">diff &lt;referenceDB&gt; &lt;targetDb&gt; [--output=/path/to/report]</code>
        </p>
        <p><strong>EXAMPLE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">diff myAppDevDB myAppQaDB --output=&lt;path&gt;</code>
        </p>
        <p><strong>OPTIONS</strong>
        </p>
        <ul>
            <li><code>referenceDB</code> - database that represents the desired state</li>
            <li><code>targetDB</code> - database that is out of synchronization and needs to be caught up to the state of&#160;<code>referenceDB</code>.</li>
            <li><code>output</code> - If present, specifies a file for the report. If not specified, the report is sent to STDOUT</li>
        </ul>
        <p>
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-diffChangelog">diffChangelog</h1>
        <p style="margin-left: 30.0px;">Compares two database definitions in a project and produces the change sets necessary to synchronize the databases.</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">diffChangelog &lt;referenceDB&gt; &lt;targetDb&gt; [--output=&lt;path&gt;] [--assignLabels=&lt;labels&gt;] [--assignContexts=&lt;contexts&gt;] [–-scriptChecksum=&lt;checksum&gt;<code style="margin-left: 0.0px;">]</code></code>
        </p>
        <p><strong>EXAMPLE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">myAppDevDB myAppQaDB --output=/home/user/diffChangeLogsdir/diffChangeLog.xml --assignLabels=label1,label2 --assignContexts="(contextOne and contextTwo)"&#160;</code>
        </p>
        <p><strong>OPTIONS</strong>
        </p>
        <ul>
            <li><code>referenceDB</code> - database that represents the desired state, either a dbdef in the project or a snapshot file.&#160;</li>
            <li><code>targetDB</code> - database that is out of synchronization and needs to be caught up to the state of&#160;<code>referenceDB,&#160;</code>either a dbdef in the project or a snapshot file</li>
            <li><code>output</code> - if present, specifies the file for the generated changelog. Use file extension .xml. If not specified, output is written to&#160; the <code>Reports/DiffChangeLogs</code> subdirectory under the project directory. If the file exists, the results of the command (changesets) are appended to the existing file.&#160;</li>
            <li><code>assignLabels</code> - apply this set of labels applied to all changesets created. Accepts a comma separated list of labels.</li>
            <li><code>assignContexts</code> - apply this set of contexts to to all changesets created. Accepts a complex context expression.</li>
            <li><code>scriptChecksum</code>&#160;- SQL script checksum value</li>
        </ul>
        <p>
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-forecast">forecast</h1>
        <p style="margin-left: 30.0px;">Simulate unexecuted change sets and run rules against the specified database.</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">forecast &lt;dbdef&gt; [--log=/path/to/log] <code style="margin-left: 0.0px;">&#160;[--enableRowCount=exact|approximate|disabled]&#160;</code>[--report=/path/to/report] [--context=context1,context2] [--labels=&lt;label expression&gt;][--mergeLabels=override|merge|append][--limitForecast=true|false]<code style="margin-left: 0.0px;">[--immutableProject=&lt;true|false]</code></code>
        </p>
        <p><strong>EXAMPLE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">forecast myAppDevDb --log=/home/user/logs/ --report=/home/user/reports --context=dev,qa --labels="JUN AND (poolApp or beachApp)" --limitForecast=true</code>
        </p>
        <p><strong>DATICAL SERVICE OPTIONS</strong>
        </p>
        <p style="margin-left: 30.0px;">Use these options to access a project that is stored on Datical Service.&#160;</p>
        <ul>
            <li><code>--daticalServer=&lt;cluster-name&gt;&#160;</code>- The cluster name set for Datical Service. The cluster name is set during Datical Service installation.&#160;</li>
            <li><code>--daticalUsername=&lt;<code>user</code>&gt;</code> - User name, must be configured in Datical Service. Use the DATICAL_PASSWORD environment variable to provide the password.&#160;</li>
            <li><span><code>--projectKey=&lt;projectRef&gt;</code> -&#160;</span>Project to use, specified <code>&lt;projectRef&gt;</code>,&#160; a project name or project key. The project key is defined in Datical Service only.&#160;</li>
        </ul>
        <p><strong>OPTIONS</strong>
        </p>
        <ul>
            <li><code>&lt;dbdef&gt;</code> - project dbdef name of the database to use for forecasting</li>
            <li><code>log</code> - Location to write the daticaldb.log file. Log is written to <code>Logs</code> directory of project by default.</li>
            <li><code>enableRowCount - exact | approximate | disabled</code>, method for counting rows in tables. Default is disabled.&#160;<ul><li>Before v5.7 used <code>true | false</code>, with default as true. New default is <code>disabled</code>. Older projects are interpreted correctly and mapped to the new values.&#160;</li></ul></li>
            <li><code>report</code> - Location to write the forecast report. Report is written to the <code>Reports</code> directory by default.</li>
            <li><code>context</code> - Only change sets marked with the contexts specified are executed. To run all contexts, specify <code>$all</code>.</li>
            <li><code>labels</code>&#160;- When set, only change sets marked with the label expression are executed. To run all labels, specify <code>$all</code>.</li>
            <li><code>mergeLabels</code> - Label merge strategy, one of override (default), merge (AND), append (OR). Specifies how to combine labels set on the command line with labels set on the step.&#160;</li>
            <li><code>limitForecast</code> - Override the <code>limitForecast</code> project setting. Set to either <code>false</code> (default), where forecasting is done for all objects in the target database, or <code>true</code>, which limits forecasting to objects directly affected by the potential deployment.&#160;</li>
            <li><code>immutableProject</code> - When running with Datical Service options, set to <code>true</code> to use the local project files rather than download the project information from Datical Service. Helpful in automated environments where project files are kept in artifact repositories.&#160;</li>
        </ul>
        <p>
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-groovy">groovy</h1>
        <p style="margin-left: 30.0px;">Run a Groovy script. <span class="inline-comment-marker">Runs a script of Datical DB commands</span> using the Groovy script engine.&#160;&#160;</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">groovy &lt;script-name&gt; &lt;script-options&gt;</code>
        </p>
        <p><strong>EXAMPLE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">groovy myScript.groovy&#160;<code>show(project, ["dbprop", "myProject", "enableStorageOptions"])</code></code>
        </p>
        <p><strong>OPTIONS</strong>
        </p>
        <ul>
            <li><code>&lt;script-name&gt;</code> - path to a script name</li>
            <li><code>&lt;script-options&gt;</code> - Options to pass to the script</li>
        </ul>
        <p><strong>NOTES</strong>
        </p>
        <p style="margin-left: 30.0px;">To access Datical DB commands through the script, access them through the DaticalDb object. The parameters for a command are <code>(project, List&lt;String&gt; &lt;[parameters]&gt;)</code>. Use the word "project" as shown below.</p>
        <p style="margin-left: 30.0px;">Exceptions:&#160;<code>add-to-property</code> is accessed by <code>addToProperty</code> and <code>deploy-autoRollback</code> is accessed by <code>deploy-AutoRollback</code>.</p>
        <p style="margin-left: 30.0px;">Examples:</p>
        <p style="margin-left: 60.0px;"><code>help(project, [])</code>
        </p>
        <p style="margin-left: 60.0px;"><code>help(project, ["groovy"])</code>
        </p>
        <p style="margin-left: 60.0px;"><code>show(project, ["dbprop", "myProject", "enableStorageOptions"])</code>
        </p>
        <p style="margin-left: 60.0px;">
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-help">help</h1>
        <p style="margin-left: 30.0px;">Show help on Datical DB commands.</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code>help</code>
        </p>
        <p style="margin-left: 30.0px;"><code>help &lt;command&gt;|options</code>
        </p>
        <p style="margin-left: 30.0px;"><code>set help</code>
        </p>
        <p style="margin-left: 30.0px;"><code>show help</code>
        </p>
        <p><strong>EXAMPLE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">help diff</code>
        </p>
        <p><strong>OPTIONS</strong>
        </p>
        <ul>
            <li><code>&lt;command&gt;</code>&#160;- Name of the command you'd like to learn about.</li>
            <li><code>options</code> - list of options used by the commands</li>
        </ul>
        <p><strong>NOTES</strong>
        </p>
        <p style="margin-left: 30.0px;">When run without a command option, lists all available commands and a brief description of each.</p>
        <p><strong style="margin-left: 0.0px;">SEE ALSO</strong>
        </p>
        <p style="margin-left: 30.0px;">The <code>set</code> and <code>show</code> commands.&#160;</p>
        <p>
            <br />
        </p>
        <hr />
        <hr />
        <h1 id="CLICommands-history">history</h1>
        <p style="margin-left: 30.0px;">Show the applied changeset history of a database.&#160;Shows all changesets that have been applied to the specified DbDef.</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code>history &lt;dbdef&gt;</code>
        </p>
        <p><strong>EXAMPLE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code>history QAdb</code>
        </p>
        <p><strong>OPTIONS</strong>
        </p>
        <ul>
            <li><code>&lt;dbdef&gt;</code> -&#160;project dbdef name of the database to use.</li>
        </ul>
        <p>
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-insertSavedAuditData">insertSavedAuditData</h1>
        <p style="margin-left: 30.0px;">Insert all audit entries temporarily saved in the project into the user-configured Audit DB.</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code><span style="margin-left: 0.0px;">insertSavedAuditData --project=&lt;path&gt;</span></code>
            <br /><code><span>insertSavedAuditData</span></code>
        </p>
        <p><strong>OPTIONS</strong>
        </p>
        <ul>
            <li>&#160; <code>project</code> - Path to the project directory to use for inserting saved audit DB data.</li>
        </ul>
        <p><strong>NOTES</strong>
        </p>
        <p style="margin-left: 30.0px;">If run without an option, the command runs in the current directory. The command fails if the directory is not a valid project directory.</p>
        <p style="margin-left: 30.0px;">Sometimes an operation (like deploy) encounters a condition that prevents information from being written to the audit database. In that case, the information is saved to a temporary on-disk database. Use this command to move the on-disk data to the configured audit database once connectivity to the audit database has been restored.</p>
        <p>
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-installDrivers">installDrivers</h1>
        <p style="margin-left: 30.0px;">Run the custom script <code>installDrivers.groovy</code>. Installs OSGi packaged JDBC drivers from the specified update site</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code><span style="margin-left: 0.0px;">hammer installDrivers &lt;driver_update_site&gt;</span></code>
        </p>
        <p><strong>EXAMPLE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code><span style="margin-left: 0.0px;">hammer installDrivers http://update.datical.com/drivers/updates/</span></code>
        </p>
        <p><strong>NOTES</strong>
        </p>
        <p style="margin-left: 30.0px;">Update sites can be either HTTP URLs (as shown above) or directories on a file system.</p>
        <p style="margin-left: 30.0px;">Examples of <code>&lt;driver_update_site&gt;</code>:</p>
        <ul>
            <li style="margin-left: 30.0px;"><strong>Composite Archive</strong> (Windows and Linux):<span><br /><code>&#160; &#160;jar:file:/C:/Users/Pete/DaticalDBCompositeRepo-4.26.4467.zip</code><br /><code>&#160; &#160;jar:file:/home/Users/Pete/DaticalDBCompositeRepo-4.26.4467.zip<br /></code></span></li>
            <li style="margin-left: 30.0px;"><strong>Extracted Archive</strong> (Windows and Linux):<br /><span><code>&#160; &#160;file:/C:/Users/Pete/DaticalDBCompositeRepo-<span><code>4.26.4467</code></span>/</code><br /><code>&#160; &#160;file:/home/Pete/DaticalDBCompositeRepo-<span><code>4.26.4467</code></span>/</code></span></li>
        </ul>
        <p>
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-installLicense">installLicense</h1>
        <p style="margin-left: 30.0px;">Install a license file to allow continued use of Datical DB. Once a license is installed on a machine once, it does not typically need to be installed again.</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">installLicense &lt;path&gt;</code>
        </p>
        <p><strong>EXAMPLE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">installLicense /home/datical/datdb.lic</code>
        </p>
        <p><strong>OPTIONS</strong>
        </p>
        <ul>
            <li><code>&lt;path&gt;</code> - Specifies where to find the file that contains the Datical DB product license.</li>
        </ul>
        <p><strong>NOTES</strong>
        </p>
        <p style="margin-left: 30.0px;">If you need to obtain or renew a license please email&#160;<code>support@datical.com</code>.</p>
        <p>
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-licenseCounter">licenseCounter</h1>
        <p style="margin-left: 30.0px;">Count the DbDefs in use for licensing validation.</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code>hammer licenseCounter &lt;projects_dir&gt; [ showDebug=true ]</code>
        </p>
        <p><strong>EXAMPLE</strong>
        </p>
        <p style="margin-left: 30.0px;">Linux: <code>hammer licenseCounter ~/datical<br /></code>Windows: <code>hammer.bat licenseCounter C:\Datical\Projects</code></p>
        <p style="margin-left: 30.0px;">
            <br />
        </p>
        <p style="margin-left: 30.0px;">
            <br />
        </p>
        <p><strong>OPTIONS</strong>
        </p>
        <ul>
            <li><code>&lt;projects_dir&gt;</code> - Specifies the top directory to begin scanning project files.&#160; It can be a relative or absolute path. All project files in the file hierarchy under this directory are scanned.&#160;</li>
            <li><code>showDebug=true</code>&#160;- Show additional detailed information as the command runs.&#160;&#160;</li>
        </ul>
        <p><strong>NOTES</strong>
        </p>
        <p style="margin-left: 30.0px;">Output is sent to <code>stdout</code>. Redirect to a file to save it.&#160;</p>
        <p>
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-modifyChangeSet">modifyChangeSet</h1>
        <p style="margin-left: 30.0px;">Modify changeset attributes</p>
        <p>
            <br />
        </p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">modifyChangeSet --action=&lt;action&gt; --&lt;modify-option&gt;[=&lt;value&gt;, ...]... [--&lt;search-option&gt;=&lt;value&gt;, ...]...</code>
        </p>
        <p><strong>EXAMPLE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">hammer modifyChangeSet --action=ADD label=history --searchIgnore=true</code>
        </p>
        <p style="margin-left: 30.0px;"><code><code style="margin-left: 0.0px;">hammer modifyChangeSet --action=REMOVE --modifyContext=QA4 --searchContexts=QA4</code></code>
        </p>
        <p style="margin-left: 30.0px;"><code><code style="margin-left: 0.0px;">hammer modifyChangeSet --action=ADDALL --modifyContexts=DEV,PATCH01</code></code>
        </p>
        <p style="margin-left: 30.0px;"><code><code style="margin-left: 0.0px;">hammer modifyChangeSet --action=REMOVEALL --modifyContexts=PATCH01</code></code>
        </p>
        <p style="margin-left: 30.0px;"><code><code style="margin-left: 0.0px;">hammer modifyChangeSet --action=ADD --modifyContexts=DEV,NEWCONTEXT --modifyLabels=MyTestSsisPackage --searchOrigFilePaths=ssis/MyTestSsisPackage</code></code>
        </p>
        <p><strong>OPTIONS</strong>
        </p>
        <p><strong>Action</strong>
        </p>
        <ul>
            <li><code>action&#160;</code>- Specifies the action to perform, one of ADD, REMOVE, ADDALL, REMOVEALL<ul><li>All actions require at least one modify option.&#160;</li><li>If you specify ADD or REMOVE, you must also specify a search option.&#160;</li><li>If you specify ADDALL or REMOVEALL, do not specify a search option. If you do, the command fails with an error.&#160;</li></ul></li>
        </ul>
        <p><strong>Modify Option</strong>
        </p>
        <p style="margin-left: 30.0px;">At least one&#160;modify option&#160;is required. It specifies<em>what change to make</em>.&#160;It can be one of the following:</p>
        <ul>
            <li><code>modifyContexts</code>&#160;- One or a comma-separated list of values for the<code>context</code>attribute.&#160;&#160;</li>
            <li><code>modifyIgnore</code>&#160;- Change the value of the<code>ignore</code>attribute. It does not take a value. The ADD action sets<code>ignore=true</code>. The REMOVE action sets<code>ignore=false</code>.</li>
            <li><code>modifyLabels</code>&#160;- One or a comma-separated list of values for the<code>label</code>attribute.&#160;&#160;</li>
        </ul>
        <p style="margin-left: 30.0px;">When a value is added to an attribute, it is added at the end of the existing list and the order of the list is preserved. If the value already exists, it is not added again.&#160;</p>
        <p style="margin-left: 30.0px;">When a value is removed from an attribute, the order of the remaining values is preserved.&#160;</p>
        <p style="margin-left: 30.0px;">When you specify more than one modify option, all modifications of the same type (context, ID, label) are put together and applied at one time.&#160;</p>
        <p><strong>Search Option</strong>
        </p>
        <p style="margin-left: 30.0px;">The search options determine&#160;<em>which changesets to modify</em>. They select a list of changesets for the modify options to work on.&#160;</p>
        <p style="margin-left: 30.0px;">Searches are not case-sensitive.&#160;</p>
        <ul>
            <li>Multiple values in one statement are OR'ed together.&#160;</li>
            <li>Multiple search option statements are ANDed together.</li>
        </ul>
        <p style="margin-left: 30.0px;">Search option statements take one or a comma-separated list of values. They are provided for changeset attributes as follows:&#160;</p>
        <ul>
            <li><code>searchIds</code>-<code>id</code></li>
            <li><code>searchLabels</code>&#160;-<code>label</code></li>
            <li><code>searchContexts</code>-<code>context</code></li>
            <li><code>searchIgnore</code>-<code>ignore</code>-<code>true</code>&#160;|&#160;<code>false -&#160;</code>Searches for false also return changesets where the ignore attribute is not set.<code>true</code>&#160;|&#160;<code>false</code></li>
            <li><code>searchOrigFilePaths</code>-<code>origFilePath</code></li>
            <li><code>searchOrigFileNames</code>-<code>origFileName</code></li>
            <li><code>searchVersion</code>-<code>version</code>, an integer.&#160;</li>
        </ul>
        <p>
            <br />
        </p>
        <p><strong>OUTPUT</strong>
        </p>
        <p style="margin-left: 30.0px;">The command reports the number of changesets that met the search criteria. If no changesets meet the criteria, the command succeeds and reports that no changesets met the search criteria.&#160;</p>
        <p><strong>ERRORS</strong>
        </p>
        <p style="margin-left: 30.0px;">The command fails and reports an error when:</p>
        <ul>
            <li style="margin-left: 0.0px;">No action is specified or an invalid value is specified.</li>
            <li style="margin-left: 0.0px;">An action is valid but no modify options are specified.</li>
            <li style="margin-left: 0.0px;">ADDALL or REMOVEALL is specified as an action and a search option is specified.&#160;</li>
            <li style="margin-left: 0.0px;">ADD or REMOVE is specified as an action and a search option is not specified.&#160;</li>
            <li style="margin-left: 0.0px;">An invalid value is specified for<code>searchIgnore</code>. It must be<code>true</code>or<code>false</code>.&#160;&#160;</li>
        </ul>
        <p>
            <br />
        </p>
        <p><strong>NOTES</strong>
        </p>
        <p style="margin-left: 30.0px;">The <code>modifyChangeSet</code> command is intended to make it easier to work with labels and contexts.</p>
        <ul style="margin-left: 0.0px;">
            <li>Searching - Make it easier to find a changeset: Search by criteria other than a label name, particularly criteria that can be unique (origFilePath, origFileName, ID).</li>
            <li>Labels - Manage labels for a release, especially for later steps in a pipeline.</li>
            <li>Contexts - Use context settings as a gating mechanism for deploying to a specified environment (context)</li>
        </ul>
        <p style="margin-left: 30.0px;">Context expressions and label expressions are not currently supported. Use comma-separated lists for multiple values.&#160;</p>
        <p style="margin-left: 30.0px;">Starting with version 4.32, Use this command rather than the following commnds, which are deprecated and may be removed in a future release:</p>
        <ul>
            <li><code>addLabels</code>
            </li>
            <li><code>removeLabels</code>
            </li>
            <li><code>addContexts</code>
            </li>
            <li><code>removeContexts</code>
            </li>
        </ul>
        <p>
            <br />
        </p>
        <p>
            <br />
        </p>
        <div class="page" title="Page 3">
            <div class="layoutArea">
                <div class="column">
                    <hr />
                    <h1 id="CLICommands-newDbDef"><span style="color: rgb(0,0,0);">newDbDef </span>
                    </h1>
                    <p><span>Creates a new dbDef based on the key/value pairs specified as arguments.</span>
                    </p>
                    <ul style="text-align: left;">
                        <li>Oracle<ul><li>Inline Credentials: &#160;<strong>OracleDbDef</strong></li><li>Run-Time Supplied Credentials: <strong>&#160;<span style="color: rgb(51,51,51);"><span class="inline-comment-marker">DelayedCredentialOracleDbDef</span></span></strong></li></ul></li>
                        <li>SQL Server<ul><li>Inline Credentials: &#160;<strong>SqlServerDbDef</strong></li><li>Run-Time Supplied Credentials: <strong>&#160;DelayedCredentialSqlServerDbDef</strong></li></ul></li>
                        <li>Postgres Enterprise DB<ul><li>Inline Credentials: &#160;<strong>PostgresqlDbDef</strong></li><li>Run-Time Supplied Credentials: <strong>&#160;DelayedCredentialPostgresDbDef</strong></li></ul></li>
                        <li>DB2<ul><li>Inline Credentials: &#160;<strong>Db2DbDef</strong></li><li>Run-Time Supplied Credentials: <strong>&#160;DelayedCredentialDb2DbDef</strong></li></ul></li>
                        <li>(deprecated) MySQL&#160;Inline Credentials: &#160;MysqlDbDef</li>
                    </ul>
                    <p><span><br /><strong>USAGE</strong></span>
                    </p>
                    <p style="margin-left: 30.0px;"><span>newDbDef DbDefClass &lt;value&gt; name &lt;value&gt; hostname &lt;value&gt; port &lt;value&gt; username &lt;value&gt; password &lt;value&gt; database &lt;value&gt;<br /></span>
                    </p>
                    <p><strong>AVAILABLE KEYS</strong>
                    </p>
                    <ol>
                        <li>
                            <p><span>DbDefClass - Database Type. (OracleDbDef|Db2DbDef|MysqlDbDef|SqlServerDbDef|PostgresqlDbDef|<span style="color: rgb(51,51,51);">DelayedCredentialOracleDbDef|DelayedCredentialSqlServerDbDef|DelayedCredentialPostgresDbDef|DelayedCredentialDb2DbDef</span>) </span>
                            </p>
                        </li>
                        <li>
                            <p><span>name - The name for the dbDef. Used in the REPL and UI as an alias for this connection. </span>
                            </p>
                        </li>
                        <li>
                            <p><span>hostname - The hostname/ip of the target database server. </span>
                            </p>
                        </li>
                        <li>
                            <p><span>port - The port number for JDBC connections to the target database server. </span>
                            </p>
                        </li>
                        <li>
                            <p><span>username - The database user name to use for the connection. </span>
                            </p>
                        </li>
                        <li>
                            <p><span>password - The password for the database user specified. </span>
                            </p>
                        </li>
                        <li>
                            <p><span>database - (MySQL|DB2|PostGRE) The name of the database you wish to </span>
                            </p>
                            <p><span>manage. </span>
                            </p>
                        </li>
                        <li>
                            <p><span>databaseName - (SQLServer) The name of the database you wish to manage. </span>
                            </p>
                        </li>
                        <li>
                            <p><span>instanceName - (SQLServer) The name of the instance you wish to manage. </span>
                            </p>
                        </li>
                        <li>
                            <p><span>applicationName - (SQLServer) The name of the database application you wish </span>
                            </p>
                            <p><span>to manage. </span>
                            </p>
                        </li>
                        <li>
                            <p><span>sid - (Oracle) The name of the Oracle SID to which you wish connect. </span>
                            </p>
                        </li>
                        <li>
                            <p><span>serviceName - (Oracle) The name of the Oracle Service to which you wish </span>
                            </p>
                            <p><span>connect. </span>
                            </p>
                        </li>
                        <li>
                            <p><span>defaultSchemaName - The name of the schema/catalog you wish to manage. </span>
                            </p>
                        </li>
                        <li>
                            <p><span>contexts - A comma separated list of contexts to associate with the new dbDef.</span>
                            </p>
                        </li>
                    </ol>
                    <p>
                        <br />
                    </p>
                </div>
            </div>
        </div>
        <div class="page" title="Page 4">
            <div class="layoutArea">
                <div class="column">
                    <hr />
                    <h1 id="CLICommands-newProject"><span style="color: rgb(0,0,0);">newProject </span>
                    </h1>
                    <p><span>Creates a new empty project in the current directory.</span>
                    </p>
                    <p><strong>USAGE</strong>
                    </p>
                    <p style="margin-left: 30.0px;"><span><code>newProject [projectName]</code></span>
                    </p>
                    <p><strong>EXAMPLE</strong>
                    </p>
                    <div class="layoutArea">
                        <div class="column">
                            <p style="margin-left: 30.0px;"><code><span>newProject myProject</span></code>
                            </p>
                        </div>
                    </div>
                    <p><span><strong>OPTIONS</strong></span>
                    </p>
                    <ul>
                        <li><span><code>projectName</code> - Specifies the project name. If&#160;not specified, the name <strong>newProject</strong> is used.</span>
                        </li>
                    </ul>
                    <p><span><strong>NOTES</strong><br /></span>
                    </p>
                    <p style="margin-left: 30.0px;"><span>Create the project directory before creating the project. This command does NOT create a new directory for the project.&#160;</span>
                    </p>
                </div>
            </div>
            <div class="layoutArea">
                <div class="column">
                    <p>
                        <br />
                    </p>
                </div>
            </div>
        </div>
        <hr />
        <h1 id="CLICommands-removeContexts">removeContexts</h1>
        <p style="margin-left: 30.0px;">Remove contexts from changesets.&#160;</p>
        <div class="confluence-information-macro confluence-information-macro-information conf-macro output-block">
            <p class="title">Note</p>
            <div class="confluence-information-macro-body">Starting with v4.32, please use the <code>modifyChangeSet</code> command. The <code>removeContexts</code> command is deprecated and support may be removed in the future.&#160;</div>
        </div>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code>removeContexts&#160;--lookupChangeset=&lt;label-expression&gt; --context=&lt;contexts&gt; [--scriptChecksum=][--matchAll=true|false]</code>
        </p>
        <p><strong>OPTIONS</strong>
        </p>
        <ul>
            <li><code>lookupChangesets </code>- Label expression used to matchthe change sets (required)</li>
            <li><code>context</code> - Comma-separated list of contexts (required)</li>
            <li><code>scriptChucksum</code> - SQL script checksum value</li>
            <li><code>matchAll</code> - SQL Script checksums must match for change set lookup. Default value is true.&#160;</li>
        </ul>
        <p><strong>NOTES</strong>
        </p>
        <p style="margin-left: 30.0px;">The value of the <code>scriptChecksum</code> parameter can be used to further qualify change sets that match the label expression. This is used primarily in the Deployment Packager to confirm that the change set was generated by the expected version of a script.</p>
        <p style="margin-left: 30.0px;">The value of the <code>matchAll</code> parameter impacts the matching behavior of the <code>scriptChecksum</code> parameter.</p>
        <ul>
            <li style="margin-left: 30.0px;">If <code>matchAll</code> is true, all change sets identified by the label expression must have a <code>scriptChecksum</code> attribute that matches the attribute passed on the command line.</li>
            <li style="margin-left: 30.0px;">If <code>matchAll</code> is false,only one change set returned by the label expression needs to have a matching <code>scriptChecksum</code> attribute.</li>
        </ul>
        <p>
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-removeLabels">removeLabels</h1>
        <p style="margin-left: 30.0px;">Remove labels from changesets.&#160;</p>
        <div class="confluence-information-macro confluence-information-macro-information conf-macro output-block">
            <p class="title">Note</p>
            <div class="confluence-information-macro-body">Starting with v4.32, please use the <code>modifyChangeSet</code> command. The <code>removeLabels</code>&#160;command is deprecated and support may be removed in the future.&#160;</div>
        </div>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code>removeLabels&#160;<code>--lookupChangeset=&lt;label-expression&gt; --context=&lt;contexts&gt; [--scriptChecksum=][--matchAll=true|false]</code></code>
        </p>
        <p><strong>OPTIONS</strong>
        </p>
        <ul>
            <li><code>lookupChangesets </code>- Label expression used to match the change sets (required)</li>
            <li><code>context</code> - Comma-separated list of contexts (required)</li>
            <li><code>scriptChucksum</code> - SQL script checksum value</li>
            <li><code>matchAll</code> - SQL Script checksums must match for change set lookup. Default value is true.&#160;</li>
        </ul>
        <p><strong>NOTES</strong>
        </p>
        <p style="margin-left: 30.0px;">The value of the <code>scriptChecksum</code> parameter can be used to further qualify change sets that match the label expression. This is used primarily in the Deployment Packager to confirm that the change set was generated by the expected version of a script.</p>
        <p style="margin-left: 30.0px;">The value of the <code>matchAll</code> parameter impacts the matching behavior of the <code>scriptChecksum</code> parameter.</p>
        <ul>
            <li style="margin-left: 30.0px;">If <code>matchAll</code> is true, all change sets identified by the label expression must have a <code>scriptChecksum</code> attribute that matches the attribute passed on the command line.</li>
            <li style="margin-left: 30.0px;">If <code>matchAll</code> is false,only one change set returned by the label expression needs to have a matching <code>scriptChecksum</code> attribute.</li>
        </ul>
        <p>
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-rollback">rollback</h1>
        <p style="margin-left: 30.0px;">Roll back the target database to a specified revision, date or by number of steps.</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code>rollback &lt;dbdef&gt; lastlabel </code>
            <br /><code>rollback &lt;dbdef&gt; changeid:&lt;changesetId&gt; </code>
            <br /><code>rollback &lt;dbdef&gt; count:&lt;num&gt; </code>
            <br /><code>rollback &lt;dbdef&gt; date:&lt;date&gt; </code>
            <br /><code>rollback &lt;dbdef&gt; tag:&lt;tag_name&gt; </code>
            <br /><code>rollback &lt;dbdef&gt; lastDeploy</code>
        </p>
        <p style="margin-left: 30.0px;">
            <br />
        </p>
        <div class="confluence-information-macro confluence-information-macro-information conf-macro output-block">
            <p class="title">Note</p>
            <div class="confluence-information-macro-body">
                <p>If you are using a current packaging methodology (Deployment Packager with SCM), use only the <code>lastDeploy</code> option. Other options support older methodologies.&#160;</p>
            </div>
        </div>
        <p style="margin-left: 30.0px;">
            <br />
        </p>
        <p><strong>EXAMPLE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code>rollback &lt;dbdef&gt; lastDeploy --pipeline=FeatureA</code>
        </p>
        <p style="margin-left: 30.0px;">
            <br />
        </p>
        <p><strong>OPTIONS</strong>
        </p>
        <ul>
            <li><code>lastlabel</code> - Remove all changes associated with the last label deployed. Certain preconditions must be met for this mode to succeed.</li>
            <li><code>changeid:&lt;changesetID&gt;</code>&#160;- Roll back to the <code>&lt;changesetId&gt;&#160;</code>change set in the change log.</li>
            <li><code>count:&lt;num&gt;</code>&#160;- Roll back the last <code>&lt;num&gt;</code> change sets.</li>
            <li><code>date:&lt;date&gt;</code> - Roll back all change sets applied after <code>&lt;date&gt;</code>.</li>
            <li><code>tag:&lt;tag_name&gt;</code> - Roll back to <code>&lt;tag_name&gt;</code>. The tag <code>&lt;tag_name&gt;</code> must have been specified for a previous changeset.</li>
            <li><code>lastDeploy</code>&#160;- Remove all changes associated with the last <code>deploy</code> operation.&#160;</li>
            <li><code>pipeline</code> - Specifies the pipeline&#160;associated with the changelogSync for auditing purposes.<ul><li>If not set and the dbDef is a member of only one pipeline, then that pipeline is used.</li><li>If not set and the dbDef is a member of multiple pipelines, then an error is returned.</li></ul></li>
        </ul>
        <p><strong>OPTION VALUES</strong>
        </p>
        <ul>
            <li><code>&lt;dbdef&gt;</code> - Name of a DbDef in the current project.</li>
            <li><code>&lt;changesetId&gt;</code> - The author and id of a change set. Format: "id=createTable1,author=Datical User"</li>
            <li><code>&lt;num&gt;</code>&#160;- Number of change sets to revert.</li>
            <li><code>&lt;date&gt;</code> - Date boundary used to determine which change sets will be reverted. Format: yyyy-MM-dd</li>
            <li><code>&lt;tag_name&gt;</code> - Datical tag name to which you wish to rollback. Requires that you tag the database in a previous change set.</li>
        </ul>
        <p>
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-schemaStats">schemaStats</h1>
        <p style="margin-left: 30.0px;">Display summary schema info. Shows summary info about the database model represented by the changelog.</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">schemaStats</code>
        </p>
        <p style="margin-left: 30.0px;">
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-set">set</h1>
        <p style="margin-left: 30.0px;">Set properties for the project and database.&#160;</p>
        <p style="margin-left: 30.0px;">The set command provides help for the subcommands.</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">set &lt;property&gt; &lt;values&gt;</code>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">set help</code>
        </p>
        <p><strong>PROPERTIES</strong>
        </p>
        <ul style="margin-left: 0.0px;">
            <li><code>alternateSchema</code> - Set the alternate schema for the project.</li>
        </ul>
        <p style="margin-left: 60.0px;">USAGE: <code>set alternateSchema &lt;schema name&gt;</code></p>
        <ul style="margin-left: 0.0px;">
            <li><code>autoGenSQL</code> – control whether or not SQL scripts are automatically generated during Forecast, Deploy, and Rollback operations.</li>
        </ul>
        <p style="margin-left: 60.0px;">USAGE: <code>set autoGenSQL true|false</code></p>
        <ul style="margin-left: 0.0px;">
            <li><code>dbprop</code> - Set a database property in a project.</li>
        </ul>
        <p style="margin-left: 60.0px;">USAGE: <code>set dbprop [dbdef] [propertyName] [propertyValue]</code></p>
        <ul>
            <li style="margin-left: 60.0px;"><code>dbdef</code> - the name of a database definition&#160;in the current project.</li>
            <li style="margin-left: 60.0px;">propertyName - a property name. The only property currently supported is <code>enableStorageOptions</code>. This property controls whether or not storage options are collected for a specific database definition&#160;during the snapshot command. Storage Option information includes storage configuration, tablespace/filegroup assignments, large object storage parameters and partitioning information for tables and indexes. This defaults to <code>false</code>.</li>
            <li style="margin-left: 60.0px;">propertyValue - a property value (must be valid for the type of the property).</li>
        </ul>
        <p style="margin-left: 60.0px;">EXAMPLE: <code>set dbProp QDdb enableStorageOptions true</code></p>
        <ul>
            <li><code>deployMode</code> – controls how much work is done during Deploy operations.&#160;</li>
        </ul>
        <p style="margin-left: 60.0px;">USAGE: <code>set deployMode quick|full</code></p>
        <ul>
            <li style="margin-left: 60.0px;"><code>full&#160;</code>- performs rules validation and runs a forecast before deploying the changes, subject to <code>limitForecast</code>.</li>
            <li style="margin-left: 60.0px;"><code>quick</code> - deploys the changes (no rules valildation or forecast)</li>
            <li><code>deployThreshold</code> – controls what happens when a full deploy detects errors or warnings in rules or in forecast.</li>
        </ul>
        <p style="margin-left: 60.0px;">USAGE: <code>set deployThreshold stopOnError|stopOnWarn|deployAlways&gt;</code></p>
        <ul>
            <li style="margin-left: 60.0px;"><code>stopOnError</code> - Deployment is not performed when errors are present in Pre-Deployment validation</li>
            <li style="margin-left: 60.0px;"><code>stopOnWarn</code> - Deployment is not performed when errors and/or Warnings are present in Pre-Deployment validation</li>
            <li style="margin-left: 60.0px;"><code>deployAlways</code> - Deploy proceeds regardless of validation results. NOT RECOMMENDED</li>
            <li>enableRowCount - set methof for counting rows in tables.&#160;</li>
        </ul>
        <p style="margin-left: 60.0px;">Changed in v5.7 from <code>true | false</code> with default of true. New default is <code>disabled</code>. Older projects are interpreted correctly and mapped to the new values.&#160;</p>
        <p style="margin-left: 60.0px;">USAGE: <code>set enableRowCount exact | approximate | disabled</code></p>
        <ul>
            <li style="margin-left: 60.0px;"><code>exact</code> - Uses a table scan to count the number of rows in each table.&#160;</li>
            <li style="margin-left: 60.0px;"><code>approximate</code> - Uses database statistics to approximate the number of rows.&#160;</li>
            <li style="margin-left: 60.0px;"><code>disable</code>&#160;- Does not count table rows.&#160;</li>
            <li><code>externalStoredLogic</code> - Set whether stored logic definitions (stored procedures, etc.) are stored in external files or within the project changelog.</li>
        </ul>
        <p style="margin-left: 60.0px;">USAGE: <code>set externalStoredLogic &lt;true|false&gt;</code></p>
        <ul>
            <li><code>forecastDML</code> - controls whether Datical DB attempts to forecast DML (Data Manipulation Language).&#160;</li>
        </ul>
        <p style="margin-left: 60.0px;">USAGE: set forecastDML <code>true | false</code>&#160;</p>
        <ul>
            <li style="margin-left: 60.0px;"><code>true</code> - forecasts predict whether a DML change will be successful</li>
            <li style="margin-left: 60.0px;"><code>false</code> - forecasts warn that any DML change encountered will not be forecast</li>
            <li><code>help &lt;property&gt;</code> - show more help about a property.&#160;</li>
            <li><code>invalidsCheck</code> – controls how to check the validity of stored logic after deployment</li>
        </ul>
        <p style="margin-left: 60.0px;">USAGE: <code>set invalidsCheck disabled|limited|local|global</code></p>
        <ul>
            <li style="margin-left: 60.0px;"><code>disabled</code> - do not perform the check</li>
            <li style="margin-left: 60.0px;"><code><code>limite</code></code><code>d</code> - only check objects targeted by a deployment and their dependencies</li>
            <li style="margin-left: 60.0px;"><code>local</code> - check the target schema only</li>
            <li style="margin-left: 60.0px;"><code>global</code> - check all schema in the database</li>
            <li><code>limitForecast</code> - controls how Datical DB behaves during forecast operations. Forecast operations run faster if set to true, but some rules are not checked.&#160;</li>
        </ul>
        <p style="margin-left: 60.0px;">USAGE: <code>set limitForecast true|false</code></p>
        <ul>
            <li style="margin-left: 60.0px;"><code>true</code> - limit object profiling to those directly affected by the forecast&#160;</li>
            <li style="margin-left: 60.0px;"><code>false</code> - profile all objects in the target database</li>
            <li><code>property</code> - Sets the specified property to a given value.&#160;The only property currently supported is <code>drivers</code>. This points to the directory where you've stored your JDBC drivers.</li>
        </ul>
        <p style="margin-left: 60.0px;">USAGE: <code>set property [propertyName] [propertyValue]</code></p>
        <p style="margin-left: 60.0px;">EXAMPLE: <code>set property drivers /path/to/driver/dir</code></p>
        <ul>
            <li><code>requireOptions</code> – controls whether or not labels or contexts are required for Forecast and Deploy</li>
        </ul>
        <p style="margin-left: 60.0px;">USAGE: <code>set requireOptions true|false</code></p>
        <ul>
            <li><code>runtimeCredentials</code> - controls whether database credentials are stored or prompted at run time.&#160;Default: false. If set to true, all stored credentials are removed and you are prompted for database credentials during forecasting and deployment. If set to false, database credentials are encoded and stored in the project.&#160;</li>
        </ul>
        <p style="margin-left: 60.0px;">USAGE <code>set runtimeCredentials true|false&#160;</code></p>
        <ul>
            <li style="margin-left: 60.0px;"><code>true </code>- all stored credentials (if any) are removed. You are prompted for database credentials during forecasting and deployment.</li>
            <li style="margin-left: 60.0px;"><code>false </code>- (default) database credentials are stored in the project.</li>
        </ul>
        <ul>
            <li><code>scriptExecutionTimeout</code> - sets a limit on how long Datical DB will wait for a script to run</li>
        </ul>
        <p style="margin-left: 60.0px;">USAGE: <code>set scriptExecutionTimeout &lt;dbdefName&gt; &lt;seconds&gt;&#160;</code></p>
        <ul>
            <li style="margin-left: 60.0px;"><code>dbdefName</code> - name of the dbdef where the limit is applied</li>
            <li style="margin-left: 60.0px;"><code>seconds</code> - number of seconds. If set to 0, there is no timeout limit. The default value is 0.&#160;<br /><br /></li>
            <li><code><span>storageOptionsScope&#160;</span></code>- Specifies what storage information to use in snapshot and diff operations for all steps/dbdefs in the project. For&#160;<code>&lt;arg&gt;</code>, specify one of <code>all</code>, <code>lob</code>, <code>tablespace</code>, <code>tablespaceAndLob</code>.&#160; The default is <code>all</code>. This setting works only for steps/dbdefs that have <code>enableStorageSettings</code> set to <code>true</code>.&#160;</li>
        </ul>
        <p style="margin-left: 60.0px;">USAGE:<code>set <span>storageOptionsScope&#160;</span>&lt;arg&gt;</code></p>
        <ul>
            <li style="list-style-type: none;">
                <ul>
                    <li><code>&lt;arg&gt;</code> - one of&#160; <code>all, lob, tablespace, or tablespaceAndLob<br /><br /></code></li>
                </ul>
            </li>
        </ul>
        <p><strong>SEE ALSO</strong>
        </p>
        <p style="margin-left: 30.0px;"><code>show</code> command</p>
        <p>
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-show">show</h1>
        <p style="margin-left: 30.0px;">Display properties of the project and Datical DB.</p>
        <p><strong><strong>USAGE</strong></strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">show &lt;property&gt;</code>
        </p>
        <p><strong>PROPERTIES</strong>
        </p>
        <ul>
            <li><code>autoGenSQL</code> - show whether the project automatically generates SQL when deploying</li>
            <li><code>bundles</code> - lists the OSGI bundles in the runtime environment. Used by Datical support for diagnostics.&#160;</li>
            <li><code>databases</code> - lists all the databases that are in the project.</li>
            <li style="margin-left: 0.0px;"><code>dbprop</code> - shows a database property in a project.</li>
        </ul>
        <p style="margin-left: 60.0px;">USAGE: <code>show dbprop [dbdef] [propertyName]</code></p>
        <ul>
            <li style="margin-left: 60.0px;">dbdef - the name of a database definition&#160;in the current project.</li>
            <li style="margin-left: 60.0px;">propertyName - a property name. Currently only <code>enableStorageOptions</code> is supported.</li>
            <li><code>deployMode </code>- full or quick</li>
            <li><code>deployThreshold </code>-&#160;stopOnError, stopOnWarn, or deployAlways</li>
            <li><code>enableRowCount - exact | approximate | disabled</code>, method for counting rows in tables. Default is disabled.&#160;<ul><li>Before v5.7 used <code>true | false</code>, with default as true. New default is <code>disabled</code>. Older projects are interpreted correctly and mapped to the new values.&#160;</li></ul></li>
            <li><code>externalStoredLogic&#160;</code>- true or false. If true, store external functions (like stored procedures) in external files. Otherwise they are stored in the changelog.&#160;</li>
            <li><code>help &lt;property&gt;</code> - show more help about a property.&#160;</li>
            <li><code>invalidsCheck - global|local|limited|disabled - </code>how to check stored logic validity during deployment:<code> local </code>- target schema (default)<code>, global </code>- all schema in the target database<code><code>,&#160;<code>limited&#160;</code><span style="font-family: Arial, sans-serif;">- available with 5.3 or higher, only objects targeted by a deployment and their dependencies</span><code>,&#160;</code></code></code><code>disabled - </code>no validation check</li>
            <li><code>languages - </code>lists all scripting languages that are supported by the current Java runtime</li>
            <li><code>license</code> - shows status of the license: whether it is installed, issue date, expiration date</li>
            <li><code>limitForecast - </code>true or false, limit object profiling to only affected. All objects are profiled if set to true.&#160;</li>
            <li><code>project</code> - name and description of the current project.</li>
            <li><code>properties</code> - shows all the properties that have been set.</li>
            <li><code>property</code> - shows the value of the given propertyname.</li>
        </ul>
        <p style="margin-left: 60.0px;">USAGE: show property &lt;propertyName&gt;</p>
        <ul>
            <li><code>requireoptions </code>- true or false, whether contexts and labels are required for Forecast and Deploy</li>
            <li><code>runtimeCredentials - </code>true or false, whether user is prompted at run time for database user credentials. Otherwise stored encoded credentials are used.&#160;</li>
            <li><code>scriptExecutionTimeout - </code>number of seconds, 0 if unlimited.</li>
        </ul>
        <p style="margin-left: 60.0px;">USAGE: <code>show scriptExecutionTimeout [dbdef]&#160;</code></p>
        <ul>
            <li style="margin-left: 60.0px;">dbdef - name of a database definition in the current project</li>
            <li><code>version</code> - shows version information for the components of Datical DB</li>
        </ul>
        <p><strong>SEE ALSO</strong>
        </p>
        <p style="margin-left: 30.0px;"><code>set</code> command&#160;</p>
        <p style="margin-left: 30.0px;">
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-snapshot">snapshot</h1>
        <p style="margin-left: 30.0px;">Capture a snapshot of a database as either a persistent object file or a changelog</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code>snapshot &lt;deploymentStep&gt; <code>[--format=dbobject|changelog]</code>[--output=][--ddExcludeList=&lt;object-list&gt;][--snapshotSchemaList=&lt;schema-list]</code>
        </p>
        <p><strong>EXAMPLE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code>snapshot DEVdb --output=/home/user/snapshots/</code>
        </p>
        <p><strong>OPTIONS</strong>
        </p>
        <ul style="margin-left: 0.0px;">
            <li><code>format </code>- Specifies the format of the output, <code>dbobject</code> (default) or <code>changelog</code>.&#160;<ul><li><code>dbobject </code>- object list that can be used by the <code>diff</code> and <code>diffChangelog</code> commands</li><li><code>changelog </code>- XML file suitable for an initial project changelog</li></ul></li>
            <li><code>output=&lt;path&gt;</code> - When present, the changelog generated is written to the directory specified by <code>&lt;path&gt;</code>. By default file is written to the <code>Snapshots</code> directory of the project.</li>
            <li><code>ddExcludeList</code> - comma-separated list of object types to exclude from the snapshot. Can be <code>all</code>, <code>none</code>, or a list containing any combination of <code>procedure</code>, <code>function</code>, <code>package</code>, <code>packagebody</code>, <code>trigger</code>, <code>view</code>.&#160;</li>
            <li><code>snapshotSchemaList</code> - comma-separated list of schemas to include in the snapshot</li>
        </ul>
        <p><strong>NOTES</strong>
        </p>
        <p style="margin-left: 30.0px;">If the current project is set to externalize stored logic, the stored logic is written to a <code>Resources</code>&#160;subdirectory. See the set command for a subcommand to see the values for a subcommand.&#160;within the date stamped directory created by the snapshot process.</p>
        <p>
            <br />
        </p>
        <hr />
        <hr />
        <h1 id="CLICommands-status">status</h1>
        <p style="margin-left: 30.0px;">Show the deployment status of a database.</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code>status [dbdef]</code>
        </p>
        <p><strong>EXAMPLE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code>status QAdb</code>
        </p>
        <p style="margin-left: 30.0px;"><code>hammer --daticalServer=dmc_server_url --daticalUsername=user_name status datical_project_name</code>
        </p>
        <p><strong>DATICAL SERVICE OPTIONS</strong>
        </p>
        <p style="margin-left: 30.0px;">Use these options to access a project that is stored on Datical Service.&#160;</p>
        <ul>
            <li><code>--daticalServer=&lt;cluster-name&gt;&#160;</code> - The cluster name set for Datical Service. The cluster name is set during Datical Service installation.&#160;</li>
            <li><code>--daticalUsername=&lt;<code>user</code>&gt;</code> - User name, must be configured in Datical Service. Use the DATICAL_PASSWORD environment variable to provide the password.&#160;</li>
            <li>status - keyword that identifies this as a status command</li>
            <li><span><code>&lt;projectRef&gt;</code> -&#160;</span>Project to use, specified <code>&lt;projectRef&gt;</code>,&#160; a project name or project key. The project key is defined in Datical Service only.&#160;</li>
        </ul>
        <p><strong>OPTIONS</strong>
        </p>
        <ul>
            <li><code>dbdef</code>&#160;- Name of a database definition in the project.&#160;</li>
        </ul>
        <p><strong>OUTPUT</strong>
        </p>
        <p style="margin-left: 30.0px;">For each dbdef, the status reported is one of the following.</p>
        <ul>
            <li>Deployed - all changesets in REF are deployed on the dbdef (managed database)</li>
            <li>Undeployed - not all changesets in REF are deployed on the dbdef</li>
            <li>Error <strong>- </strong>cannot contact database, no JDBC found, others</li>
        </ul>
        <p><strong>NOTES</strong>
        </p>
        <p style="margin-left: 30.0px;">The status command reports on all dbdefs (databases) in the project unless you specify an individual dbdef.&#160;</p>
        <p style="margin-left: 30.0px;">Status is determined by comparing the changesets in the REF database (the changelog) to the changesets listed in the tracking tables for each database.&#160;</p>
        <p style="margin-left: 30.0px;">
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-statusDetails">statusDetails</h1>
        <p style="margin-left: 30.0px;">Show the detailed status for each of the changesets in the <span class="inline-comment-marker">changelog</span>.&#160;</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code><span class="inline-comment-marker">statusDetails &lt;DbDef&gt;</span></code>
        </p>
        <p><strong>EXAMPLE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code>statusDetails QAdb</code>
        </p>
        <p><strong style="margin-left: 0.0px;">NOTES</strong>
        </p>
        <p style="margin-left: 30.0px;">If you run <code>statusDetails</code> without a DbDef, a message prompts you to provide one and lists the available DbDefs.</p>
        <p style="margin-left: 30.0px;">Changesets are shown in three categories: Deployed, Undeployed, Ignored. The total number if changesets in each state is shown.&#160;</p>
        <p><strong>OUTPUT</strong>
        </p>
        <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
            <div class="codeHeader panelHeader pdl hide-border-bottom" style="border-bottom-width: 1px;"><b class="code-title">statusDetails Output</b><span class="collapse-source expand-control" style="display: none;"><span class="expand-control-text">Expand source</span></span>
            </div>
            <div class="codeContent panelContent pdl hide-toolbar"><pre class="syntaxhighlighter-pre" xml:space="preserve">Database:  Source

Deployed Change Sets: (1)
   ______________________________________________________________________________________
   | Change Set   | Contexts| Labels| DBMS| Date Run                    | Comments       |
   |=====================================================================================|
1. | BBB_Table1_id|         | table1|     | Fri Sep 29 17:21:40 CDT 2017| createTable    |
2. |              |         |       |     |                             | tableName=BBB_1|

Undeployed Change Sets: (1)
   ________________________________________________________________
   | Change Set   | Contexts| Labels| DBMS| Reason| Comments       |
   |===============================================================|
1. | BBB_Table2_id|         | table2|     | New   | createTable    |
2. |              |         |       |     |       | tableName=BBB_2|

Ignored Change Sets: (0)
  NONE</pre>
            </div>
        </div>
        <p style="margin-left: 30.0px;">
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-testConnect">testConnect</h1>
        <p style="margin-left: 30.0px;">Test the database connection for one or more databases.</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code>testConnect &lt;DbDef&gt;</code>
        </p>
        <p><strong>EXAMPLE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code>testConnect QAdb</code>
        </p>
        <p><strong>NOTES</strong>
        </p>
        <p style="margin-left: 30.0px;">If run without a DbDef, it tests the connections to all DbDefs in the project.</p>
        <p style="margin-left: 30.0px;">
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-uninstallDrivers">uninstallDrivers</h1>
        <p style="margin-left: 30.0px;">Run the custom script <code>uninstallDrivers.groovy</code>. Removes JDBC drivers.&#160;</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">uninstallDrivers</code>
        </p>
        <p style="margin-left: 30.0px;">
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-uninstallLicense">uninstallLicense</h1>
        <p style="margin-left: 30.0px;">Removes any installed DaticalDB licenses.&#160;</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code style="margin-left: 0.0px;">uninstallLicense</code>
        </p>
        <p style="margin-left: 30.0px;">
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-validateStoredLogic">validateStoredLogic</h1>
        <p style="margin-left: 30.0px;">Compile stored logic and report any validation errors.</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code>validateStoredLogic &lt;dbdef&gt;</code>
        </p>
        <p><strong>OPTIONS</strong>
        </p>
        <ul>
            <li><code>dbdef</code>&#160;- Name of a database definition in the project.&#160;</li>
        </ul>
        <p>
            <br />
        </p>
        <p>
            <br />
        </p>
        <hr />
        <h1 id="CLICommands-versionChangeLog">versionChangeLog</h1>
        <p style="margin-left: 30.0px;">Upgrade project changelog to the current version.</p>
        <p><strong>USAGE</strong>
        </p>
        <p style="margin-left: 30.0px;"><code>versionChangeLog&#160;[--force]</code>
        </p>
        <p><strong>OPTIONS</strong>
        </p>
        <ul>
            <li><code>force</code> - also forces the XML header to be checked, validated, and updated. Output includes the message "Forcing XML header check..."</li>
        </ul>
        <p><strong>NOTES</strong>
        </p>
        <p style="margin-left: 30.0px;">Required: the current directory is a valid project directory.</p>
        <p style="margin-left: 30.0px;">Output tells you the current version and upgraded version of the project changelog.&#160;</p>
        <p style="margin-left: 30.0px;">You can only upgrade the changelog&#160; version. Downgrading the version is not supported.&#160;</p>
        <p style="margin-left: 30.0px;">
            <br />
        </p>
    </body>
</html>