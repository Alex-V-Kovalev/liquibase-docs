<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title>log-level | Liquibase Docs</title>
        <meta rel="canonical" href="https://docs.liquibase.com/parameters/log-level.html" />
        <meta name="description" content="Reference information for the log-level parameter. The log-level parameter controls the amount of messages that are generated when running Liquibase commands." />
    </head>
    <body>
        <h1><code>log-level</code>
        </h1>
        <p>The <code>--log-level</code> parameter controls the amount of messages that are generated when running <MadCap:variable name="General.Liquibase" /> commands.  The <code>--log-level</code> can be set to the following values:</p>
        <ul>
            <li><code>SEVERE</code> (highest level) – Show <b>serious failures</b> that may prevent program execution.</li>
            <li><code>WARNING</code> – Show <b>potential problems</b> for program execution.</li>
            <li><code>INFO</code> – Show <b>informational messages</b>.</li>
            <li><code>FINE</code> (lowest level; formerly <code>DEBUG</code>) – Show <b>tracing information</b> of program execution and minor failures.</li>
            <li><code>OFF</code> – Hide all log messages.</li>
        </ul>
        <p>If you set <code>--log-level</code> to a particular level, it will show all messages at that level and at higher levels of importance.</p>
        <p>The <code>--log-level</code> default value is <code>OFF</code>. However, if you use the <code>--log-file</code> <MadCap:variable name="General.Param/Attribute" /> to send your logs to a different file and don't specify the <code>--log-level</code> parameter, <MadCap:variable name="General.Liquibase" /> will automatically change the <code>--log-level</code> default value from <code>OFF</code> to <code>SEVERE</code>.</p>
        <h2>Uses</h2>
        <p>The <code>--log-level</code> parameter applies to all <MadCap:variable name="General.Liquibase" /> commands.  It can be used to get more information about the actions that <MadCap:variable name="General.Liquibase" /> commands perform, as well as provide helpful information to resolve errors.  </p>
        <p>The value of <code>SEVERE</code> provides messages regarding serious errors.  You may find it useful to set the <code>--log-level</code> to <code>INFO</code> to see a more complete list of the operations that a command performs.  Use the <code>FINE</code> level to help resolve errors.</p>
        <h2>Using the <code>--log-level</code> parameter</h2>
        <p>The <code>--log-level</code> is an optional parameter that is either set in the <MadCap:variable name="General.Liquibase" /> properties file or specified on the command line.  The <code>--log-level</code> specified on the command line overrides the value set in the properties file.</p>
        <h3>Examples:</h3><pre xml:space="preserve"><code class="language-text">liquibase --log-level=FINE update</code></pre><pre xml:space="preserve"><code class="language-text">liquibase --log-level=INFO update-testing-rollback</code></pre>
        <h2>Using the <code>--sql-log-level</code> property alongside <code>--log-level</code></h2>
        <p>The SQL log level is set to <code>FINE</code>by default. This behavior can be modified using <code>--sql-log-level</code> property. 
		
		</p>
        <p>For example, if you would like the log SQL statements to have the INFO log level, then you would specify <code>--sql-log-level=INFO</code> in your Liquibase command as follows:</p><pre xml:space="preserve"><code class="language-text">liquibase --sql-log-level=INFO --log-level=INFO update</code></pre>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">The <code>--log-level</code> property is required for <code>--sql-log-level</code> to operate successfully.</p>
        <h2>Alternative Avenues to specify <code>--sql-log-level</code></h2>
        <p>Avenue 1: Define JAVA_OPTS environment variable prior to running your Liquibase command: </p>
        <p><code>JAVA_OPTS="-Dliquibase.sql.logLevel=INFO -Dliquibase.logLevel=INFO"</code>
        </p>
        <p>Avenue 2: Define Liquibase Pro environment variables: </p>
        <p><code>LIQUIBASE_SQL_LOG_LEVEL=INFO and LIQUIBASE_LOG_LEVEL=INFO</code>
        </p>
        <p>Avenue 3: Command line argument: </p>
        <p><code>--sql-log-level=INFO --log-level=INFO</code>
        </p>
        <p>Avenue 4: liquibase.properties setting: </p>
        <p><code>liquibase.sql.logLevel=INFO and liquibase-logLevel=INFO</code>
        </p>
        <h2>Related links</h2>
        <ul>
            <li>
                <p><a href="https://docs.oracle.com/javase/7/docs/api/java/util/logging/Level.html">Oracle:&#160;Java Class&#160;Levels</a>
                </p>
            </li>
        </ul>
    </body>
</html>