<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Default.EXCLUDE" MadCap:searchable="False">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <meta rel="canonical" href="https://docs.liquibase.com/concepts/changelogs/structure-changelogs.html" />
        <meta name="description" content="Reference information and best practices on how to structure your Liquibase changelogs." />
    </head>
    <body>
        <h1>Choose a Changelog Structure</h1>
        <p>Your <a href="home.html"><MadCap:variable name="General.changelog" /></a> is the core of your <MadCap:variable name="General.Liquibase" /> project. While you can use one <MadCap:variable name="General.changelog" /> for all your deployments, this may not scale well. Instead, you can use multiple <MadCap:variable name="General.changelog" />s for different purposes. To organize multiple <MadCap:variable name="General.changelog" />s, you can use the <code><MadCap:xref href="../../change-types/include.html">include</MadCap:xref></code> and <code><MadCap:xref href="../../change-types/includeall.html">includeAll</MadCap:xref></code> tags to create a main <MadCap:variable name="General.changelog" /> and one or more nested <MadCap:variable name="General.changelog" />s. This document explains some best practices on structuring your <MadCap:variable name="General.changelog" />s.</p>
        <h2>Prerequisites</h2>
        <p>If you're new to <MadCap:variable name="General.Liquibase" />, make sure you understand the fundamentals before creating your own project:</p>
        <ol>
            <li>
                <MadCap:xref href="install/home.htm">Install [%=General.Liquibase%]</MadCap:xref> – Download <MadCap:variable name="General.Liquibase" /> on your machine</li>
            <li>
                <MadCap:xref href="home.htm">Get Started with [%=General.Liquibase%]</MadCap:xref> – Learn how to use <MadCap:variable name="General.Liquibase" /> with an example database</li>
        </ol>
        <h2>Create a project</h2>
        <p>The Get Started guide linked previously shows you how <MadCap:variable name="General.Liquibase" /> deployments work using a sample database and <MadCap:variable name="General.changelog" />. However, your organization's needs go beyond a demonstration. To create a new <MadCap:variable name="General.Liquibase" /> project, run the <code><MadCap:xref href="../../commands/init/project.htm">init project</MadCap:xref></code> command in your command line:</p><pre><code class="language-text">liquibase init project</code></pre>
        <p>This generates a new <MadCap:variable name="General.changelog" /> and <a href="../connections/creating-config-properties.html"><code><MadCap:variable name="General.liquiPropFile" /></code> file</a> that you can customize and expand. You can use the default settings or specify your own. For more information on command arguments, see the <code>init project</code> page.</p>
        <h2>Choose a schema design pattern</h2>
        <h3>Shared schema</h3>
        <p>teams</p>
        <h3>Multiple schemas</h3>
        <h2>Choose a <MadCap:variable name="General.changelog" /> structure</h2>
        <p>When designing your <MadCap:variable name="General.Liquibase" /> project, it is a best practice to replicate the structure of your existing code repository. It is most common to design your <MadCap:variable name="General.changelog" />s around objects in your database or your software's releases:</p>
        <h3>Object-oriented</h3>
        <p>In an object-oriented <MadCap:variable name="General.changelog" /> structure, you create one <MadCap:variable name="General.changelog" /> per object or group of objects. For example:</p><pre xml:space="preserve"><code class="language-text" data-lang="text">com
  example
    db
      changelog
        changelog-main.xml
        changelog-index.xml
        changelog-procedure.xml
        changelog-table.xml
        changelog-view.xml</code></pre>
        <h3>Release-oriented</h3>
        <p>If a release-oriented <MadCap:variable name="General.changelog" /> structure, you create one <MadCap:variable name="General.changelog" /> per release. For example:</p><pre xml:space="preserve"><code class="language-text" data-lang="text">com
  example
    db
      changelog
        changelog-main.xml
        changelog-1.0.xml
        changelog-1.1.xml
        changelog-2.0.xml</code></pre>
        <h2>Artifact stuff?</h2>
        <p>&lt;recommend against branch environments?&gt;</p>
        <h2>&lt;something&gt;</h2>
        <p>Contexts, labels, etc. (earlier in doc?)</p>
        <h2>Next steps</h2>
        <ol>
            <li>
                <MadCap:xref href="tutorials/home.html">[%=General.Liquibase%] Database Tutorials</MadCap:xref> – Configure <MadCap:variable name="General.Liquibase" /> to work with your own database</li>
            <li>
                <MadCap:xref href="../concepts/bestpractices.html">Best Practices</MadCap:xref> – Read about best practices to follow with <MadCap:variable name="General.Liquibase" /></li>
        </ol>
    </body>
</html>