<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title>Liquibase Relative Path Best Practices | Liquibase Docs</title>
        <meta rel="canonical" href="https://docs.liquibase.com/concepts/basic/liquibase-relative-path-best-practices.html" />
        <meta name="description" content="Reference information for using a relative path in Liquibase and its best practices." />
    </head>
    <body>
        <h1><MadCap:variable name="General.Liquibase" /> Relative Path Best Practices</h1>
        <p><MadCap:variable name="General.Liquibase" /> 4.0 and later doesn’t allow specifying absolute paths because the absolute path might cause issues with deployment, identification of your <MadCap:variable name="General.changelog" style="font-style: italic;" /> file, and others from which it is difficult to recover. To avoid this scenario, it is best practice to use the relative path as the main reason for such issues is that <MadCap:variable name="General.Liquibase" /> uses the path to the <MadCap:variable name="General.changelog" style="font-style: italic;" /> file as part of the <MadCap:variable name="General.changeset" style="font-style: italic;" /> identifier.</p>
        <h2>Use cases</h2>
        <p>In <MadCap:variable name="General.Liquibase" />, a file specified by the path <code>com/example/cart/changelog.xml</code> is different from those that are specified by the <code>com/example/account/changelog.xml</code>, <code>com/example/changelog.xml</code>, or <code>changelog.xml</code> path. However, the <code>changelog.xml</code> file might be the same file with the same <MadCap:variable name="General.changeset" style="font-style: italic;" /><i>s</i>.</p>
        <p>That file path string comparison logic works with a path similar to <code>/src/my-project/com/example/changelog.xml</code> until the path, where that file gets stored, changes. For example: <code>/src/renamed-project/com/example/changelog.xml</code>. Now, <MadCap:variable name="General.Liquibase" /> determines those paths as different, and thus, the <MadCap:variable name="General.changeset" style="font-style: italic;" /><i>s</i> become different as well. So, you might need to run the <MadCap:variable name="General.changeset" style="font-style: italic;" /><i>s</i> again. To avoid this problem, the paths should always be relative.</p>
        <h2>Using the relative path with <MadCap:variable name="General.Liquibase" /> files</h2>
        <p><MadCap:variable name="General.Liquibase" /> checks the configured <code>classpath</code> variable for the paths, so as long as <code>com/example/changelog.xml</code> is in the classpath, <MadCap:variable name="General.Liquibase" /> will find it. The locations in the <code>classpath</code> can be changed from <code>/src/my-project to /src/renamed-project</code>, <code>/home/my-user/my-project/</code>, or others, and <MadCap:variable name="General.Liquibase" /> will continue seeing the <MadCap:variable name="General.changelog" style="font-style: italic;" /> as <code>com/example/changelog.xml</code>.</p>
        <p>The <code>classpath</code> varies depending on how you run <MadCap:variable name="General.Liquibase" />:</p>
        <ul>
            <li>If you use the CLI, the <code>classpath</code> represents your current working directory and anything included in the <code>classpath</code> setting.</li>
            <li>If you use Maven, the <code>classpath</code> is your project's <code>classpath</code>.</li>
            <li>If you use Spring Boot, the <code>classpath</code> is your application's <code>classpath</code>.</li>
        </ul>
        <p>However, regardless of the way you run <MadCap:variable name="General.Liquibase" />, there is a set of directories, .jar files, and .zip files <MadCap:variable name="General.Liquibase" /> checks.</p>
        <p>The path syntax for Windows and Unix is the same, and any Windows paths are converted to Unix paths internally. To determine your relative path, follow these steps:</p>
        <ol>
            <li>Identify your absolute path and replace the path to the project directory name in your string with the points <code>..</code>.</li>
            <li>Add the <code>..</code> with a path separator (<code>/</code>) in front of the string: <code>../example/changelog.xml</code>.</li>
        </ol>
        <p>To change your existing absolute path to a relative path, you can do any of the following:</p>
        <ul>
            <li>Configure your <code>classpath</code> to have a <code>/</code> as an additional location: <code>/src/my-project/com/example/changelog.xml</code> in your <code><MadCap:variable name="General.liquiPropFile" /></code> file or System variables. The configuration brings back the old behavior with no file changes, and as a result, you will have only runtime configuration changes.</li>
            <li>Add the <code>logicalFilePath</code> <MadCap:variable name="General.Param/Attribute" /> to the root element of your <MadCap:variable name="General.changelog" style="font-style: italic;" /> files. When you set the <code>logicalFilePath</code> value to be the old absolute path, <MadCap:variable name="General.Liquibase" /> uses it for the comparison file name, which will match what is in the database. If you add the <code>logicalFilePath</code>, it will bring back the old behavior with file changes, but you will not have any runtime configuration changes.</li>
            <li>Coordinate updates to the <MadCap:variable name="General.databasechangelog" /> table so that the <code>filepath</code> value gets changed to be a non-absolute path. You can do it with a single SQL statement, but the exact statement will depend on the database you use. See a PostgreSQL example:</li>
            <p class="example" MadCap:autonum="&lt;b&gt;Example: &lt;/b&gt;"> <code>update databasechangelog set filepath=substring(filepath, length('/src/my-project')</code></p>
            <p>You need to figure out the SQL statement and time when you run that statement because any passed absolute references will start failing once you make the change, and any passed relative references will fail until you do make the change.</p>
        </ul>
    </body>
</html>