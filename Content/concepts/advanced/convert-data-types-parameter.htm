<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title>filter-log-messages parameter | Liquibase Docs</title>
        <meta rel="canonical" href="https://docs.liquibase.com/concepts/advanced/convert-data-types-parameter.html" />
        <meta name="description" content="Reference information for the convert-data-types parameter. The convert-data-types parameter allows Liquibase to convert data types such as int, bigint, timestamp, clob to the standard data types." />
    </head>
    <body>
        <h1><code>convert-data-types</code> parameter</h1>
        <p>The <code>convert-data-types</code> parameter is a Boolean that allows <MadCap:variable name="General.Liquibase" /> to convert data types such as <code>int</code>, <code>bigint</code>, <code>timestamp</code>, <code>clob</code> to the standard data types. The reasons why <MadCap:variable name="General.Liquibase" /> tries to handle data type differences are as follows:</p>
        <ul>
            <li>To help with database independence by allowing a single <MadCap:variable name="General.changeset" style="font-style: italic;" /> to work across different database vendors even though there are differences in their data type names</li>
            <li>To help with the database specifics by automatically using the right data types</li>
        </ul>
        <p>For example, most databases have a data type represented by a large text block  called <code>clob</code>, <code>text</code>, <code>varchar(max)</code>, or something other. With <MadCap:variable name="General.Liquibase" />, if you have the following <MadCap:variable name="General.changeset" style="font-style: italic;" /> and run it against Oracle, it will create the column as <code>clob</code> instead of throwing an “unknown data type: text” error:</p><pre><code class="language-text">&lt;addColumn tableName="test_table"&gt;
&lt;column name="new_col" type="text"/&gt;
&lt;/addColumn&gt;</code></pre>
        <p> If you run the <MadCap:variable name="General.changeset" style="font-style: italic;" /> against SQL Server, it will create  a <code>varchar(max)</code> data type because the <code>varchar(max)</code> is known as the large text block data type in SQL Server. Though SQL Server have a <code>text</code> data type as well, it is deprecated and the right type to use is <code>varchar(max)</code>. If you want to create the <code>text</code> type <MadCap:variable name="General.changeset" style="font-style: italic;" /> as actually the <code>text</code> type, use <code>--convert-data-types=false</code> or just specify the SQL directly.</p>
        <p>The other data types impacted by the data type difference handling:</p>
        <ul>
            <li>blob</li>
            <li>byte-array</li>
            <li>date</li>
            <li> time</li>
            <li> datetime</li>
            <li>timestamp</li>
        </ul>
        <p> <MadCap:variable name="General.Liquibase" /> considers other data types as standard and pass them through without any sort of conversion.</p>
        <p> The default value of the parameter is <code>true</code>.</p>
        <h2>Uses</h2>
        <p>In <MadCap:variable name="General.Liquibase" />, you can use the <code>convert-data-types</code> parameter when you want your database objects to be of the standard data types. The conversion depends on the database type and version. For example: </p>
        <p>PostgreSQL</p>
        <ul>
            <li>Keep <code>serial</code> rather than converting it to <code>int generated by identity</code></li>
            <li>Keep <code>bigserial</code> rather than converting them to <code>bigint generated by identity</code></li>
        </ul>
        <p>SQL Server</p>
        <ul>
            <li>Keep <code>text</code> rather than converting it to <code>varchar(max)</code></li>
            <li>Keep <code>timestamp</code> rather than converting it to <code>datetime</code></li>
        </ul>
        <h2>Setting the <code>convert-data-types</code> parameter</h2>
        <p>You can set the <code>convert-data-types</code> parameter in one of the following ways:</p>
        <h3><code>convert-data-types</code> as a Java system property</h3>
        <p>You can set the <code>convert-data-types</code> parameter as a Java system property from your command line:</p><pre><code class="language-text">java -Dliquibase.convertDataTypes=&lt;true|false&gt;</code></pre>
        <p>You can also set it with the <MadCap:xref href="../basic/java-opts-environment-variable.htm">JAVA_OPTS Environment Variable</MadCap:xref>.</p>
        <p>The syntax for Mac/Linux:</p><pre><code class="language-text">JAVA_OPTS=-Dliquibase.convertDataTypes=&lt;true|false&gt;</code></pre>
        <p>The syntax for Windows, which requires the <code>set</code> command:</p><pre><code class="language-text">set JAVA_OPTS=-Dliquibase.convertDataTypes=&lt;true|false&gt;</code></pre>
        <h3><code>convert-data-types</code> in the <code><MadCap:variable name="General.liquiPropFile"></MadCap:variable></code> file:</h3>
        <p>You can set the <code>convert-data-types</code> parameter by adding the following to your <code><MadCap:variable name="General.liquiPropFile"></MadCap:variable></code> file:</p><pre><code class="language-text">liquibase.convertDataTypes: &lt;true|false&gt;</code></pre>
        <h3><code>convert-data-types</code> as a CLI global parameter</h3>
        <p>You can use <code>convert-data-types</code> as a global parameter in your command line with a <MadCap:variable name="General.Liquibase" /> command, such as <code>update</code>:</p><pre><code class="language-text">liquibase --convert-data-types=&lt;true|false&gt; update --changelog-file=dbchangelog.xml</code></pre>
        <h3><code>convert-data-types</code> as an environment variable</h3>
        <p>If you use <MadCap:variable name="General.LBPro" />, you can set <code>convert-data-types</code> as an environment variable.</p>
        <p>The syntax for Mac/Linux:</p><pre><code class="language-text">LIQUIBASE_CONVERT_DATA_TYPES=&lt;true|false&gt;</code></pre>
        <p>The syntax for Windows, which requires the <code>set</code> command:</p><pre><code class="language-text">set LIQUIBASE_CONVERT_DATA_TYPES=&lt;true|false&gt;</code></pre>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">The commands shown above only apply to the current shell. If you need to pass an environment variable to a child process without affecting the parent process, you can use the <code>export</code> command on Mac/Linux or the <code>setx</code> command on Windows.</p>
    </body>
</html>