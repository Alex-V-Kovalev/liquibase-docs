<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title>include-catalog-in-specification parameter | Liquibase Docs</title>
        <meta rel="canonical" href="https://docs.liquibase.com/concepts/advanced/include-catalog-in-specification-parameter.html" />
        <meta name="description" content="Reference information and use cases for the include-catalog-in-specification parameter. The include-catalog-in-specification parameter defines whether Liquibase includes the catalog name when determining equality between the compared databases." />
    </head>
    <body>
        <h1><code>include-catalog-in-specification</code> parameter</h1>
        <p>The <code>include-catalog-in-specification</code> parameter defines whether <MadCap:variable name="General.Liquibase" /> includes the catalog name when determining equality between the compared databases. The default value is <code>false</code> because you may want to compare the objects across two databases even though the catalogs are named differently in different environments.</p>
        <h2>Uses</h2>
        <p>If you run the <MadCap:xref href="../../commands/community/diff.htm">diff command</MadCap:xref> or the <MadCap:xref href="../../commands/community/diffChangeLog.html">diffChangeLog command</MadCap:xref> with the <code>include-catalog-in-specification</code> parameter set to <code>true</code>, <MadCap:variable name="General.Liquibase" /> will identify  objects using both their object name and the catalog name.</p>
        <p>Let’s say you have:</p>
        <ul>
            <li><code>database1</code> and <code>catalog1</code>, which has the table <code>table1</code></li>
            <li><code>database2</code> and <code>catalog2</code>, which has the table <code>table1</code></li>
        </ul>
        <p>This way, <MadCap:variable name="General.Liquibase" />  shows that there is a difference in the catalog name when executing the <code>diff</code> command with <code>include-catalog-in-specification</code> set to <code>true</code>. For example, an object of <code>catalog1.my_schema.my_table</code> is seen as a different object than <code>catalog2.my_schema.my_table</code>.</p>
        <p>However, if you run the <code>diff</code> command and do not specify <code>include-catalog-in-specification</code>, <MadCap:variable name="General.Liquibase" /> will not see any differences and identify only the database objects without checking if the catalog is the same.</p>
        <h2>Setting the <code>include-catalog-in-specification</code> parameter</h2>
        <p>You can set the <code>include-catalog-in-specification</code> parameter in one of the following ways:</p>
        <h3><code>include-catalog-in-specification</code> as a Java system property</h3>
        <p>You can set the <code>include-catalog-in-specification</code> parameter as a Java system property by using the <MadCap:xref href="../basic/java-opts-environment-variable.htm">JAVA_OPTS Environment Variable</MadCap:xref> in your command line:</p>
        <p>The syntax for Mac/Linux:</p><pre xml:space="preserve"><code class="language-text">JAVA_OPTS=-Dliquibase.includeCatalogInSpecification=&lt;true|false&gt;</code></pre>
        <p>The syntax for Windows, which requires the <code>set</code> command:</p><pre xml:space="preserve"><code class="language-text">set JAVA_OPTS=-Dliquibase.includeCatalogInSpecification=&lt;true|false&gt;</code></pre>
        <h3><code>include-catalog-in-specification</code> in the <code><MadCap:variable name="General.liquiPropFile"></MadCap:variable></code> file</h3>
        <p>You can set the <code>include-catalog-in-specification</code> parameter by adding the following to your <code><MadCap:variable name="General.liquiPropFile"></MadCap:variable></code> file:</p><pre xml:space="preserve"><code class="language-text">liquibase.includeCatalogInSpecification: &lt;true|false&gt;</code></pre>
        <h3><code>include-catalog-in-specification</code> as a CLI global parameter</h3>
        <p>You can use <code>include-catalog-in-specification</code> as a global parameter in your command line with a <MadCap:variable name="General.Liquibase" /> command, such as <code>diff</code>:</p><pre xml:space="preserve"><code class="language-text">liquibase --include-catalog-in-specification=&lt;true|false&gt; diff</code></pre>
        <h3><code>include-catalog-in-specification</code> as an environment variable</h3>
        <p>If you use <MadCap:variable name="General.LBPro" />, you can set <code>include-catalog-in-specification</code> as an environment variable.</p>
        <p>The syntax for Mac/Linux:</p><pre xml:space="preserve"><code class="language-text">LIQUIBASE_INCLUDE_CATALOG_IN_SPECIFICATION=&lt;true|false&gt;</code></pre>
        <p>The syntax for Windows, which requires the <code>set</code> command:</p><pre xml:space="preserve"><code class="language-text">set LIQUIBASE_INCLUDE_CATALOG_IN_SPECIFICATION=&lt;true|false&gt;</code></pre>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">The commands shown above only apply to the current shell. If you need to pass an environment variable to a child process without affecting the parent process, you can use the <code>export</code> command on Mac/Linux or the <code>setx</code> command on Windows.</p>
    </body>
</html>