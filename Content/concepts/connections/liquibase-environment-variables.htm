<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <link href="../../Z_Resources/Stylesheets/TableStyles.css" rel="stylesheet" MadCap:stylesheetType="table" /><title>Liquibase Environment Variables | Liquibase Docs</title>
        <meta rel="canonical" href="https://docs.liquibase.com/concepts/connections/liquibase-environment-variables.html" />
        <meta name="description" content="Reference information for using Liquibase environment variables." />
    </head>
    <body>
        <h1><MadCap:variable name="General.Liquibase" /> Environment Variables<a href="https://www.liquibase.com/trial" target="_blank"><img src="../../Z_Resources/Images/Logos/pro-pages.jpg" style="vertical-align: middle;width: 3%" /></a></h1>
        <p>The environment variable is a value that you can set once to pass configuration information to your application. It affects the behavior of running processes on a computer.</p>
        <p><MadCap:variable name="General.LBPro" /> 4.4 and later can process configuration values from multiple sources, such as the <MadCap:variable name="General.Liquibase" /> properties file, environment variables, Java system properties, and <MadCap:variable name="General.Hub" /> properties. This capability means the following:</p>
        <ul>
            <li>You can use environment variables rather than storing hard-coded and plain-text values, such as usernames and passwords in documents and source control.</li>
            <li>You can maintain better security and control specific configuration values more dynamically, especially when using build environments like Docker, AWS, Kubernetes, and others.</li>
            <li>You can set both <MadCap:variable name="General.Liquibase" /> global and command parameters as environment variables instead of passing them at runtime in the CLI or via the defaults file.</li>
            <li>You can easily run <MadCap:variable name="General.Liquibase" /> in partial or full automation with various build servers.</li>
        </ul>
        <p>The use of  <code>LIQUIBASE_*</code> environment variables requires a <MadCap:variable name="General.LBPro" /> License key:</p>
        <ul>
            <li>The <MadCap:variable name="General.LBPro" /> License key is available for a <a href="https://www.liquibase.com/trial">free trial</a>.</li>
            <li>A lack of <MadCap:variable name="General.LBPro" /> License key will not affect current wrapper scripts and homegrown tools which use environment variables to setup commands.</li>
            <li>	Without a <MadCap:variable name="General.LBPro" /> key, <MadCap:variable name="General.Liquibase" /> will continue to ignore existing <code>LIQUIBASE_*</code> environment variables when you run commands.</li>
        </ul>
        <h2>Using <MadCap:variable name="General.Liquibase" /> Environment Variables</h2>
        <p class="tip" MadCap:autonum="&lt;b&gt;Tip: &lt;/b&gt;">To see the list of all environment variables, check <MadCap:xref href="../../parameters/command-parameters.htm">[%=General.Liquibase%] Configuration Reference for Parameters and Environment Variables</MadCap:xref>.</p>
        <p>You can configure <MadCap:variable name="General.Liquibase" /> environment variables by following these syntax rules:</p>
        <ul>
            <li>Use underscores (_) for naming. If you use dots (.), convert them to underscores. Also, split the camel case values with an underscore.</li>
        </ul>
        <p class="example" MadCap:autonum="&lt;b&gt;Example: &lt;/b&gt;"><code>liquibase.log-level</code> is <code>LIQUIBASE_LOG_LEVEL</code>.</p>
        <ul>
            <li>Do not use spaces within values.</li>
            <li>Use uppercase letters.</li>
            <li>Use the prefix of <code>LIQUIBASE_ namespace</code>.</li>
        </ul>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">For default files, use the prefix of <code>liquibase.</code>. However, when running arguments in the CLI, you can drop the<code> --liquibase-</code> prefix.</p>
        <h2>Scoping Environment Variable for Global and Command Options</h2>
        <p>In <MadCap:variable name="General.Liquibase" />, there are two types of configuration options: global and command options.</p>
        <ul>
            <li>Global options affect the overall usage of <MadCap:variable name="General.Liquibase" />, such as <code>log-level</code> and <code>classpath</code>.</li>
            <li>Command options are specific to the command, such as <code>url</code> or <code>hubProjectID</code>.</li>
        </ul>
        <p>Use global options to the left of the command and command options to the right of the command.</p>
        <p>As environment variables, there are three measures of scope:</p>
        <ul>
            <li><code>LIQUIBASE_CLASSPATH</code> configures a global option.</li>
            <li><code>LIQUIBASE_COMMAND_USERNAME</code> sets the username to use across all commands.</li>
            <li><code>LIQUIBASE_COMMAND_UPDATE_USERNAME</code> sets the username just for the <code>update</code> command.</li>
        </ul>
        <h2>Setting Environment Variables</h2>
        <p>To set the <MadCap:variable name="General.Liquibase" /> environment variables, choose your operating system:</p>
        <h3>For Windows</h3>
        <ol>
            <li>In your Windows search box, type <code>env</code> and select the <b>Edit the System Environment</b> option in the Control Panel.</li>
            <li>In the <b>Advanced</b> tab, select <b>Environment Variables</b>.</li>
            <li>In the <b>Edit environment variable</b> window, select <b>New</b>, and then add the variable name and value you need.</li>
        </ol>
        <p class="example" MadCap:autonum="&lt;b&gt;Example: &lt;/b&gt;"><code>LIQUIBASE_PRO_LICENSE_KEY</code>
            <br /><code>yj4v59bfdgj389btc4wg</code>
        </p>
        <ol start="4">
            <li>Select <b>OK</b> on all windows to close them.</li>
        </ol>
        <h3>For macOS/Linux/Unix</h3>
        <p>To set the <MadCap:variable name="General.Liquibase" /> environment variable, in your terminal, use the <code>export variable_name="value"</code> command, which sets the variable and exports it to the global environment.</p>
        <p class="example" MadCap:autonum="&lt;b&gt;Example: &lt;/b&gt;"><code>export LIQUIBASE_PRO_LICENSE_KEY=yj4v59bfdgj389btc4wg</code>
        </p>
        <p>The <code>export variable_name=value</code> command will not permanently update your value after the termination of the session. To permanently update the value, edit your <code>~/.profile</code>, <code>~/.bash_profile</code>, or <code>~/.bashrc</code> file to export the variable, and then <code>source</code> the file.</p>
        <h2>Configuration Hierarchy</h2>
        <p><MadCap:variable name="General.Liquibase" /> supports setting properties in multiple locations, with the final value determined in the chart in which the top locations take precedence over lower locations:</p>
        <p>
            <img src="../../Z_Resources/Images/Screenshots/concepts/environment-variables.png" style="width: 414px;height: 350px;" />
        </p>
        <table style="width: 100%;margin-left: auto;margin-right: auto;mc-table-style: url('../../Z_Resources/Stylesheets/TableStyles.css');" class="TableStyle-TableStyles" cellspacing="0">
            <col class="TableStyle-TableStyles-Column-Column1" />
            <col class="TableStyle-TableStyles-Column-Column1" />
            <tbody>
                <tr class="TableStyle-TableStyles-Body-Body1">
                    <td class="TableStyle-TableStyles-BodyE-Column1-Body1">Command line arguments</td>
                    <td class="TableStyle-TableStyles-BodyD-Column1-Body1">Override ServletConfig and ServletContext init parameters, Java system properties, OS environment variables, and configuration data</td>
                </tr>
                <tr class="TableStyle-TableStyles-Body-Body2">
                    <td class="TableStyle-TableStyles-BodyE-Column1-Body2">ServletConfig init parameters</td>
                    <td class="TableStyle-TableStyles-BodyD-Column1-Body2">Override ServletContext init parameters, Java system properties, OS environment variables, and configuration data</td>
                </tr>
                <tr class="TableStyle-TableStyles-Body-Body1">
                    <td class="TableStyle-TableStyles-BodyE-Column1-Body1">ServletContext init parameters</td>
                    <td class="TableStyle-TableStyles-BodyD-Column1-Body1">
Override Java system properties, OS environment variables, and configuration data
                    </td>
                </tr>
                <tr class="TableStyle-TableStyles-Body-Body2">
                    <td class="TableStyle-TableStyles-BodyE-Column1-Body2">Java system properties</td>
                    <td class="TableStyle-TableStyles-BodyD-Column1-Body2">Override OS environment variables and configuration data</td>
                </tr>
                <tr class="TableStyle-TableStyles-Body-Body1">
                    <td class="TableStyle-TableStyles-BodyE-Column1-Body1">OS environment variables</td>
                    <td class="TableStyle-TableStyles-BodyD-Column1-Body1">Override configuration data</td>
                </tr>
                <tr class="TableStyle-TableStyles-Body-Body2">
                    <td class="TableStyle-TableStyles-BodyB-Column1-Body2">Configuration data, such as the <MadCap:variable name="General.Liquibase" /> properties file, piped standard input, or defaults files</td>
                    <td class="TableStyle-TableStyles-BodyA-Column1-Body2">Does not override any values</td>
                </tr>
            </tbody>
        </table>
        <p>For example, if you want the <code>log-level=INFO</code> property set for the DEV environment and <code>log-level=SEVERE</code> set for the PROD environment, you should not specify these properties in the command line, but use environment variables instead. </p>
        <p class="example" MadCap:autonum="&lt;b&gt;Example: &lt;/b&gt;"><code>export LIQUIBASE_LOG_LEVEL="INFO" #what I set in my dev env<br></br>export LIQUIBASE_LOG_LEVEL="SEVERE" #what I set in my prod env</code>
        </p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">Environment variables do not override the CLI usage. In automation driven by crafting dynamic CLI strings to execute, you need to reconcile commands and their arguments with specific settings in your environment variables that are overridden by the CLI usage.</p>
        <h2><MadCap:variable name="General.Liquibase" /> Naming Conventions for Environment Variables</h2>
        <p><MadCap:variable name="General.Liquibase" /> environment variables include:</p>
        <ul>
            <li>All the <code>GlobalConfiguration</code> settings:<code>  LIQUIBASE_DATABASE_CHANGELOG_TABLE_NAME</code>, <code>LIQUIBASE_SCHEMA_NAME</code>, and others.</li>
            <li>All the <code>HubConfiguration</code> properties: <code>LIQUIBASE_HUB_API_KEY</code>, <code>LIQUIBASE_HUB_URL</code>, <code>LIQUIBASE_HUB_MODE</code>.</li>
            <li>All the <code>LiquibaseProConfiguration</code> properties: <code>LIQUIBASE_PRO_LICENSE_KEY</code>, <code>LIQUIBASE_PRO_MARK_UNUSED_NOT_DROPPED</code>, <code>LIQUIBASE_PRO_SYNONYMS_DROP_PUBLIC</code>, <code>LIQUIBASE_PRO_SQL_INLINE</code>.</li>
        </ul>
        <h2>Security</h2>
        <p>If you use <MadCap:variable name="General.Liquibase" /> environment variables, <MadCap:variable name="General.Liquibase" /> only reads values from environment variables without writing any of them. </p>
        <h3>Related Links</h3>
        <ul>
            <li>
                <MadCap:xref href="creating-config-properties.html" />
            </li>
            <li>
                <MadCap:xref href="../../parameters/working-with-command-parameters.htm">Command Line Interface</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../../commands/home.htm">Liquibase Commands</MadCap:xref>
            </li>
        </ul>
    </body>
</html>