<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <body>
        <table style="width: 100%; margin-left: auto; margin-right: auto;">
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <thead>
                <tr>
                    <th>Short Name</th>
                    <th>Scope</th>
                    <th>Enabled</th>
                    <th>Severity</th>
                    <th>Customization</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-checks/sql-grant-warn.htm">SqlGrantWarn</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />
                    </td>
                    <td>true</td>
                    <td>0</td>
                    <td>&lt;None&gt;</td>
                    <td>This check warns a user when a SQL contains 'GRANT' statements so that they can ensure that the privilege being granted won't lead to security issues.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-checks/sql-revoke-warn.htm">SQLRevokeWarn</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />
                    </td>
                    <td>true</td>
                    <td>0</td>
                    <td>&lt;None&gt;</td>
                    <td>This check warns a user when a SQL contains 'REVOKE' statements so that they can ensure that the privilege being revoked won't lead to data access and dependency issues.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-checks/warn-on-use-database.htm">WarnOnUseDatabase</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />
                    </td>
                    <td>true</td>
                    <td>0</td>
                    <td>&lt;None&gt;</td>
                    <td>This check warns a user when generated or raw SQL contains 'USE DATABASE' directive.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-checks/change-drop-table-warn.htm">ChangeDropTableWarn</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />
                    </td>
                    <td>true</td>
                    <td>0</td>
                    <td>&lt;None&gt;</td>
                    <td>This check warns a user when a table is being dropped so that they can ensure that dropping the table won't lead to unintentional data loss.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-checks/change-drop-column-warn.htm">ChangeDropColumnWarn</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />
                    </td>
                    <td>true</td>
                    <td>0</td>
                    <td>&lt;None&gt;</td>
                    <td>This check warns a user when a column is being dropped so that they can ensure that such a schema change won't lead to unintentional loss of data and unrecoverable data loss.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-checks/modify-data-type-warn.htm">ModifyDataTypeWarn</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />
                    </td>
                    <td>true</td>
                    <td>0</td>
                    <td>&lt;None&gt;</td>
                    <td>This check warns a user when a change will result in modification of a data type so they can ensure this change will not lead to unintentional data loss.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-checks/sql-select-star-warn.htm">SqlSelectStarWarn</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />
                    </td>
                    <td>true</td>
                    <td>0</td>
                    <td>&lt;None&gt;</td>
                    <td>This check warns a user when generated or raw SQL contains 'SELECT *' statements so that they can ensure selecting all fields from a table in a query is safe and necessary.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-checks/sql-user-defined-pattern-check.htm">SqlUserDefinedPatternCheck</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />
                    </td>
                    <td>false</td>
                    <td>0</td>
                    <td>SEARCH_STRING = null
<br />MESSAGE = A match for regular expression <br />&lt;SEARCH_STRING&gt; was detected in Changeset &lt;CHANGESET&gt;.
<br />Strip_COMMENTS = true</td>
                    <td>This check scans SQL for the presence of specific patterns and warns the user when they are found.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-database-checks/table-column-limit.htm">TableColumnLimit</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />, database</td>
                    <td>true</td>
                    <td>0</td>
                    <td>MAX_COLUMNS = 50</td>
                    <td>The TableColumnLimit check allows you to ensure that no table described in a changelog or existing in a database target has more than a threshold number of columns.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-database-checks/object-name-must-match.htm">ObjectNameMustMatch</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />, database</td>
                    <td>false</td>
                    <td>0</td>
                    <td>OPERATOR&#160;= STARTS_WITH<br />SEARCH_STRING = null<br />OBJECT_TYPES = null<br />CASE_SENSITIVE = true</td>
                    <td>The ObjectNameMustMatch check allows you to confirm the listed object names conform to the supplied pattern.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-database-checks/object-name-must-not-match.htm">ObjectNameMustNotMatch</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />, database</td>
                    <td>false</td>
                    <td>0</td>
                    <td>OPERATOR&#160;= STARTS_WITH<br />SEARCH_STRING = null<br />OBJECT_TYPES = null<br />CASE_SENSITIVE = true</td>
                    <td>The ObjectNameMustNotMatch check allows you to confirm the listed object names conform to the supplied pattern and locate the object names that do not match so they can be corrected.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-checks/sql-grant-specific-privs-warn.htm">SqlGrantSpecificPrivsWarn</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />
                    </td>
                    <td>false</td>
                    <td>0</td>
                    <td>PRIVILEGE_LIST = null</td>
                    <td>This check warns a user when a changeset includes or generates sql that grants specific privileges to a user or role.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-checks/change-truncate-table-warn.htm">ChangeTruncateTableWarn</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />
                    </td>
                    <td>true</td>
                    <td>0</td>
                    <td>&lt;None&gt;</td>
                    <td>This check warns a user when a table is being truncated so that they can ensure this change will not lead to unintentional data loss.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-checks/sql-grant-option-warn.htm">SQLGrantOptionWarn</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />
                    </td>
                    <td>true</td>
                    <td>0</td>
                    <td>&lt;None&gt;</td>
                    <td>This check warns a user when SQL contains 'GRANT' statements that include the 'WITH GRANT OPTION' clause so that they can ensure that the privilege being granted won't lead to security issues or violate compliance regulations.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-database-checks/oracle-reserved-keywords.htm">OracleReservedKeywords</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />, database</td>
                    <td>false</td>
                    <td>0</td>
                    <td>OBJECT_TYPES = null<br />ALLOWED_LIST = null<br />CASE_SENSITIVE = true</td>
                    <td>This check can be used to prevent Oracle's reserved keywords from being used in database object names.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-database-checks/sql-server-reserved-keywords.htm">SQLServerReservedKeywords</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />, database</td>
                    <td>false</td>
                    <td>0</td>
                    <td>OBJECT_TYPES = null<br />ALLOWED_LIST = null<br />CASE_SENSITIVE = true</td>
                    <td>This check disallows SQL Server reserved keywords from being used in database object names. See Reserved Keywords (Transact-SQL) for complete list of keywords.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-database-checks/sql-server-future-reserved-keywords.htm">SQLServerFutureReservedKeywords</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />, database</td>
                    <td>false</td>
                    <td>0</td>
                    <td>OBJECT_TYPES = null<br />ALLOWED_LIST = null<br />CASE_SENSITIVE = true</td>
                    <td>This check disallows SQL Server's future reserved keywords from being used in database object names. See Reserved Keywords (Transact-SQL) for complete list of keywords.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-database-checks/postgres-reserved-keywords.htm">PostgresReservedKeywords</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />, database</td>
                    <td>false</td>
                    <td>0</td>
                    <td>OBJECT_TYPES = null<br />ALLOWED_LIST = null<br />CASE_SENSITIVE = true</td>
                    <td>This check disallows Postgres reserved keywords from being used in database object names. See the SQL Key Words Appendix for complete list of keywords.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-database-checks/sql-server-odbc-reserved-keywords.htm">SQLServerODBCReservedKeywords</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />, database</td>
                    <td>false</td>
                    <td>0</td>
                    <td>OBJECT_TYPES = null<br />ALLOWED_LIST = null<br />CASE_SENSITIVE = true</td>
                    <td>This check disallows SQL Server's ODBC reserved keywords from being used in database object names. See Reserved Keywords (Transact-SQL) for complete list of keywords.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-database-checks/postgres-non-reserved-keywords.htm">PostgresNonReservedKeywords</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />, database</td>
                    <td>false</td>
                    <td>0</td>
                    <td>OBJECT_TYPES = null<br />ALLOWED_LIST = null<br />CASE_SENSITIVE = true</td>
                    <td>This check disallows Postgres non-reserved keywords from being used in database object names. See the SQL Key Words Appenix for complete list of keywords.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-checks/sql-grant-admin-warn.htm">SQLGrantAdminWarn</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />
                    </td>
                    <td>true</td>
                    <td>0</td>
                    <td>&lt;None&gt;</td>
                    <td>This check warns a user when a SQL contains 'GRANT' statements that include the 'WITH ADMIN OPTION' clause so that they can ensure that the privilege being granted won't lead to security issues or violate compliance regulations.</td>
                </tr>
                <tr>
                    <td><code>DetectChangeType</code>
                    </td>
                    <td>changelog</td>
                    <td>true</td>
                    <td>0</td>
                    <td>CHANGE_TYPE_LIST = dropTable, dropColumn</td>
                    <td>This check warns a user when a <MadCap:variable name="General.changeset" /> includes a <MadCap:variable name="General.changetypes" /> listed by the user as forbidden.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-checks/rollback-required.htm">RollbackRequired</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />
                    </td>
                    <td>true</td>
                    <td>0</td>
                    <td>&lt;None&gt;</td>
                    <td>This check enforces the Liquibase best-practice recommendation to include rollbacks to every changeset.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-checks/changeset-label-check.htm">ChangesetLabelCheck</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />
                    </td>
                    <td>true</td>
                    <td>0</td>
                    <td>&lt;None&gt;</td>
                    <td>This check enforces the Liquibase best-practice recommendationto assign labels to every changeset to provide better deployment control and to enhance traceability and granularity of deployments across changesets.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-checks/changeset-context-check.htm">ChangesetContextCheck</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />
                    </td>
                    <td>true</td>
                    <td>0</td>
                    <td>&lt;None&gt;</td>
                    <td>This check enforces the Liquibase best-practice recommendation to assign a context to every changeset to provide better deployment control and to enhance traceability and granularity of deployments across changesets.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-checks/changeset-comment-check.htm">ChangesetCommentCheck</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />
                    </td>
                    <td>true</td>
                    <td>0</td>
                    <td>&lt;None&gt;</td>
                    <td>This check enforces the Liquibase best-practice recommendation to assign comments to every changeset to document the purpose of a changeset for other/future consumers of this changelog.</td>
                </tr>
                <tr>
                    <td><code>OneChangePerChangeset</code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />
                    </td>
                    <td>true</td>
                    <td>0</td>
                    <td>&lt;None&gt;</td>
                    <td>This check enforces the <MadCap:variable name="General.Liquibase" /> Best Practice of keeping individual <MadCap:variable name="General.changeset" />s small by limiting them to one statement or change.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-checks/primary-key-on-create-table.htm">PrimaryKeyOnCreateTable</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />
                    </td>
                    <td>true</td>
                    <td>0</td>
                    <td>EXCEPTIONS_LIST = CASE_SENSITIVE = true</td>
                    <td>This check warns when a create table action does not also include a primary key.</td>
                </tr>
                <tr>
                    <td><code>CheckTablesForIndex</code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />
                    </td>
                    <td>true</td>
                    <td>0</td>
                    <td>&lt;None&gt;</td>
                    <td>This check scans your target URL&#160;database tables to find tables which do not have an associated index.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-database-checks/table-comment-check.htm">TableCommentCheck </MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />, database</td>
                    <td>true</td>
                    <td>0</td>
                    <td>&lt;None&gt;</td>
                    <td>The TableCommentCheck check allows you to flag any table that does not have a comment. Note that this is not a check for a Liquibase changelog comment.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-database-checks/table-comment-pattern-check.htm">TableCommentPatternCheck </MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />, database</td>
                    <td>false</td>
                    <td>0</td>
                    <td>EXCEPTIONS_LIST =<br />CASE_SENSITIVE&#160;= true</td>
                    <td>The TableCommentPatternCheck check triggers when specific user-supplied patterns are present in table comments.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/database-checks/constraint-must-exist.htm">ConstraintMustExist </MadCap:xref></code>
                    </td>
                    <td>database</td>
                    <td>false</td>
                    <td>0</td>
                    <td>OPERATOR&#160;= CONTAINS<br />SEARCH_STRING = null<br />MESSAGE = A&#160;match for regular expression &lt;SEARCH_STRING&gt;&#160;was detected in &lt;IDENTIFIER&gt;</td>
                    <td>The ConstraintMustExist check allows you to specify an individual table or column by name to check that it has one or more specific constraints.</td>
                </tr>
                <tr>
                    <td><code><MadCap:xref href="../../commands/quality-checks/checks/changelog-checks/require-changeset-dis-uuid.htm">RequireChangesetDisUUID</MadCap:xref></code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />
                    </td>
                    <td>false</td>
                    <td>0</td>
                    <td>&lt;None&gt;</td>
                    <td>This check alerts you when a changeset ID does not follow the 8-4-4-4-12 pattern of UUID or GUID.</td>
                </tr>
            </tbody>
        </table>
    </body>
</html>