<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <h3>Formatted SQL</h3>
        <p><MadCap:variable name="General.Liquibase" /> does not support an automatic rollback for formatted SQL <MadCap:variable name="General.changeset" />s. Also, some <MadCap:variable name="General.changetypes" />s have no corresponding <code>rollback</code> commands that can be automatically generated by <MadCap:variable name="General.Liquibase" />. In these cases, you should add custom rollback statements to the <MadCap:variable name="General.changeset" />s if you want to use <code>rollback</code> commands. For example, in formatted SQL:</p><pre xml:space="preserve"><code class="language-sql">-- changeset liquibaseuser:1
create table example1 ( id int primary key, name varchar(255) );
-- rollback drop table example1;
				
-- changeset liquibaseuser:2
insert into example1 values ('1','The First', 'Country')
insert into example1 values ('2','The Second', 'Country2')
-- rollback delete from example1 where id='1'
-- rollback delete from example1 where id='2'</code></pre>
        <h3>Override default rollback commands</h3>
        <p>The <code>&lt;rollback&gt;</code> tag describes how to roll back a change using SQL statements, <MadCap:variable name="General.changetypes"></MadCap:variable>s, or a reference to a previous <MadCap:variable name="General.changeset"></MadCap:variable>.</p>
        <p>You can have plain SQL in the content part of the <code>&lt;rollback&gt;</code> element. <MadCap:variable name="General.Liquibase" /> treats the text in the element as the <code>&lt;sql&gt;</code><MadCap:variable name="General.changetypes" /> with <code>stripComments</code> set to <code>true</code>, <code>splitStatements</code> set to <code>true</code>, and <code>endDelimiter</code> set to <code>;</code>. For more details, see the XML example from the <MadCap:xref href="../../../change-types/sql.html">sql</MadCap:xref> documentation. Example:</p><pre><code class="language-xml">&lt;changeSet id="1" author="bob"&gt;
    &lt;createTable tableName="testTable"&gt;
    &lt;rollback&gt;
        drop table testTable
    &lt;/rollback&gt;
&lt;/changeSet&gt;</code></pre>
        <p>Also, you can have any <MadCap:variable name="General.changetypes" /> in the <code>&lt;rollback&gt;</code> element:</p><pre><code class="language-xml">&lt;changeSet id="1" author="bob"&gt;
    &lt;createTable tableName="testTable"&gt;
    &lt;rollback&gt;
        &lt;dropTable tableName="testTable"/&gt;
    &lt;/rollback&gt;
&lt;/changeSet&gt;</code></pre>
        <p>You can also specify multiple <code>rollback</code> statements:</p><pre xml:space="preserve"><code class="language-xml">&lt;changeSet id="multiRollbackTest" author="rs"&gt;
    &lt;createTable tableName="multiRollback1"&gt;
        &lt;column name="id" type="int"/&gt;
    &lt;/createTable&gt;
    &lt;createTable tableName="multiRollback2"&gt;
        &lt;column name="id" type="int"/&gt;
    &lt;/createTable&gt;
    &lt;createTable tableName="multiRollback3"&gt;
        &lt;column name="id" type="int"/&gt;
    &lt;/createTable&gt;
    &lt;rollback&gt;
        drop table multiRollback1;
        drop table multiRollback2;
    &lt;/rollback&gt;
    &lt;rollback&gt;drop table multiRollback3&lt;/rollback&gt;
&lt;/changeSet&gt;</code></pre>
        <h3>Directly reference <MadCap:variable name="General.changeset" /></h3>
        <p>The following example shows how you can refer a <code>&lt;rollback&gt;</code> element to another <MadCap:variable name="General.changeset"></MadCap:variable>. To roll back the <MadCap:variable name="General.changeset"></MadCap:variable> with <code>id="2"</code>, apply the <MadCap:variable name="General.changeset"></MadCap:variable> with <code>id="1"</code>:</p><pre><code class="language-xml">&lt;changeSet id="2" author="bob"&gt;
    &lt;dropTable tableName="testTable"/&gt;
    &lt;rollback changeSetId="1" changeSetAuthor="bob"/&gt;
&lt;/changeSet&gt;</code></pre>
        <p>To reference the <MadCap:variable name="General.changeset" /> that originally created a statement, use the <code>&lt;rollback&gt;</code> tag with  <code>changeRollback2-create</code>:</p><pre><code class="language-xml">&lt;changeSet id="changeRollback2-drop" author="liquibase"&gt;
    &lt;dropTable tableName="changeRollback2"/&gt;
    &lt;rollback changeSetId="changeRollback2-create" changeSetAuthor="liquibase"/&gt;
&lt;/changeSet&gt;</code></pre>
        <h3>Empty rollback statements</h3>
        <p>If you do not want to revert a change in a rollback mode, use either the keyword <code>empty</code> or the keyword <code>not required</code> inside the <code>rollback</code> tag. In XML, YAML, and JSON <MadCap:variable name="General.changelog" />s, you can also use an empty string inside the <code>rollback</code> tag.</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot style="font-size: 18pt;">SQL</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-sql">-- changeset liquibaseuser:1
create table example1 ( id int primary key, name varchar(255) );
-- rollback empty</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot style="font-size: 18pt;">XML</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-xml">&lt;changeSet id="3" author="liquibaseuser"&gt;
    &lt;createTable tableName="changeRollback"&gt;
        &lt;column name="id" type="int"/&gt;
    &lt;/createTable&gt;
    &lt;rollback&gt;empty&lt;/rollback&gt;
&lt;/changeSet&gt;</code></pre>
                <p>You can also use an empty string (<code>&lt;rollback&gt;&lt;/rollback&gt;</code>) or  a self-closing-tag (<code>&lt;rollback/&gt;</code>).</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot style="font-size: 18pt;">YAML</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-yaml">- changeSet:
    id: 1
    author: liquibase
    changes:
      - createTable:
          tableName: person
          columns:
            - column:
                name: id
                type: int
    rollback: empty</code></pre>
                <p>You can also use an empty string&#160;(<code>rollback: ""</code>).</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot style="font-size: 18pt;">JSON</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-json">{
  "changeSet": {
    "id": 1,
    "author": "example",
    "changes": [
      {
        "createTable": {
          "tableName": "person",
          "columns": [
            {
              "column": {
                "name": "id",
                "type": "int"
              }
            }
          ]
        }
      }
    ],
    "rollback": "empty"
  }
}</code></pre>
                <p>You can also use an empty string (<code>"rollback": ""</code>).</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
    </body>
</html>