<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <body>
        <ol>
            <li>Ensure your MongoDB database is configured. See <a href="https://www.mongodb.com/docs/manual/installation/">Install MongoDB</a> for more information.</li>
            <li>
                <MadCap:snippetText src="database-properties-url.flsnp" />
            </li><pre xml:space="preserve">
                <code class="language-html">url: mongodb://hostname:27017/myDatabase</code>
            </pre>
            <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">If you are unsure about how to configure the <code>url</code> property, refer to <a href="https://docs.mongodb.com/manual/reference/connection-string/">Connection String URI Format</a>.</p>
            <MadCap:snippetBlock src="../note/database-license-key.flsnp" />
            <li>Create a text file called <a href="../../../concepts/changelogs/home.html">changelog</a> (<code>.xml</code>) in your project directory and add a <a href="../../../concepts/changelogs/changeset.html">changeset</a>.<p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">The use of JSON&#160;and YAML <MadCap:variable name="General.changelog" />s is available in  <MadCap:variable name="General.Liquibase" /> version 4.20</p></li>
            <MadCap:dropDown>
                <MadCap:dropDownHead>
                    <MadCap:dropDownHotspot>XML&#160;example 1</MadCap:dropDownHotspot>
                </MadCap:dropDownHead>
                <MadCap:dropDownBody>
                    <MadCap:codeSnippet>
                        <MadCap:codeSnippetCopyButton />
                        <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve" style="mc-code-lang: XML;">&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:pro="http://www.liquibase.org/xml/ns/pro"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.6.xsd
    http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-4.6.xsd "&gt;

      &lt;changeSet id="1" author="your.name" labels="example-label" context="example-context"&gt;
          &lt;comment&gt;example-comment&lt;/comment&gt;
        &lt;createTable tableName="person"&gt;
            &lt;column name="id" type="int" autoIncrement="true"&gt;
                &lt;constraints primaryKey="true" nullable="false"/&gt;
            &lt;/column&gt;
            &lt;column name="name" type="varchar(50)"&gt;
                &lt;constraints nullable="false"/&gt;
            &lt;/column&gt;
            &lt;column name="address1" type="varchar(50)"/&gt;
            &lt;column name="address2" type="varchar(50)"/&gt;
            &lt;column name="city" type="varchar(30)"/&gt;
        &lt;/createTable&gt;
    &lt;/changeSet&gt;

    &lt;changeSet id="2" author="your.name" labels="example-label" context="example-context"&gt;
        &lt;comment&gt;example-comment&lt;/comment&gt;
        &lt;createTable tableName="company"&gt;
            &lt;column name="id" type="int" autoIncrement="true"&gt;
                &lt;constraints primaryKey="true" nullable="false"/&gt;
            &lt;/column&gt;
            &lt;column name="name" type="varchar(50)"&gt;
                &lt;constraints nullable="false"/&gt;
            &lt;/column&gt;
            &lt;column name="address1" type="varchar(50)"/&gt;
            &lt;column name="address2" type="varchar(50)"/&gt;
            &lt;column name="city" type="varchar(30)"/&gt;
        &lt;/createTable&gt;
    &lt;/changeSet&gt;

    &lt;changeSet id="3" author="other.dev" labels="example-label" context="example-context"&gt;
        &lt;comment&gt;example-comment&lt;/comment&gt;
        &lt;addColumn tableName="person"&gt;
            &lt;column name="country" type="varchar(2)"/&gt;
        &lt;/addColumn&gt;
    &lt;/changeSet&gt;
&lt;/databaseChangeLog&gt;
</MadCap:codeSnippetBody>
                    </MadCap:codeSnippet>
                </MadCap:dropDownBody>
            </MadCap:dropDown>
            <MadCap:dropDown>
                <MadCap:dropDownHead>
                    <MadCap:dropDownHotspot>XML example 2</MadCap:dropDownHotspot>
                </MadCap:dropDownHead>
                <MadCap:dropDownBody>
                    <MadCap:codeSnippet>
						<MadCap:codeSnippetCopyButton />
                        <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve" style="mc-code-lang: XML;">&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;databaseChangeLog
	xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mongodb-pro="http://www.liquibase.org/xml/ns/pro-mongodb"
xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd
http://www.liquibase.org/xml/ns/pro-mongodb http://www.liquibase.org/xml/ns/pro-mongodb/liquibase-pro-mongodb-latest.xsd"&gt;
	&lt;changeSet id="1" author="nvoxland" runWith="mongosh"&gt;
		&lt;mongodb-pro:mongo&gt;
db = db.getSiblingDB( 'mydb' );
db.createCollection('person2');
&lt;/mongodb-pro:mongo&gt;
		&lt;rollback&gt;
			&lt;mongodb-pro:mongo&gt;
db = db.getSiblingDB( 'mydb' );
db.person2.drop();
&lt;/mongodb-pro:mongo&gt;
		&lt;/rollback&gt;
	&lt;/changeSet&gt;
	&lt;changeSet id="2" author="nvoxland" runWith="mongosh"&gt;
		&lt;mongodb-pro:mongoFile path="scriptFile.js" relativeToChangelogFile="true"/&gt;
		&lt;rollback&gt;
			&lt;mongodb-pro:mongoFile path="scriptFile-rollback.js" relativeToChangelogFile="true"/&gt;
		&lt;/rollback&gt;
	&lt;/changeSet&gt;
	&lt;changeSet id="3" author="nvoxland" runWith="mongosh"&gt;
		&lt;mongodb-pro:mongo&gt;
db.products.insertMany( [
{ item: "card", qty: 15 },
{ item: "envelope", qty: 20 },
{ item: "stamps" , qty: 30 }
] );
&lt;/mongodb-pro:mongo&gt;
		&lt;rollback&gt;
			&lt;mongodb-pro:mongo&gt;
db.products.deleteMany( { } );
&lt;/mongodb-pro:mongo&gt;
		&lt;/rollback&gt;
	&lt;/changeSet&gt;
&lt;/databaseChangeLog&gt;</MadCap:codeSnippetBody>
                    </MadCap:codeSnippet>
                </MadCap:dropDownBody>
            </MadCap:dropDown>
            <MadCap:dropDown>
                <MadCap:dropDownHead>
                    <MadCap:dropDownHotspot>YAML example</MadCap:dropDownHotspot>
                </MadCap:dropDownHead>
                <MadCap:dropDownBody>
                <MadCap:codeSnippet>
                    <MadCap:codeSnippetCopyButton />
                    <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve" style="mc-code-lang: JavaScript;">databaseChangeLog:
- changeSet:
      id:  1
      author:  your.name
      labels: example-label
      context: example-context
      comment: example-comment
      changes:
       - createTable:
            tableName:  person
            columns:
              - column:
                  name:  id
                  type:  int
                  autoIncrement:  true
                  constraints:
                    primaryKey:  true
                    nullable:  false
              - column:
                  name:  name
                  type:  varchar(50)
                  constraints:
                    nullable:  false
              - column:
                  name:  address1
                  type:  varchar(50)
              - column:
                  name:  address2
                  type:  varchar(50)
              - column:
                  name:  city
                  type:  varchar(30)

- changeSet:
      id:  2
      author:  your.name
      labels: example-label
      context: example-context
      comment: example-comment
      changes:
       - createTable:
            tableName:  company
            columns:
              - column:
                  name:  id
                  type:  int
                  autoIncrement:  true
                  constraints:
                    primaryKey:  true
                    nullable:  false
              - column:
                  name:  name
                  type:  varchar(50)
                  constraints:
                    nullable:  false
              - column:
                  name:  address1
                  type:  varchar(50)
              - column:
                  name:  address2
                  type:  varchar(50)
              - column:
                  name:  city
                  type:  varchar(30)

- changeSet:
      id:  3
      author:  other.dev
      labels: example-label
      context: example-context
      comment: example-comment
      changes:
       - addColumn:
            tableName:  person
            columns:
              - column:
                  name:  country
                  type:  varchar(2) 
</MadCap:codeSnippetBody>
                </MadCap:codeSnippet></MadCap:dropDownBody>
            </MadCap:dropDown>
            <MadCap:dropDown>
                <MadCap:dropDownHead>
                    <MadCap:dropDownHotspot style="font-size: 18pt;">JSON example</MadCap:dropDownHotspot>
                </MadCap:dropDownHead>
                <MadCap:dropDownBody>
                    <MadCap:codeSnippet>
						<MadCap:codeSnippetCopyButton />
                        <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve" style="mc-code-lang: Python;">JSON example
						{
						"databaseChangeLog": [
						---------------------------CREATE AND DROP COLLECTION---------------------------
						{
						"changeSet": {
						"id": "1",
						"author": "as",
						"labels": "test_label",
						"context": "test_context",
						"comment": "test_comment",
						"changes": [
						{
						"createCollection": {
						"collectionName": "countries_json"
						}
						}
						]
						}
						},
						{
						"changeSet": {
						"id": "2",
						"author": "as",
						"changes": [
						{
						"dropCollection": {
						"collectionName": "towns_json"
						}
						}
						],
						"rollback": ""
						}
						},
						---------------------------INSERT ONE---------------------------		
						{
						"changeSet": {
						"id": "3",
						"author": "as",
						"changes": [
						{
						"insertOne": {
						"collectionName": "towns_json",
						"document": {
						"$rawJson": {
						"name": "New York",
						"population": 222000000,
						"famousFor": [ "the MOMA", "food", "Derek Jeter" ],
						"mayor": {
						"name": "Bill de Blasio",
						"party": "D"
						}
						}
						}
						}
						}
						],
						"rollback": ""
						}
						},	
						---------------------------INSERT MANY---------------------------	
						{
						"changeSet": {
						"id": "4",
						"author": "as",
						"changes": [
						{
						"insertMany": {
						"collectionName": "countries_json",
						"documents": {
						"$rawJson": [
						{
						"_id" : "us",
						"name" : "United States",
						"exports" : {
						"foods" : [
						{"name" : "bacon", "tasty" : "true" },
						{"name" : "burger"}
						]
						}
						},
						{
						"_id" : "ca",
						"name" : "Canada",
						"exports" : {
						"foods" : [
						{"name" : "bacon", "tasty" : false },
						{"name" : "syrup", "tasty" : true}
						]
						}
						},
						{
						"_id" : "mx",
						"name" : "Mexico",
						"exports" : {
						"foods" : [
						{"name" : "salsa", "tasty" : true, "condiment" : true}
						]
						}
						}
						]
						}
						}
						}
						],
						"rollback": {
						"runCommand": {
						"command": "{ delete: \"countries_json\", deletes: [{q: { }, limit: 0}] }"
						}
						}
						}
						},
						---------------------------CREATE AND DROP INDEX---------------------------		
						{
						"changeSet": {
						"id": "5",
						"author": "as",
						"changes": [
						{
						"createIndex": {
						"collectionName": "countries_json",
						"keys": {
						"$rawJson": {
						"name": 1,
						"type": 1
						}
						},
						"options": {
						"$rawJson": {
						"unique": true,
						"name": "ui_countries_json"
						}
						}
						}
						}
						]
						}
						},
						{
						"changeSet": {
						"id": "6",
						"author": "as",
						"changes": [
						{
						"dropIndex": {
						"collectionName": "countries_json",
						"keys": {
						"$rawJson": {
						"name": 1,
						"type": 1
						}
						},
						"options": {
						"$rawJson": {
						"unique": true,
						"name": "ui_countries_json"
						}
						}
						}
						}
						]
						}
						},
						---------------------------RUN COMMAND---------------------------		
						{
						"changeSet": {
						"id": "7",
						"author": "as",
						"changes": [
						{
						"runCommand": {
						"command": "{ buildInfo: 1 }"
						}
						}
						],
						"rollback": ""
						}
						},
						---------------------------ADMIN COMMAND---------------------------			
						{
						"changeSet": {
						"id": "8",
						"author": "as",
						"changes": [
						{
						"adminCommand": {
						"command": "{ buildInfo: 1 }"
						}
						}
						],
						"rollback": ""
						}
						}
						]
					}</MadCap:codeSnippetBody>
                    </MadCap:codeSnippet>
                </MadCap:dropDownBody>
            </MadCap:dropDown>
            <li>Navigate to your project folder in the CLI and run the <MadCap:variable name="General.Liquibase" />&#160;<MadCap:xref href="../../../commands/change-tracking/status.htm">status</MadCap:xref> command to see whether the connection is successful:</li><pre xml:space="preserve">
                <code class="language-text">liquibase status --username=test --password=test --changelog-file=&lt;changelog.xml&gt;</code>
            </pre>
            <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">You can pass arguments in the CLI or keep them in the <MadCap:variable name="General.Liquibase" /> properties file.</p>
            <li>Make changes to your database with the <MadCap:xref href="../../../commands/update/update.html">update</MadCap:xref> command.</li><pre xml:space="preserve">
                <code class="language-text">liquibase update --changelog-file=&lt;changelog.xml&gt;</code>
            </pre>
            <li>From a database UI tool, ensure that your database contains <code>myCollection</code> along with the <MadCap:xref href="../../../concepts/tracking-tables/databasechangelog-table.html">[%=General.databasechangelog%] table</MadCap:xref> and <MadCap:xref href="../../../concepts/tracking-tables/databasechangeloglock-table.html">[%=General.databasechangeloglock%] table</MadCap:xref>.</li>
            <p class="tip" MadCap:autonum="&lt;b&gt;Tip: &lt;/b&gt;">You can use <a href="https://www.mongodb.com/products/compass">MongoDB Compass</a> to easily view collections in your database. For example, run the commands <code>use myDatabase</code> and <code>db.myCollection.find()</code>.</p>
        </ol>
    </body>
</html>