<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <body>
        <p>You can use XML, YAML, or JSON "modeled"&#160;<MadCap:variable name="General.changelog" />s instead of writing plain or Formatted Mongo scripts in JavaScript. XML, YAML, and JSON&#160;<MadCap:variable name="General.changelog" />s have all the functionality of a Formatted Mongo <MadCap:variable name="General.changelog" />, like specifying metadata tags and including other <MadCap:variable name="General.changelog" />s. You must specify <code>mongosh</code> as the value of <code>runWith</code> in each <MadCap:variable name="General.changeset" />.</p>
        <p>In a modeled <MadCap:variable name="General.changelog" />, you can specify <code>mongosh</code> code within the <code>mongo</code> and <code>mongoFile</code>&#160;<MadCap:variable name="General.changetypes" />s. <MadCap:variable name="General.Liquibase" /> then implements this in your database. However, the actual <code>mongosh</code> you specify is the same as in Formatted Mongo.</p>
        <p>If you want to use the <code>include</code> or <code>includeAll</code> tag in a root <MadCap:variable name="General.changelog" />, it must be an XML, YAML, or JSON file. The child <MadCap:variable name="General.changelog" />s you reference can be written in Formatted Mongo, XML, YAML, or JSON.</p>
        <ul class="tabs">
            <li class="tab-link current" data-tab="tab-1">XML example</li>
            <li class="tab-link" data-tab="tab-2">YAML example</li>
            <li class="tab-link" data-tab="tab-3">JSON example</li>
        </ul>
        <div class="tab-content current" id="tab-1">
            <p>The <MadCap:variable name="General.Liquibase" /> MongoDB&#160;Pro extension uses a unique <code>mongodb-pro</code> XML namespace and XSD files in the <MadCap:variable name="General.changelog" /> header. However, the <code>ext</code> prefix used with other extensions is backwards-compatible:</p><pre xml:space="preserve"><code class="language-xml">&lt;databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:mongodb-pro="http://www.liquibase.org/xml/ns/pro-mongodb"
    xmlns:mongodb="http://www.liquibase.org/xml/ns/mongodb"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd
    http://www.liquibase.org/xml/ns/pro-mongodb http://www.liquibase.org/xml/ns/pro-mongodb/liquibase-pro-mongodb-latest.xsd
    http://www.liquibase.org/xml/ns/mongodb http://www.liquibase.org/xml/ns/mongodb/liquibase-mongodb-latest.xsd"&gt;

    &lt;changeSet id="1" author="your.name" runWith="mongosh"&gt;
        &lt;mongodb-pro:mongo dbms="mongodb"&gt;
            db.createCollection('person')
        &lt;/mongodb-pro:mongo&gt;
        &lt;rollback&gt;
            &lt;mongodb-pro:mongo&gt;
                db.person.drop()
            &lt;/mongodb-pro:mongo&gt;
        &lt;/rollback&gt;
    &lt;/changeSet&gt;

    &lt;changeSet id="2" author="your.name" runWith="mongosh"&gt;
        &lt;mongodb-pro:mongoFile dbms="mongodb" path="scriptFile.txt" relativeToChangelogFile="true"/&gt;
        &lt;rollback&gt;
            &lt;mongodb-pro:mongo&gt;
                db.company.drop()
            &lt;/mongodb-pro:mongo&gt;
        &lt;/rollback&gt;
    &lt;/changeSet&gt;

&lt;/databaseChangeLog&gt;</code></pre>
        </div>
        <div class="tab-content" id="tab-2"><pre xml:space="preserve"><code class="language-yaml">databaseChangeLog:
  - changeSet:
      id: 1
      author: your.name
      runWith: mongosh
      changes:
        - mongo:
            mongo: "db.createCollection('person')"
            dbms: mongodb
        - rollback:
            mongo:
              mongo: "db.person.drop()"

  - changeSet:
      id: 2
      author: your.name
      runWith: mongosh
      changes:
        - mongoFile:
            path: "scriptFile.txt"
            dbms: mongodb
            relativeToChangelogFile: "true"
        - rollback:
            mongo:
              mongo: "db.company.drop()"</code></pre>
        </div>
        <div class="tab-content" id="tab-3"><pre xml:space="preserve"><code class="language-json">{
  "databaseChangeLog": [

    {
      "changeSet": {
        "id": "1",
        "author": "your.name",
        "runWith": "mongosh",
        "changes": [
          {
            "mongo": {
              "dbms": "mongodb",
              "mongo": "db.createCollection('person')"
            }
          }
        ],
        "rollback": [
          {
            "mongo": {
              "mongo": "db.person.drop()"
            }
          }
        ]
      }
    },
    {
      "changeSet": {
        "id": "2",
        "author": "your.name",
        "runWith": "mongosh",
        "changes": [
          {
            "mongoFile": {
              "dbms": "mongodb",
              "path": "scriptFile.txt",
              "relativeToChangelogFile": true
            }
          }
        ],
        "rollback": [
          {
            "mongo": {
              "mongo": "db.company.drop()"
            }
          }
        ]
      }
    }
  ]
}</code></pre>
        </div>
    </body>
</html>