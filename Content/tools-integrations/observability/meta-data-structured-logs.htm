<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Default.EXCLUDE">
    <head>
    </head>
    <body>
        <h1>Introduce your userMetaData into Structured Logs</h1>
        <MadCap:snippetBlock src="../../Z_Resources/Snippets/images/icon-pro-top.flsnp" />
        <p>You can introduce and then access customized data from <MadCap:variable name="General.LBPro" /> operations using structured logs. This allows you to collect, inspect, and analyze the information which is useful in understanding and improving your SDLC. The two methods available are via API for developers and via File for all other users. A default <code>liquibase.customlogdata.yaml</code> file ships with the installer and the artifacts which has examples of the type of data you can include. </p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">If the file is in the working directory and uses the default name, <MadCap:variable name="General.Liquibase" /> uses it by default. It is not necessary to call the file out via the <code>--data-props</code> arg, etc.</p>
        <p>usermetadata is the reserved key for injecting key-values</p>
        <p><b>CLI:&#160;</b><code>--custom-log-data-file=liquibase.customlogdata.yaml</code>
        </p>
        <p><b>Env var:</b>&#160;<code>LIQUIBASE_CUSTOM_LOG_DATA_FILE=liquibase.UK-data-props.yaml</code></p>
        <p><b>defaults file property:</b>&#160;<code>liquibase.customLogDataFile=my-data.yaml</code></p>
        <h2>Introduce customized data methods</h2>
        <h3>Introduce usermetadata that is specific to a command</h3>
        <p>User meta data that is only used with update commands</p>
        <h3>Introduce usermetadata that is generic to any operation</h3>
        <p>General purpose usermetadata needs tracking every time <MadCap:variable name="General.Liquibase" /> runs<br /></p>
        <h2>File method</h2>
        <h2>API&#160;method</h2>
        <p>&#160;</p>
    </body>
</html>