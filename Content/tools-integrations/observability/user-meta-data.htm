<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Default.EXCLUDE">
    <head>
    </head>
    <body>
        <h1>Introduce your userMetaData into Structured Logs</h1>
        <MadCap:snippetBlock src="../../Z_Resources/Snippets/images/icon-pro-top.flsnp" />
        <p>You can introduce and then access customized data from <MadCap:variable name="General.LBPro" /> operations using structured logs. This allows you to collect, inspect, and analyze the information which is useful in understanding and improving your SDLC. The two methods available are via API for developers and via FILE for all other users.<br /></p>
        <h2>File method</h2>
        <p>The file that contains all of your customized data is called <code>liquibase.data.yaml</code>. Like a <MadCap:xref href="../../commands/flow/flow.htm">flow</MadCap:xref> file or <MadCap:xref href="../../commands/quality-checks/workflows/use-checks-settings-config-file.htm">Checks Settings</MadCap:xref> file, it will be found and used in the default location (cwd) and default name. It can also be specified via cli, env var, defaults file property, etc. </p>
        <p>a version ships with the installer and the artifacts which is commented and has examples</p>
        <p>usermetadata is the reserved key for injecting key-values</p>
        <p>like flowfile and checksettings file, if its in the cwd and uses default name, we ll use it by default, without it being called out via the --data-props arg, etc</p>
        <p><b>CLI:&#160;</b><code>--custom-log-data-file=liquibase.customlogdata.yaml</code>
        </p>
        <p><b>Env var:</b>&#160;<code>LIQUIBASE_CUSTOM_LOG_DATA_FILE=liquibase.UK-data-props.yaml</code></p>
        <p><b>defaults file property:</b>&#160;<code>liquibase.customLogDataFile=my-data.yaml</code></p>
        <h2>Use Cases</h2>
        <p>&#160;</p>
    </body>
</html>