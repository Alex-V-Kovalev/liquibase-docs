<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <h1>Structured Logging</h1>
        <MadCap:snippetBlock src="../../Z_Resources/Snippets/images/icon-pro-top.flsnp" />
        <p>Structured Logging allows Liquibase operation data to be made available for automated monitoring and analysis tools to read, query, and act upon in automated workflows. This gives users more power in a structured logging setting vs a non-structured log.</p>
        <h2>Implementation</h2>
        <p>Enable structured logging by setting the log format property to JSON&#160;or JSON_PRETTY. Once the log format is set, <MadCap:variable name="General.CompanyName" /> will begin to track your logging. You can continue to run commands just like usual. </p>
        <table style="width: 100%;">
            <col style="width: 33%;" />
            <col style="width: 33%;" />
            <col style="width: 33%;" />
            <thead>
                <tr>
                    <th>Environment Variable</th>
                    <th>CLI&#160;Command</th>
                    <th><MadCap:variable name="General.CompanyName" /> Properties file</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="center">LIQUIBASE_LOG_FORMAT</td>
                    <td class="center">--log-format</td>
                    <td class="center">liquibase.logFormat</td>
                </tr>
            </tbody>
        </table>
        <p>You may set the <code>--output-stream</code> of your structured logging to either STDERR&#160;and/or STDOUT. If the <code>--output-stream</code> is not specified, the logs will be split between STDERR&#160;and STDOUT as they always have. If you prefer all of the logs be sent to STDERR or STDOUT, use the following methods to do so:</p>
        <table style="width: 100%;">
            <col style="width: 50%;" />
            <col style="width: 50%;" />
            <thead>
                <tr>
                    <th>Command</th>
                    <th><MadCap:variable name="General.Liquibase" /> Behavior</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><code>--output-stream= STDERR</code>
                    </td>
                    <td>All output messages will go to STDERR</td>
                </tr>
                <tr>
                    <td><code>--output-stream= STDOUT</code>
                    </td>
                    <td>STDOUT mean all output messages will go to STDOUT. This is usually the console.</td>
                </tr>
            </tbody>
        </table>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>log-format = JSON logging Example</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <p>log-format = JSON logging looks like this with no line breaks, as intended for machine parsing and consumption by industry standand log tools.</p>
            <MadCap:dropDownBody><pre>Starting Liquibase at 16:40:53 (version [Core: //DAT-11693/7176/44d487/2023-02-09 14:35+0000, Pro: DAT-11693/2749/7aac10/2023-02-09T14:30:34Z] #7176 built at 2023-02-09 14:35+0000)
                Liquibase Version: [Core: //DAT-11693/7176/44d487/2023-02-09 14:35+0000, Pro: DAT-11693/2749/7aac10/2023-02-09T14:30:34Z]
                Liquibase Labs [Core: //DAT-11693/7176/44d487/2023-02-09 14:35+0000, Pro: DAT-11693/2749/7aac10/2023-02-09T14:30:34Z] by Liquibase licensed to Dev until Sat Dec 30 22:59:59 CST 2023
                {"timestamp":"2023-02-27T22:40:53.029Z","level":"INFO","class":"liquibase.integration","thread":"1","message":"Starting command execution.","liquibaseVersion":"DEV","liquibaseSystemUser":"mariochampion","liquibaseSystemName":"mmc-mbp.lan"}
                {"timestamp":"2023-02-27T22:40:53.131Z","level":"INFO","class":"liquibase.license","thread":"1","message":"Successfully installed license from Base64 string starting with 'ABwwGgQU6h' (property liquibaseProLicenseKey).\n","liquibaseOperation":"update"}
                {"timestamp":"2023-02-27T22:40:53.272Z","level":"INFO","class":"liquibase.database","thread":"1","message":"Set default schema name to PUBLIC","liquibaseOperation":"update","liquibaseCommandName":"update"}
                {"timestamp":"2023-02-27T22:40:53.439Z","level":"INFO","class":"liquibase.lockservice","thread":"1","message":"Successfully acquired change log lock","liquibaseOperation":"update","liquibaseCommandName":"update","changesetSql":"INSERT INTO PUBLIC.DATABASECHANGELOGLOCK (ID, LOCKED) VALUES (1, FALSE)"}
                {"timestamp":"2023-02-27T22:40:53.450Z","level":"INFO","class":"liquibase.changelog","thread":"1","message":"Creating database history table with name: PUBLIC.DATABASECHANGELOG","liquibaseOperation":"update","liquibaseCommandName":"update","changesetSql":"INSERT INTO PUBLIC.DATABASECHANGELOGLOCK (ID, LOCKED) VALUES (1, FALSE)","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":""}
                {"timestamp":"2023-02-27T22:40:53.455Z","level":"INFO","class":"liquibase.changelog","thread":"1","message":"Reading from PUBLIC.DATABASECHANGELOG","liquibaseOperation":"update","liquibaseCommandName":"update","changesetSql":"CREATE TABLE PUBLIC.DATABASECHANGELOG (ID VARCHAR(255) NOT NULL, AUTHOR VARCHAR(255) NOT NULL, FILENAME VARCHAR(255) NOT NULL, DATEEXECUTED TIMESTAMP NOT NULL, ORDEREXECUTED INT NOT NULL, EXECTYPE VARCHAR(10) NOT NULL, MD5SUM VARCHAR(35), DESCRIPTION VARCHAR(255), COMMENTS VARCHAR(255), TAG VARCHAR(255), LIQUIBASE VARCHAR(20), CONTEXTS VARCHAR(255), LABELS VARCHAR(255), DEPLOYMENT_ID VARCHAR(10))","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":""}
                Running Changeset: example-changelog.sql::1::devone
                {"timestamp":"2023-02-27T22:40:53.484Z","level":"INFO","class":"liquibase.changelog","thread":"1","message":"Custom SQL executed","liquibaseOperation":"update","liquibaseCommandName":"update","changesetSql":"create table person (\n    id int primary key auto_increment not null,\n    name varchar(50) not null,\n    address1 varchar(50),\n    address2 varchar(50),\n    city varchar(30)\n)","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462","changesetId":"1","changesetAuthor":"devone","changesetFilepath":"example-changelog.sql","changesetComment":"example comment","changesetLabel":"example-label","changesetContext":"()","changesetOperationStart":"2023-02-27T16:40:53.477"}
                {"timestamp":"2023-02-27T22:40:53.488Z","level":"INFO","class":"liquibase.changelog","thread":"1","message":"ChangeSet example-changelog.sql::1::devone ran successfully in 12ms","liquibaseOperation":"update","liquibaseCommandName":"update","changesetSql":"create table person (\n    id int primary key auto_increment not null,\n    name varchar(50) not null,\n    address1 varchar(50),\n    address2 varchar(50),\n    city varchar(30)\n)","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462","changesetId":"1","changesetAuthor":"devone","changesetFilepath":"example-changelog.sql","changesetComment":"example comment","changesetLabel":"example-label","changesetContext":"()","changesetOperationStart":"2023-02-27T16:40:53.477","changesetOperationStop":"2023-02-27T16:40:53.488","changesetOutcome":"executed"}
                Running Changeset: example-changelog.sql::2::anotherdev
                {"timestamp":"2023-02-27T22:40:53.502Z","level":"INFO","class":"liquibase.changelog","thread":"1","message":"Custom SQL executed","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462","changesetId":"2","changesetAuthor":"anotherdev","changesetFilepath":"example-changelog.sql","changesetComment":"example comment","changesetLabel":"example-label","changesetContext":"example-context","changesetOperationStart":"2023-02-27T16:40:53.499","changesetSql":"create table company (\n    id int primary key auto_increment not null,\n    name varchar(50) not null,\n    address1 varchar(50),\n    address2 varchar(50),\n    city varchar(30)\n)"}
                {"timestamp":"2023-02-27T22:40:53.504Z","level":"INFO","class":"liquibase.changelog","thread":"1","message":"ChangeSet example-changelog.sql::2::anotherdev ran successfully in 5ms","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462","changesetId":"2","changesetAuthor":"anotherdev","changesetFilepath":"example-changelog.sql","changesetComment":"example comment","changesetLabel":"example-label","changesetContext":"example-context","changesetOperationStart":"2023-02-27T16:40:53.499","changesetSql":"create table company (\n    id int primary key auto_increment not null,\n    name varchar(50) not null,\n    address1 varchar(50),\n    address2 varchar(50),\n    city varchar(30)\n)","changesetOperationStop":"2023-02-27T16:40:53.504","changesetOutcome":"executed"}
                Running Changeset: example-changelog.sql::e24850bc-2310-11ed-861d-0242ac120002::mr.man
                {"timestamp":"2023-02-27T22:40:53.516Z","level":"INFO","class":"liquibase.changelog","thread":"1","message":"Custom SQL executed","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462","changesetId":"e24850bc-2310-11ed-861d-0242ac120002","changesetAuthor":"mr.man","changesetFilepath":"example-changelog.sql","changesetComment":"example comment","changesetLabel":"example-label","changesetContext":"example-context","changesetOperationStart":"2023-02-27T16:40:53.512","changesetSql":"alter table person add column country varchar(2)"}
               {"timestamp":"2023-02-27T22:40:53.518Z","level":"INFO","class":"liquibase.changelog","thread":"1","message":"ChangeSet example-changelog.sql::e24850bc-2310-11ed-861d-0242ac120002::mr.man ran successfully in 6ms","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462","changesetId":"e24850bc-2310-11ed-861d-0242ac120002","changesetAuthor":"mr.man","changesetFilepath":"example-changelog.sql","changesetComment":"example comment","changesetLabel":"example-label","changesetContext":"example-context","changesetOperationStart":"2023-02-27T16:40:53.512","changesetSql":"alter table person add column country varchar(2)","changesetOperationStop":"2023-02-27T16:40:53.517","changesetOutcome":"executed"}
                {"timestamp":"2023-02-27T22:40:53.526Z","level":"INFO","class":"liquibase","thread":"1","message":"UPDATE SUMMARY","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462"}
                UPDATE SUMMARY
                {"timestamp":"2023-02-27T22:40:53.526Z","level":"INFO","class":"liquibase","thread":"1","message":"Run:                          3","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462"}
                Run:                          3
                {"timestamp":"2023-02-27T22:40:53.527Z","level":"INFO","class":"liquibase","thread":"1","message":"Previously run:               0","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462"}
                Previously run:               0
                {"timestamp":"2023-02-27T22:40:53.528Z","level":"INFO","class":"liquibase","thread":"1","message":"DBMS mismatch:                0","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462"}
                DBMS mismatch:                0
                {"timestamp":"2023-02-27T22:40:53.529Z","level":"INFO","class":"liquibase","thread":"1","message":"Not in filter:                0","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462"}
                Not in filter:                0
                {"timestamp":"2023-02-27T22:40:53.530Z","level":"INFO","class":"liquibase","thread":"1","message":"-------------------------------","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462"}
                -------------------------------
                {"timestamp":"2023-02-27T22:40:53.530Z","level":"INFO","class":"liquibase","thread":"1","message":"Total change sets:            3\n","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462"}
                Total change sets:            3
                {"timestamp":"2023-02-27T22:40:53.531Z","level":"INFO","class":"liquibase","thread":"1","message":"Update command completed successfully.","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462","deploymentOutcome":"success","deploymentOutcomeCount":"3"}
                {"timestamp":"2023-02-27T22:40:53.535Z","level":"INFO","class":"liquibase.lockservice","thread":"1","message":"Successfully released change log lock","liquibaseOperation":"update","liquibaseCommandName":"update","liquibaseTargetUrl":"jdbc:h2:tcp://localhost:9090/mem:dev","commandLabelFilter":"()","commandContextFilter":"","deploymentId":"7537653462"}Liquibase command 'update' was executed successfully.</pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>log format = JSON_PRETTY logging Example</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p>Structured logging (JSON_PRETTY) looks like this example below with the JSON object log message with line breaks for easier human readability:</p><pre>
                Starting Liquibase at 16:38:59 (version [Core: //DAT-11693/7176/44d487/2023-02-09 14:35+0000, Pro: DAT-11693/2749/7aac10/2023-02-09T14:30:34Z] #7176 built at 2023-02-09 14:35+0000)
                Liquibase Version: [Core: //DAT-11693/7176/44d487/2023-02-09 14:35+0000, Pro: DAT-11693/2749/7aac10/2023-02-09T14:30:34Z]
                Liquibase Labs [Core: //DAT-11693/7176/44d487/2023-02-09 14:35+0000, Pro: DAT-11693/2749/7aac10/2023-02-09T14:30:34Z] by Liquibase licensed to Dev until Sat Dec 30 22:59:59 CST 2023
                {
                "timestamp": "2023-02-27T22:38:59.647Z",
                "level": "INFO",
                "class": "liquibase.integration",
                "thread": "1",
                "message": "Starting command execution.",
                "liquibaseVersion": "DEV",
                "liquibaseSystemUser": "mariochampion",
                "liquibaseSystemName": "mmc-mbp.lan"
                }
                {
                "timestamp": "2023-02-27T22:38:59.744Z",
                "level": "INFO",
                "class": "liquibase.license",
                "thread": "1",
                "message": "Successfully installed license from Base64 string starting with 'ABwwGgQU6h' (property liquibaseProLicenseKey).\n",
                "liquibaseOperation": "status"
                }
                {
                "timestamp": "2023-02-27T22:38:59.906Z",
                "level": "INFO",
                "class": "liquibase.database",
                "thread": "1",
                "message": "Set default schema name to PUBLIC",
                "liquibaseOperation": "status",
                "liquibaseCommandName": "status"
				}</pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
    </body>
</html>