<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <h1>Custom Policy Checks</h1>
        <p>There are a near-infinite number of use cases and contexts for which we cannot possibly produce all the desired policy checks. We offer Custom Policy Checks as a solution to enable the creation of any kind of check  that matches your needs via python scripts. Python scripts can be stored anywhere text files are stored including:&#160;CWD, local paths, S3, or the GitHub extension, etc. You can even use your own python virtual environment to write these custom scripts.</p>
        <h2>Uses</h2>
        <h2>Create a Custom Policy Check</h2>
        <p>Steps:</p>
        <p>Create a new template check named CustomCheckTemplate and copy and customize it to create a custom policy check.</p>
        <p>Same experience as other checks, just new fields, such as SCRIPT_PATH to specify a path to a user-provided script, which performs the actual check.</p>
        <p>Essentially, the python script at SCRIPT_PATH is called by the custom check, and it returns either TRUE or FALSE (or status.fired=TRUE, status.fired=FALSE) to liquibase to indicate the check has triggered or not. The check is just like a traditional check in that there is a name, description, severity/return code, and message.</p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">Technical requirements: Users must have JDK 17+, and the graalpy jar, etc.</p>
        <h3>Security settings</h3>
        <p>Customizing policy checks is optional and OFF by default</p>
        <p>master switch: <code>--checks-scripts-enabled</code></p>
        <p>or <code>LIQUIBASE_COMMAND_CHECKS_RUN_CUSTOM_CHECKS_ENABLED=true|false</code>, etc</p>
        <p>Customized policy checks only apply to <code>checks run</code> so that you can set up checks etc before you use them.</p>
        <p>restrict scripts to a certain path: <code>--checks-scripts-paths</code></p>
    </body>
</html>