<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/commands/quality-checks/checks-packages/home.html" />
        <meta name="description" content="Checks-packages is a YAML file that allows you to create a list of multiple Checks Settings Configuraiton Files that can be run in one command." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <h1>Quality Checks Packages</h1>
        <p>
            <MadCap:snippetText src="../../../Z_Resources/Snippets/images/icon-pro-top.flsnp" /> </p>
        <p>In <MadCap:variable name="General.Liquibase" /> 4.25.0+ you can organize your quality checks into packages. A checks package is a YAML&#160;file that allows you to create a list of multiple <a href="https://docsstage.liquibase.com/commands/quality-checks/workflows/use-checks-settings-config-file.html">Checks Settings Configuration Files</a>. You can apply multiple checks with a single <code>checks run</code> or<code> checks show</code> command. This allows different teams to own, control, update, and automatically synchronize their checks with their dependent teams.  Quality checks resources are easily centralized with checks packages. The checks packages file is the central hub that reaches out to the local and remote <code>checks-settings</code> files needed for different jobs, pipelines, and teams. For example, if your Security team stores their checks in one place, the checks packages file that points to that security checks file will pick up the latest version. This allows your distinct teams to reproduce the same outcome even if files are located separately.</p>
        <h2>checks packages rules</h2>
        <p>Be aware of these rules when creating a checks package file.</p>
        <ul>
            <li>checks packages only works with the <code>run</code> and <code>show</code> subcommands</li>
            <li>Checks packages are a collection of <code>checks settings</code> files. This has the following implications:<br /><ul><li><MadCap:variable name="General.Liquibase" /> ensures that <code>checks settings</code> files are not duplicated in a package. However, there can be two checks with the same name in a package if they each have different checks-settings files.</li></ul></li>
            <li>you cannot use <code>customize</code>, <code>copy</code>, <code>bulkset</code>, <code>edit</code>, or <code>delete</code> subcommands with the <code>checks settings</code> file that is  part of a checks packages file.</li>
        </ul>
        <h2>Create a checks packages file</h2>
        <p>Run the <code>liquibase checks create</code> command to create a new yaml <code>checks package</code> file.</p>
        <p>You can set the following properties for the checks package file in the CLI, <MadCap:variable name="General.liquiPropFile" /> file, or as Environment Variables. In the example below the CLI input is used.:</p>
        <table style="width: 100%;margin-left: auto;margin-right: auto;">
            <col />
            <col />
            <col />
            <thead>
                <tr>
                    <th>Checks package property</th>
                    <th>CLI example</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><code>--package-file</code>
                    </td>
                    <td><code>liquibase checks run --packages-file=security-checks.pkg</code>
                    </td>
                    <td>
                        <p>The file name of the yaml file to be created. defaults to <code>liquibase.checks-package.yaml</code> if not set.</p>
                    </td>
                </tr>
                <tr>
                    <td><code>--package-name</code>
                    </td>
                    <td><code>liquibase checks show --package-name=changelog-checks.pkg</code>
                    </td>
                    <td>
                        <p>The name of the checks-package object inside the file to be created</p>
                    </td>
                </tr>
                <tr>
                    <td><code>--package-contents</code>
                    </td>
                    <td><code>liquibase checks show --package-contents=database-checks.pkg</code>
                    </td>
                    <td>
                        <p>The file, files, or dir of files to be included in the <code>checks-package</code> object</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h3>Additional checks packages features</h3>
        <p>There is a column in the <code>checks show</code> table that displays the source check-settings file. There is also a line in the console output for <code>checks run</code> that highlights the <code>check-settings</code> file which holds the enabled checks and other check run console output. Learn how to <MadCap:xref href="../workflows/use-checks-settings-config-file.htm">Use the Checks Settings Configuration File</MadCap:xref> here.</p>
        <h3>Checks Packages File Example</h3><pre xml:space="preserve"><code class="language-yaml">
## This is a Liquibase checks packages formatted yaml file.
## It contains just one or more 'checksPackages' objects ## with one or more named checks-settings-files.
## These checks-settings-files listed in a package are processed sequentially
## during 'liquibase checks run' or 'liquibase checks show' commands
## which specify this file as the checks-settings-file property.
## Learn more at https://docs.liquibase.com/quality-checks
## Uncomment and change names with your checks-settings-files
checksPackages:
- name: "master-checks-Sept2023.pkg"
files:
- "./liquibase.checks-settings.conf"
- "./liquibase.more.checks-settings.yaml"
- hashicorp,secret/liquibase/ChecksSettingsFile,checksSettingsFile</code></pre>
        <h2>Related links</h2>
        <ul>
            <li>
                <MadCap:xref href="checks-packages-paths.htm">checks-packages Paths</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../home.htm">Quality Checks</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../workflows/home.htm">Get Started with the checks Command</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../checks/home.htm">List of Quality Checks</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../workflows/use-quality-checks-auto-severity-exit-code.htm">Use Quality Checks in Automation: Severity and Exit Code</MadCap:xref>
            </li>
        </ul>
    </body>
</html>