<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/commands/quality-checks/checks-packages/home.html" />
        <meta name="description" content="Checks-packages is a YAML file that allows you to create a list of multiple Checks Settings Configuraiton Files that can be run in one command." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <MadCap:snippetBlock src="../../../Z_Resources/Snippets/images/icon-pro-top.flsnp" />
        <h1>Quality Checks Packages</h1>
        <p>You can create a YAML <b>checks package file</b> to organize your <a href="../workflows/use-checks-settings-config-file.htm">checks settings  files</a>. Using a checks package makes it easy to specify policies for different  workflows all in one place. Then you can apply all your checks with a single <code class="language-text">checks run</code> or <code class="language-text">checks show</code> command, just like you would when running checks from a single settings file.</p>
        <p>A package file contains one or more <b>package objects</b>, such as package objects for <code class="language-text">DEV</code>, <code class="language-text">QA</code>, and <code class="language-text">PROD</code> environments. A package contains one or more <b>checks settings files</b>. Checks settings files specify which quality checks are enabled (ready to run) as well as any custom check behavior. The checks settings file can have the <code class="language-text">.conf</code> or <code class="language-text">.yaml</code> extension.</p>
        <p>Checks packages are available in <MadCap:variable name="General.Liquibase" /> 4.25.0 and later.</p>
        <h2>Uses</h2>
        <p>Checks packages allow different teams to own, control, update, and automatically synchronize their checks with their dependent teams. The checks packages file is the central hub that reaches out to the local and remote checks settings files needed for different jobs, pipelines, and teams.</p>
        <p>For example, if your security team stores their checks in one place, the checks package file that points to that security checks file will pick up the latest version. This allows your distinct teams to reproduce the same outcome even if files are located separately.</p>
        <h2>Rules</h2>
        <ul>
            <li>Checks packages <b>only</b> work with the <code><MadCap:xref href="../subcommands/run.htm">run</MadCap:xref></code> and <code><MadCap:xref href="../subcommands/show.htm">show</MadCap:xref></code> subcommands</li>
            <li>Checks package objects are a <b>collection of checks settings files</b>. This has the following implications:<br /><ul><li><MadCap:variable name="General.Liquibase" /> ensures that checks settings files are not duplicated in a package &lt;object?&gt;.</li><li>However, there can be two checks with the same name in a package &lt;object?&gt; if they each have different checks settings files.</li></ul></li>
            <li>You <b>cannot</b> use <code><MadCap:xref href="../subcommands/bulk-set.htm">bulk-set</MadCap:xref></code>, <code><MadCap:xref href="../subcommands/copy.htm">copy</MadCap:xref></code>, <code><MadCap:xref href="../subcommands/create.htm">create</MadCap:xref></code>, <code><MadCap:xref href="../subcommands/customize.htm">customize</MadCap:xref></code>, <code><MadCap:xref href="../subcommands/delete.htm">delete</MadCap:xref></code>, <code><MadCap:xref href="../subcommands/disable.htm">disable</MadCap:xref></code>, <code><MadCap:xref href="../subcommands/enable.htm">enable</MadCap:xref></code>, or <code><MadCap:xref href="../subcommands/reset.htm">reset</MadCap:xref></code> subcommands with the checks settings file that is  part of a checks packages file.</li>
        </ul>
        <h2>Create a checks package file</h2>
        <ol>
            <li><b>Create a template <a href="../workflows/use-checks-settings-config-file.htm">checks settings file</a>.</b> You will use this to create multiple checks settings files that will be useful in your checks package file. Run any quality check command:</li><pre><code class="language-shell">liquibase checks show</code></pre>
            <p>Select <code class="language-text">1</code> to use the default checks settings file (<code class="language-text">liquibase.checks-settings.conf</code>). When successful, <MadCap:variable name="General.Liquibase" /> displays the following message along with the output of the command you ran:</p><pre><code class="language-text">liquibase.checks-settings.conf successfully created!</code></pre>
            <li><b>Prepare a "real" checks settings file</b> based on the template:</li>
            <ol>
                <li>Use <code><a href="../subcommands/bulk-set.htm">checks bulk-set</a></code> to disable all checks within the template checks settings file you just created.</li><pre xml:space="preserve"><code class="language-shell">liquibase checks bulk-set --disable</code></pre>
                <li>Use <code><a href="../subcommands/enable.htm">checks enable</a></code> to enable <b>only the checks you want</b> to include in your package:</li><pre xml:space="preserve"><code class="language-shell">liquibase checks enable --check-name=ChangesetContextCheck</code></pre><pre xml:space="preserve"><code class="language-shell">liquibase checks enable --check-name=ChangesetLabelCheck</code></pre>
                <li>Use <code><a href="../subcommands/show.htm">checks show</a></code> to verify that you've enabled all the checks you want:</li><pre xml:space="preserve"><code class="language-shell">liquibase checks show</code></pre>
                <li>Make this into a separate checks settings file to be added to the package when ready:</li><pre xml:space="preserve"><code class="language-shell">cp liquibase.checks-settings.conf oracle-checks.yaml</code></pre>
            </ol>
            <li>Repeat Step 2 for as many checks settings files as you want to create, such as another checks settings file for <code class="language-text">postgres-checks.yaml</code> and <code class="language-text">sqlserver-checks.yaml</code>.</li>
            <li><b>Run the <code><a href="../subcommands/create.htm">checks create</a></code> command</b> to create a new YAML checks package file. If you specify a file that does not exist, <MadCap:variable name="General.Liquibase" /> will create it. For example:</li><pre><code class="language-shell">liquibase checks create \
  --package-file=liquibase.security-checks.yaml \
  --package-name=platform-checks \
  --package-contents=oracle-checks.yaml,postgres-checks.yaml,sqlserver-checks.yaml</code></pre>
            <p>This results in a package file called <code class="language-text">liquibase.security-checks.yaml</code>. The file contains one package object (<code class="language-text">platform-checks</code>), which contains three checks settings files for different databases:</p><pre xml:space="preserve"><code class="language-text">checksPackages:
  - name: platform-checks
    files:
      - oracle-checks.yaml
      - postgres-checks.yaml
      - sqlserver-checks.yaml</code></pre>
        </ol>
        <p>Now you have successfully created a checks package file with one package object.</p>
        <h2>Use the checks package file</h2>
        <p>Once you've created your file, you can use it with the <code>checks show</code> and <code>checks run</code> commands:</p><pre><code class="language-shell">liquibase checks show --package-name=platform-checks</code></pre><pre><code class="language-shell">liquibase checks run --package-name=platform-checks</code></pre>
        <p>You can specify multiple checks packages with a comma-separated list:</p><pre><code class="language-shell">liquibase checks run --package-name=platform-checks,qa-checks</code></pre>
        <h2>Additional checks packages features</h2>
        <p>There is a column in the <code class="language-text">checks show</code> table that displays the source check settings file. There is also a line in the console output for <code class="language-text">checks run</code> that highlights the check settings file which holds the enabled checks and other check run console output. Learn how to <MadCap:xref href="../workflows/use-checks-settings-config-file.htm">Use the Checks Settings Configuration File</MadCap:xref> here.</p>
        <h2>Parameters</h2>
        <div class="js-tabs">
            <ul class="js-tablist" data-existing-hx="h3">
                <li class="js-tablist__item"><a href="#cli" id="label_cli" class="js-tablist__link">CLI</a>
                </li>
                <li class="js-tablist__item"><a href="#flow" id="label_flow" class="js-tablist__link">Flow</a>
                </li>
                <li class="js-tablist__item"><a href="#properties_file" id="label_properties_file" class="js-tablist__link"><code>liquibase.properties</code></a>
                </li>
                <li class="js-tablist__item"><a href="#java_opts" id="label_java_opts" class="js-tablist__link"><code>JAVA_OPTS</code></a>
                </li>
                <li class="js-tablist__item"><a href="#envar" id="label_envar" class="js-tablist__link">Environment variable</a>
                </li>
            </ul>
            <div id="cli" class="js-tabcontent">
                <MadCap:snippetBlock src="../../../Z_Resources/Snippets/text/command-parameters-global-cmd/param-lists/command-checks-create.flsnp" MadCap:conditionTagExpression="include[command-parameters-format.cli]" />
            </div>
            <div id="flow" class="js-tabcontent">
                <MadCap:snippetBlock src="../../../Z_Resources/Snippets/text/command-parameters-global-cmd/param-lists/command-checks-create.flsnp" MadCap:conditionTagExpression="include[command-parameters-format.flow]" />
            </div>
            <div id="properties_file" class="js-tabcontent">
                <MadCap:snippetBlock src="../../../Z_Resources/Snippets/text/command-parameters-global-cmd/param-lists/command-checks-create.flsnp" MadCap:conditionTagExpression="include[command-parameters-format.properties-file]" />
            </div>
            <div id="java_opts" class="js-tabcontent">
                <MadCap:snippetBlock src="../../../Z_Resources/Snippets/text/command-parameters-global-cmd/param-lists/command-checks-create.flsnp" MadCap:conditionTagExpression="include[command-parameters-format.java-opts]" />
            </div>
            <div id="envar" class="js-tabcontent">
                <MadCap:snippetBlock src="../../../Z_Resources/Snippets/text/command-parameters-global-cmd/param-lists/command-checks-create.flsnp" MadCap:conditionTagExpression="include[command-parameters-format.envar]" />
            </div>
        </div>
        <h2>Checks Packages File Example</h2><pre xml:space="preserve"><code class="language-yaml">checksPackages:
- name: "master-checks-Sept2023"
  files:
   - "./liquibase.checks-settings.conf"
   - "./liquibase.more.checks-settings.yaml"
   - hashicorp,secret/liquibase/ChecksSettingsFile,checksSettingsFile</code></pre>
        <h2>Related links</h2>
        <ul>
            <li>
                <MadCap:xref href="../home.htm">Quality Checks</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="checks-packages-paths.htm">Quality Checks Packages Paths</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../workflows/home.htm">Get Started with the checks Command</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../checks/home.htm">List of Quality Checks</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../workflows/use-quality-checks-auto-severity-exit-code.htm">Use Quality Checks in Automation: Severity and Exit Code</MadCap:xref>
            </li>
        </ul>
    </body>
</html>