<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/commands/quality-checks/checks-packages/home.html" />
        <meta name="description" content="Checks-packages is a YAML file that allows you to create a list of multiple Checks Settings Configuraiton Files that can be run in one command." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <p>
            <MadCap:snippetText src="../../../Z_Resources/Snippets/images/icon-pro-top.flsnp" /> </p>
        <h1>Quality Checks Packages</h1>
        <p>You can create <b>checks package files</b> to organize your <a href="https://docsstage.liquibase.com/commands/quality-checks/workflows/use-checks-settings-config-file.html">Checks Settings Files</a>. Checks settings files specify custom behavior for your quality checks. A checks package is a central YAML file that serves as a <b>collection of multiple checks settings files</b>. Using a checks package makes it easy to apply policies from many different checks settings files all in one place.</p>
        <p>You can group together different checks settings files in your package to control which conditions or environments those settings files are active in. Then you can apply multiple checks with a single <code class="language-text">checks run</code> or <code class="language-text">checks show</code> command.</p>
        <p>This feature is available in <MadCap:variable name="General.Liquibase" /> 4.25.0 and later.</p>
        <h2>Uses</h2>
        <p>This allows different teams to own, control, update, and automatically synchronize their checks with their dependent teams.  Quality checks resources are easily centralized with checks packages. The checks packages file is the central hub that reaches out to the local and remote checks settings files needed for different jobs, pipelines, and teams. For example, if your Security team stores their checks in one place, the checks packages file that points to that security checks file will pick up the latest version. This allows your distinct teams to reproduce the same outcome even if files are located separately.</p>
        <h2>Rules</h2>
        <ul>
            <li>Checks packages <b>only</b> work with the <code class="language-text"><MadCap:xref href="../subcommands/run.htm">run</MadCap:xref></code> and <code class="language-text"><MadCap:xref href="../subcommands/show.htm">show</MadCap:xref></code> subcommands</li>
            <li>Checks packages are a <b>collection of checks settings files</b>. This has the following implications:<br /><ul><li><MadCap:variable name="General.Liquibase" /> ensures that checks settings files are not duplicated in a package. However, there can be two checks with the same name in a package if they each have different checks-settings files.</li></ul></li>
            <li>You <b>cannot</b> use <code class="language-text"><MadCap:xref href="../subcommands/bulk-set.htm">bulk-set</MadCap:xref></code>, <code class="language-text"><MadCap:xref href="../subcommands/copy.htm">copy</MadCap:xref></code>, <code><MadCap:xref href="../subcommands/create.htm">create</MadCap:xref></code>, <code class="language-text"><MadCap:xref href="../subcommands/customize.htm">customize</MadCap:xref></code>, <code class="language-text"><MadCap:xref href="../subcommands/delete.htm">delete</MadCap:xref></code>, <code><MadCap:xref href="../subcommands/disable.htm">disable</MadCap:xref></code>, <code class="language-text"><MadCap:xref href="../subcommands/enable.htm">enable</MadCap:xref></code>, or <code><MadCap:xref href="../subcommands/reset.htm">reset</MadCap:xref></code> subcommands with the checks settings file that is  part of a checks packages file.</li>
        </ul>
        <h2>Create a checks packages file</h2>
        <MadCap:snippetBlock src="../../../Z_Resources/Snippets/text/checks-create-package.flsnp" />
        <p>You can set the following properties for the checks package file in the CLI, <code><MadCap:variable name="General.liquiPropFile" /></code> file, or as environment variables. In the example below the CLI input is used:</p>
        <table style="width: 100%;margin-left: auto;margin-right: auto;">
            <col />
            <col />
            <col />
            <thead>
                <tr>
                    <th><MadCap:variable name="General.Param/Attr/Uppercased" />
                    </th>
                    <th>Description</th>
                    <th>Requirement</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><code class="language-text">--package-contents</code>
                    </td>
                    <td>
                        <p>The file(s) or directory to include in the checks package object</p>
                    </td>
                    <td><b>Required</b>
                    </td>
                </tr>
                <tr>
                    <td><code class="language-text">--package-name</code>
                    </td>
                    <td>
                        <p>The name of the checks package object inside the file to be created.</p>
                    </td>
                    <td><b>Required</b>
                    </td>
                </tr>
                <tr>
                    <td><code class="language-text">--package-file</code>
                    </td>
                    <td>
                        <p>The file name of the YAML file to create. <b>Default: <code>liquibase.checks-package.yaml</code></b></p>
                    </td>
                    <td>Optional</td>
                </tr>
            </tbody>
        </table>
        <h2>Use the checks package file</h2>
        <p>Once you've created your file, you can use it with the <code>checks show</code> and <code>checks run</code> commands:</p><pre><code class="language-shell">liquibase checks show --check-packages=security-checks.pkg</code></pre><pre><code class="language-shell">liquibase checks run --check-packages=security-checks.pkg</code></pre>
        <h2>Additional checks packages features</h2>
        <p>There is a column in the <code class="language-text">checks show</code> table that displays the source check settings file. There is also a line in the console output for <code class="language-text">checks run</code> that highlights the check settings file which holds the enabled checks and other check run console output. Learn how to <MadCap:xref href="../workflows/use-checks-settings-config-file.htm">Use the Checks Settings Configuration File</MadCap:xref> here.</p>
        <h2>Checks Packages File Example</h2><pre xml:space="preserve"><code class="language-yaml">checksPackages:
- name: "master-checks-Sept2023.pkg"
   files:
   - "./liquibase.checks-settings.conf"
   - "./liquibase.more.checks-settings.yaml"
   - hashicorp,secret/liquibase/ChecksSettingsFile,checksSettingsFile</code></pre>
        <h2>Related links</h2>
        <ul>
            <li>
                <MadCap:xref href="checks-packages-paths.htm">Quality Checks Packages Paths</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../home.htm">Quality Checks</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../workflows/home.htm">Get Started with the checks Command</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../checks/home.htm">List of Quality Checks</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="../workflows/use-quality-checks-auto-severity-exit-code.htm">Use Quality Checks in Automation: Severity and Exit Code</MadCap:xref>
            </li>
        </ul>
    </body>
</html>