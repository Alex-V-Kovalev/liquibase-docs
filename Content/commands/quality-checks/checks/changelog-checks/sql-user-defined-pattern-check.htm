<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:searchable="False">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/commands/quality-checks/checks/changelog-checks/sql-user-defined-pattern-check.html" />
        <meta name="description" content="This check scans SQL for the presence of specific patterns and warns the user when they are found." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <MadCap:snippetBlock src="../../../../Z_Resources/Snippets/images/icon-pro-top.flsnp" />
        <h1>SqlUserDefinedPatternCheck</h1>
        <p>This check scans SQL for the presence of specific patterns and warns the user when they are found.</p>
        <h2>Uses</h2>
        <p>Use the check to notify you when your custom specific patterns in the changelog are found. This quality check is an "open-ended" check which you can copy and customize for as many custom patterns, defined as simple strings or regex, as your naming, security, compliance, and other policies require. For example, if your polices require all tables to begin with <code class="language-text">tbl_</code> or indexes to end with <code class="language-text">_id</code>, this check is easy copied and customized into two checks with those patterns. If you are handy with regex, the limit for pattern finding is greatly expanded. This quality check, like other checks, can be configured with a severity level which returns an exit code designed to stop automated jobs, giving your team time to investigate your user-defined patterns before they are deployed.</p>
        <h2>Run the SqlUserDefinedPatternCheck check</h2>
        <p>To run the <code class="language-text">SqlUserDefinedPatternCheck</code> check, ensure you have a <MadCap:variable name="General.LBPro" /> license key and the <code class="language-text">checks-scope</code> property includes <code class="language-text"><MadCap:variable name="General.changelog" /></code>. The <MadCap:xref href="../../command-arguments/checks-scope.htm">checks-scope</MadCap:xref> parameter is set in the default properties file, environment variable, or any standard method. Then, check the changelog to see if <code class="language-text">SqlUserDefinedPatternCheck</code> is enabled.</p>
        <p>Enable the <code class="language-text">SqlUserDefinedPatternCheck</code> check by running the following command in the CLI:</p><pre><code class="language-text">liquibase checks enable --check-name=SqlUserDefinedPatternCheck</code></pre><pre>This check can not be enabled directly because one or more fields does not have a default value.  Create a copy of this check and initiate the customization workflow.<br /><br />Give your check a short name for easier identification (up to 64 alpha-numeric characters only) [SqlUserDefinedPatternCheck1]:<br /></pre>
        <p>In this example we will use <code>NoGrantAdminInGrantsPath</code> as our short name.</p>
        <table>
            <col style="width: auto;" />
            <col style="width: auto;" />
            <col style="width: auto;" />
            <col style="width: auto;" />
            <col style="width: auto;" />
            <col style="width: auto;" />
            <thead>
                <tr>
                    <th>Short Name</th>
                    <th>Scope</th>
                    <th>Enabled</th>
                    <th>Severity</th>
                    <th>Customization</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><code class="language-text">SqlUserDefinedPatternCheck</code>
                    </td>
                    <td><MadCap:variable name="General.changelog" />
                    </td>
                    <td>
                        <p>false</p>
                    </td>
                    <td>
                        <p>Default value: 0</p>
                        <MadCap:snippetBlock src="../../../../Z_Resources/Snippets/def/attributes/cli/quality-checks/cli-checks-severity-customization.flsnp" />
                    </td>
                    <td>
                        <p>SEARCH_STRING = null<br /></p>
                        <p>MESSAGE = A match for regular expression &lt;SEARCH_STRING&gt; was detected in Changeset &lt;CHANGESET&gt;.<br /></p>
                        <p>Strip_COMMENTS = true</p>
                    </td>
                    <td>This check scans SQL&#160;for the presence of specific patterns and warns the user when they are found.</td>
                </tr>
            </tbody>
        </table>
        <h3>Optional Compatible filters</h3>
        <p>In <MadCap:variable name="General.Liquibase" /> 4.27.0+ you can choose to enable the PATH_FILTER option. This can be used  to filter all changesets in changelogs in a specific directory that contain a specified string or regex.</p>
        <h4>Example</h4>
        <p> When you are prompted, Give your check a short name for easier identification.<br /></p>
        <p>In this example we will use <code>NoGrantAdminInGrantsPath</code> as our short name.</p><pre>New check 'NoGrantAdminInGrantsPath' created from 'SqlUserDefinedPatternCheck'<br /><br />Set the Severity to return a code of 0-4 when triggered. (options: 'INFO'|0, 'MINOR'|1, 'MAJOR'|2, 'CRITICAL'|3, 'BLOCKER'|4)? [INFO]:</pre>
        <p>In this example, we will set the severity to 3.</p>
        <p>You will go through a set of other conditions and eventually see:</p><pre>Set 'PATH_FILTER_REGEX':</pre>
        <p>In this example we will set the <code>PATH_FILTER_REGEX</code> to <code>admin</code>.</p>
        <p>This logs in the console and logs proof that changesets contain ADMIN, and with an RC of 3.</p>
        <table style="width: 100%; margin-left: auto; margin-right: auto;">
            <col />
            <col />
            <col />
            <thead>
                <tr>
                    <th>
                        <p>Configurable Filter Option</p>
                    </th>
                    <th>Value</th>
                    <th>Path</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <p>PATH_FILTER_REGEX</p>
                    </td>
                    <td>String or Regex</td>
                    <td>
                        <p>Relative</p>
                        <p>Compatible with:</p>
                        <ul>
                            <li>S3 and GitHub paths</li>
                            <li>include/includeAll changelogs</li>
                            <li>changelogs using relative paths</li>
                        </ul>
                    </td>
                </tr>
            </tbody>
        </table>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><code class="language-text">liquibase checks enable --check-name=SqlUserDefinedPatternCheck</code> example output</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody><pre xml:space="preserve"><code class="language-text">
Check 'SqlUserDefinedPatternCheck' has been enabled.
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| #   | Check Name                     | Short Name                 | Description                    | Enabled | Customization                  | Severity | Scope      |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| 10  | Warn on Detection of 'GRANT'   | SqlGrantWarn               | This check warns a user when   | false   | None                           | 0        | changelog  |
|     | Statements                     |                            | SQL contains 'GRANT'           |         |                                |          |            |
|     |                                |                            | statements so that they can    |         |                                |          |            |
|     |                                |                            | ensure that the privilege      |         |                                |          |            |
|     |                                |                            | being granted won't lead to    |         |                                |          |            |
|     |                                |                            | security issues.               |         |                                |          |            |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| 20  | Warn on Detection of 'REVOKE'  | SqlRevokeWarn              | This check warns a user when   | false   | None                           | 0        | changelog  |
|     | Statements                     |                            | SQL contains 'REVOKE'          |         |                                |          |            |
|     |                                |                            | statements so that they can    |         |                                |          |            |
|     |                                |                            | ensure that the privilege      |         |                                |          |            |
|     |                                |                            | being revoked won't lead to    |         |                                |          |            |
|     |                                |                            | data access and dependency     |         |                                |          |            |
|     |                                |                            | issues.                        |         |                                |          |            |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| 30  | Warn when 'DROP TABLE'         | ChangeDropTableWarn        | This check warns a user when a | false   | None                           | 0        | changelog  |
|     | detected                       |                            | table is being dropped so that |         |                                |          |            |
|     |                                |                            | they can ensure that dropping  |         |                                |          |            |
|     |                                |                            | the table won't lead to        |         |                                |          |            |
|     |                                |                            | unintentional loss of data.    |         |                                |          |            |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| 40  | Warn when 'DROP COLUMN'        | ChangeDropColumnWarn       | This check warns a user when a | false   | None                           | 0        | changelog  |
|     | detected                       |                            | column is being dropped so     |         |                                |          |            |
|     |                                |                            | that they can ensure that      |         |                                |          |            |
|     |                                |                            | dropping the column won't lead |         |                                |          |            |
|     |                                |                            | to unintentional loss of data. |         |                                |          |            |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| 50  | Warn when 'MODIFY column'    | ModifyDataTypeWarn         | This check warns a user when a | false   | None                           | 0        | changelog  |
|     | detected                       |                            | change will result in          |         |                                |          |            |
|     |                                |                            | modification of a data type so |         |                                |          |            |
|     |                                |                            | they can ensure that modifying |         |                                |          |            |
|     |                                |                            | the data type won't lead to    |         |                                |          |            |
|     |                                |                            | unintentional loss of data     |         |                                |          |            |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| 60  | Check for specific patterns in | SqlUserDefinedPatternCheck | This check scans raw SQL for   | false   | SEARCH_STRING = null           | 0        | changelog  |
|     | sql                            |                            | the presence of specific       |         | MESSAGE = A match for regular  |          |            |
|     |                                |                            | patterns and warns the user    |         | expression SEARCH_STRING was   |          |            |
|     |                                |                            | when they are found.           |         | detected in Changeset          |          |            |
|     |                                |                            |                                |         | CHANGESET.                     |          |            |
|     |                                |                            |                                |         | STRIP_COMMENTS = true          |          |            |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| 70  | Check Table Column Count       | TableColumnLimit           | Ensures that no table has more | true    | MAX_COLUMNS = 2                | 1        | changelog, |
|     |                                |                            | than a threshold number of     |         |                                |          | database   |
|     |                                |                            | columns.                       |         |                                |          |            |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| 80  | Object name pattern match      | ObjectNameMustMatch        | This check confirms the listed | false   | OPERATOR = STARTS_WITH         | 0        | changelog, |
|     |                                |                            | object names conform to the    |         | SEARCH_STRING = null           |          | database   |
|     |                                |                            | supplied pattern.              |         | OBJECT_TYPES = null            |          |            |
|     |                                |                            |                                |         | CASE_SENSITIVE = true          |          |            |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| 85  | Object name pattern not match  | ObjectNameMustNotMatch     | This check confirms the listed | false   | OPERATOR = STARTS_WITH         | 0        | changelog, |
|     |                                |                            | object names do not match the  |         | SEARCH_STRING = null           |          | database   |
|     |                                |                            | supplied pattern.              |         | OBJECT_TYPES = null            |          |            |
|     |                                |                            |                                |         | CASE_SENSITIVE = true          |          |            |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| 90  | Warn on Grant of Specific      | SqlGrantSpecificPrivsWarn  | This check warns a user when   | false   | PRIVILEGE_LIST = null          | 0        | changelog  |
|     | Privileges                     |                            | changeset includes or          |         |                                |          |            |
|     |                                |                            | generates sql that grants      |         |                                |          |            |
|     |                                |                            | specific privileges to a user  |         |                                |          |            |
|     |                                |                            | or role                        |         |                                |          |            |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| 100 | Warn when 'TRUNCATE TABLE'     | ChangeTruncateTableWarn    | This check warns a user when a | false   | None                           | 0        | changelog  |
|     | detected                       |                            | table is being truncated so    |         |                                |          |            |
|     |                                |                            | that they can ensure that      |         |                                |          |            |
|     |                                |                            | truncating the table won't     |         |                                |          |            |
|     |                                |                            | lead to unintentional loss of  |         |                                |          |            |
|     |                                |                            | data.                          |         |                                |          |            |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| 110 | Warn on Detection of grant     | SqlGrantOptionWarn         | This check warns a user when   | false   | None                           | 0        | changelog  |
|     | that contains 'WITH GRANT      |                            | SQL contains 'GRANT'           |         |                                |          |            |
|     | OPTION'                        |                            | statements that include the    |         |                                |          |            |
|     |                                |                            | 'WITH GRANT OPTION' clause so  |         |                                |          |            |
|     |                                |                            | that they can ensure that the  |         |                                |          |            |
|     |                                |                            | privilege being granted won't  |         |                                |          |            |
|     |                                |                            | lead to security issues        |         |                                |          |            |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| 130 | Warn on Detection of grant     | SqlGrantAdminWarn          | This check warns a user when   | false   | None                           | 0        | changelog  |
|     | that contains 'WITH ADMIN      |                            | SQL contains 'GRANT'           |         |                                |          |            |
|     | OPTION'                        |                            | statements that include the    |         |                                |          |            |
|     |                                |                            | 'WITH ADMIN OPTION' clause so  |         |                                |          |            |
|     |                                |                            | that they can ensure that the  |         |                                |          |            |
|     |                                |                            | privilege being granted won't  |         |                                |          |            |
|     |                                |                            | lead to security issues        |         |                                |          |            |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| 160 | Rollback Required for          | RollbackRequired           | This check triggers when a     | false   | None                           | 0        | changelog  |
|     | Changeset                      |                            | changeset does not have a      |         |                                |          |            |
|     |                                |                            | rollback defined.              |         |                                |          |            |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| 170 | Changesets Must Have a Label   | ChangesetLabelCheck        | This check enforces the        | false   | None                           | 0        | changelog  |
|     | Assigned                       |                            | Liquibase recommendation that  |         |                                |          |            |
|     |                                |                            | labels be assigned to each     |         |                                |          |            |
|     |                                |                            | changeset to provide better    |         |                                |          |            |
|     |                                |                            | deployment control and to      |         |                                |          |            |
|     |                                |                            | enhance traceability of        |         |                                |          |            |
|     |                                |                            | efforts across changesets.     |         |                                |          |            |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| 173 | Changesets Must Have a Context | ChangesetContextCheck      | This check enforces the        | false   | None                           | 0        | changelog  |
|     | Assigned                       |                            | Liquibase recommendation that  |         |                                |          |            |
|     |                                |                            | contexts be assigned to each   |         |                                |          |            |
|     |                                |                            | changeset to provide better    |         |                                |          |            |
|     |                                |                            | deployment control and to      |         |                                |          |            |
|     |                                |                            | enhance traceability of        |         |                                |          |            |
|     |                                |                            | efforts across changesets.     |         |                                |          |            |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| 176 | Changesets Must Have a Comment | ChangesetCommentCheck      | This check enforces the        | false   | None                           | 0        | changelog  |
|     | Assigned                       |                            | Liquibase recommendation that  |         |                                |          |            |
|     |                                |                            | comments be added to each      |         |                                |          |            |
|     |                                |                            | changeset to document the      |         |                                |          |            |
|     |                                |                            | purpose of a changeset for     |         |                                |          |            |
|     |                                |                            | other/future consumers of this |         |                                |          |            |
|     |                                |                            | changelog                      |         |                                |          |            |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| 500 | Table must have a comment      | TableCommentCheck          | This check flags any Table     | true    | None                           | 0        | database   |
|     |                                |                            | described in a changelog or    |         |                                |          |            |
|     |                                |                            | existing on a database target  |         |                                |          |            |
|     |                                |                            | which does not have a Comment. |         |                                |          |            |
|     |                                |                            | (Note: This is not a check for |         |                                |          |            |
|     |                                |                            | a Liquibase changelog          |         |                                |          |            |
|     |                                |                            | comment.)                      |         |                                |          |            |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| 510 | Table Comment Pattern Check    | ExamplePatternCheck        | This check triggers when       | true    | OPERATOR = CONTAINS            | 1        | changelog, |
|     |                                |                            | specific user-supplied         |         | SEARCH_STRING = PRIMARY_TABLE  |          | database   |
|     |                                |                            | patterns are found in Table    |         | MESSAGE = MATCH                |          |            |
|     |                                |                            | Comments.                      |         |                                |          |            |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| 510 | Table Comment Pattern Check    | TableCommentPatternCheck   | This check triggers when       | false   | OPERATOR = CONTAINS            | 0        | changelog, |
|     |                                |                            | specific user-supplied         |         | SEARCH_STRING = null           |          | database   |
|     |                                |                            | patterns are found in Table    |         | MESSAGE = A match for regular  |          |            |
|     |                                |                            | Comments.                      |         | expression SEARCH_STRING was   |          |            |
|     |                                |                            |                                |         | detected in IDENTIFIER.        |          |            |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| 570 | Constraint must exist          | ConstraintCheckShortName   | Check for and alert when       | true    | CONSTRAINT_OPERATOR = CONTAINS | 1        | database   |
|     |                                |                            | specified table does not       |         | TABLE_NAME = PRIMARY_TABLE     |          |            |
|     |                                |                            | contain the required           |         | COLUMN_NAME = NULLABLECOL      |          |            |
|     |                                |                            | constraint(s).                 |         | CONSTRAINT = PRIMARYKEY        |          |            |
|     |                                |                            |                                |         | CASE_SENSITIVE = false         |          |            |
|     |                                |                            |                                |         | MESSAGE = Example Message      |          |            |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| 570 | Constraint must exist          | ConstraintMustExist        | Check for and alert when       | false   | CONSTRAINT_OPERATOR =          | 0        | database   |
|     |                                |                            | specified table does not       |         | STARTS_WITH                    |          |            |
|     |                                |                            | contain the required           |         | TABLE_NAME = null              |          |            |
|     |                                |                            | constraint(s).                 |         | COLUMN_NAME = null             |          |            |
|     |                                |                            |                                |         | CONSTRAINT = PRIMARYKEY        |          |            |
|     |                                |                            |                                |         | CASE_SENSITIVE = true          |          |            |
|     |                                |                            |                                |         | MESSAGE = The specified table  |          |            |
|     |                                |                            |                                |         | 'TABLE_NAME' does not          |          |            |
|     |                                |                            |                                |         | contain the required           |          |            |
|     |                                |                            |                                |         | 'CONSTRAINT' constraint.       |          |            |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
| 570 | Constraint must exist          | ConstraintMustExistTEST    | Check for and alert when       | true    | CONSTRAINT_OPERATOR = ALL      | 0        | database   |
|     |                                |                            | specified table does not       |         | CONSTRAINT = Primarykey        |          |            |
|     |                                |                            | contain the required           |         | CASE_SENSITIVE = false         |          |            |
|     |                                |                            | constraint(s).                 |         | MESSAGE = any                  |          |            |
+-----+--------------------------------+----------------------------+--------------------------------+---------+--------------------------------+----------+------------+
Liquibase command 'checks enable' was executed successfully.</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
    </body>
</html>