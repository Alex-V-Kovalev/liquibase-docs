<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title>database-class parameter | Liquibase Docs</title>
        <meta rel="canonical" href="https://docs.liquibase.com/commands/config-ref/database-class.html" />
        <meta name="description" content="Reference information and use cases for the database-class parameter. The database-class global parameter is a string that specifies which  implementation of our Database class to use." />
    </head>
    <body>
        <h1><code>database-class</code> parameter</h1>
        <p>The <code>database-class</code> global parameter is a string that specifies which  implementation of our <a href="https://www.liquibase.org/javadoc/liquibase/database/Database.html">Database</a> class to use. By default, <MadCap:variable name="General.Liquibase" /> automatically determines the correct class based on your database connection.</p>
        <h2>Uses</h2>
        <p>When <MadCap:variable name="General.Liquibase" /> connects to a database, it selects an implementation of our Database class that represents the type of database you have connected to. We use that selection to know what kind of database you have and what functionality it supports.</p>
        <p>You should generally rely on <MadCap:variable name="General.Liquibase" />’s auto-detection logic to implement the Database class. However, you can override the selected class with the <code>database-class</code> parameter.</p>
        <h2>Setting the <code>database-class</code> parameter</h2>
        <p>You can set <code>database-class</code> in four ways:</p>
        <ul>
            <li>As a JVM system property</li>
            <li>In your <code><MadCap:variable name="General.liquiPropFile"></MadCap:variable></code> file</li>
            <li>As a global parameter in the CLI</li>
            <li>As an environment variable (<MadCap:variable name="General.LBPro" />)</li>
        </ul>
        <h3>Java system property</h3>
        <p>You can set <code>database-class</code> as a Java system property by using the <MadCap:xref href="../java-opts-environment-variable.htm">JAVA_OPTS Environment Variable</MadCap:xref> in your command line. The syntax on Mac/Linux is as follows:</p><pre xml:space="preserve"><code class="language-text">JAVA_OPTS=-Dliquibase.databaseClass=YOUR_CLASS &amp;&amp; liquibase update --changelog-file=dbchangelog.xml</code></pre>
        <p>The syntax on Windows requires the <code>set</code> command:</p><pre xml:space="preserve"><code class="language-text">set JAVA_OPTS=-Dliquibase.databaseClass=YOUR_CLASS &amp;&amp; liquibase update --changelog-file=dbchangelog.xml</code></pre>
        <h3><code><MadCap:variable name="General.liquiPropFile"></MadCap:variable></code> parameter</h3>
        <p>In <MadCap:variable name="General.Liquibase" /> 4.1+, you can set <code>database-class</code> by adding the following to your <code><MadCap:variable name="General.liquiPropFile"></MadCap:variable></code> file:</p><pre xml:space="preserve"><code class="language-text">liquibase.databaseClass: YOUR_CLASS</code></pre>
        <h3>CLI global parameter</h3>
        <p>You can use <code>database-class</code> as a global parameter in your command line with a single <MadCap:variable name="General.Liquibase" /> command, such as <code>update</code>:</p><pre xml:space="preserve"><code class="language-text">liquibase --database-class=YOUR_CLASS update --changelog-file=dbchangelog.xml</code></pre>
        <h3>Environment variable (<MadCap:variable name="General.LBPro" />)</h3>
        <p>If you use <MadCap:variable name="General.LBPro" />, you can set <code>database-class</code> as an environment variable. The syntax on Mac/Linux is as follows:</p><pre xml:space="preserve"><code class="language-text">LIQUIBASE_DATABASE_CLASS=YOUR_CLASS</code></pre>
        <p>The syntax on Windows requires the <code>set</code> command:</p><pre xml:space="preserve"><code class="language-text">set LIQUIBASE_DATABASE_CLASS=YOUR_CLASS</code></pre>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">The commands shown above only apply to the current shell. If you need to pass an environment variable to a child process without affecting the parent process, you can use the <code>export</code> command on Mac/Linux or the <code>setx</code> command on Windows.</p>
    </body>
</html>