<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
		<meta rel="canonical" href="https://docs.liquibase.com/commands/config-ref/always-override-stored-logic-schema.html" />
	</head>
    <body>
        <h1><code>always-override-stored-logic-schema</code> parameter</h1>
        <p>The <code>always-override-stored-logic-schema</code> global parameter is a Boolean value that you can use with the <MadCap:xref href="../../change-types/create-procedure.html">createProcedure</MadCap:xref> Change Type.</p>
        <p>When you generate SQL for a procedure without specifying a schema name, <code>always-override-stored-logic-schema</code> decides whether to explicitly include the default schema name with your procedure in the SQL.</p>
        <p>The default value of <code>always-override-stored-logic-schema</code> is <code>false</code>.</p>
        <h2><code>schemaName</code> attribute</h2>
        <p>You can use the <code>createProcedure</code> Change Type to define a stored SQL procedure in your <code><MadCap:variable name="General.changelog" /></code> or a file you specify. <code>createProcedure</code> has an optional attribute called <code>schemaName</code> that determines which schema the procedure is created in.</p>
        <p>When you create a procedure in <MadCap:variable name="General.Liquibase" />, the outputs of the <MadCap:xref href="../updateSQL.htm">updateSQL</MadCap:xref> command and <MadCap:xref href="../rollbackSQLtag.htm">rollbackSQL</MadCap:xref> command change based on what you specify for <code>schemaName</code> and <code>always-override-stored-logic-schema</code>:</p>
        <ul>
            <li>
                <p>If you <b>do specify</b> <code>schemaName</code>, <MadCap:variable name="General.Liquibase" /> explicitly prefixes your schema name to your procedure name in the <code>CREATE PROCEDURE</code> statement of the SQL. <MadCap:variable name="General.Liquibase" /> does this even if the schema name was not specified in the actual SQL, and no matter what you set <code>always-override-stored-logic-schema</code> to:</p><pre xml:space="preserve"><code class="language-text">CREATE &lt;your_schema&gt;.&lt;your_procedure&gt; AS…</code></pre>
            </li>
            <li>
                <p>If you <b>don't specify</b> <code>schemaName</code> and you set <code>always-override-stored-logic-schema</code> to <code>true</code>, <MadCap:variable name="General.Liquibase" /> prefixes the value of the <code>default-schema-name</code> parameter to your procedure name:</p><pre xml:space="preserve"><code class="language-text">CREATE &lt;default_schema&gt;.&lt;your_procedure&gt; AS…</code></pre>
            </li>
            <li>
                <p>If you <b>don't specify</b> <code>schemaName</code> and you set <code>always-override-stored-logic-schema</code> to <code>false</code>, <MadCap:variable name="General.Liquibase" /> does not explicitly modify the SQL to include the schema name. However, <MadCap:variable name="General.Liquibase" /> still creates your procedure in schema specified by <code>default-schema-name</code>:</p><pre xml:space="preserve"><code class="language-text">CREATE &lt;your_procedure&gt; AS…</code></pre>
            </li>
        </ul>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">You can set a value for <code>default-schema-name</code> or use the default one, which depends on your database. For example, the default value on an H2 database is <code>PUBLIC</code>.</p>
        <h2>Uses</h2>
        <p>If you run the SQL generated with <code>updateSQL</code> or <code>rollbackSQL</code> on another database or client, the new system may have a different setting of <code>default-schema-name</code> than the old one. In this case, you can set <code>always-override-stored-logic-schema</code> to <code>true</code> to ensure that objects are consistently created in the same schema names across multiple databases.</p>
        <p>The <code>always-override-stored-logic-schema</code> parameter also affects the SQL <MadCap:variable name="General.Liquibase" /> uses with the <MadCap:xref href="../update.html">update</MadCap:xref> command and <MadCap:xref href="../rollbackByTag.htm">rollback</MadCap:xref> command. However, when you use these two commands, <MadCap:variable name="General.Liquibase" /> always creates objects in the same schemas, even if the default schemas are different across the two systems, and regardless of the value of <code>always-override-stored-logic-schema</code>.</p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">Some databases store SQL in an <code>alias</code> instead of a <code>procedure</code>, such as H2. In these cases, <MadCap:variable name="General.Liquibase" /> may not explicitly add the schema prefix to the alias in the <code>updateSQL</code> output. However, <MadCap:variable name="General.Liquibase" /> still creates the alias in the appropriate schema.</p>
        <h2>Setting the <code>always-override-stored-logic-schema</code> parameter</h2>
        <p>You can set <code>always-override-stored-logic-schema</code> in four ways:</p>
        <ul>
            <li>As a JVM system property</li>
            <li>In your <code><MadCap:variable name="General.liquiPropFile" /></code> file</li>
            <li>As a global parameter in the CLI</li>
            <li>As an environment variable (<MadCap:variable name="General.LBPro" />)</li>
        </ul>
        <h3>Java system property</h3>
        <p>You can set <code>always-override-stored-logic-schema</code> as a Java system property by using the <MadCap:xref href="../../concepts/basic/java-opts-environment-variable.htm">JAVA_OPTS Environment Variable</MadCap:xref> in your command line. The syntax on Mac/Linux is as follows:</p><pre xml:space="preserve"><code class="language-text">JAVA_OPTS=-Dliquibase.alwaysOverrideStoredLogicSchema=&lt;true|false&gt; &amp;&amp; liquibase update-sql --changelog-file=dbchangelog.xml</code></pre>
        <p>The syntax on Windows requires the <code>set</code> command:</p><pre xml:space="preserve"><code class="language-text">set JAVA_OPTS=-Dliquibase.alwaysOverrideStoredLogicSchema=&lt;true|false&gt; &amp;&amp; liquibase update-sql --changelog-file=dbchangelog.xml</code></pre>
        <h3> <code><MadCap:variable name="General.liquiPropFile"></MadCap:variable></code> parameter</h3>
        <p>In <MadCap:variable name="General.Liquibase" /> 4.1+, you can set <code>always-override-stored-logic-schema</code> by adding the following to your <code><MadCap:variable name="General.liquiPropFile"></MadCap:variable></code> file:</p><pre xml:space="preserve"><code class="language-text">liquibase.alwaysOverrideStoredLogicSchema: &lt;true|false&gt;</code></pre>
        <h3>CLI global parameter</h3>
        <p>You can use <code>always-override-stored-logic-schema</code> as a global parameter in your command line with a single <MadCap:variable name="General.Liquibase" /> command, such as <code>updateSQL</code>:</p><pre xml:space="preserve"><code class="language-text">liquibase --always-override-stored-logic-schema=&lt;true|false&gt; update-sql --changelog-file=dbchangelog.xml</code></pre>
        <h3>Environment variable (<MadCap:variable name="General.LBPro" />)</h3>
        <p>If you use <MadCap:variable name="General.LBPro" />, you can set <code>always-override-stored-logic-schema</code> as an environment variable. The syntax on Mac/Linux is as follows:</p><pre xml:space="preserve"><code class="language-text">LIQUIBASE_ALWAYS_OVERRIDE_STORED_LOGIC_SCHEMA=&lt;true|false&gt;</code></pre>
        <p>The syntax on Windows requires the <code>set</code> command:</p><pre xml:space="preserve"><code class="language-text">set LIQUIBASE_ALWAYS_OVERRIDE_STORED_LOGIC_SCHEMA=&lt;true|false&gt;</code></pre>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">The commands shown above only apply to the current shell. If you need to pass an environment variable to a child process without affecting the parent process, you can use the <code>export</code> command on Mac/Linux or the <code>setx</code> command on Windows.</p>
    </body>
</html>