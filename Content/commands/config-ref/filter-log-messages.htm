<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title>filter-log-messages parameter | Liquibase Docs</title>
        <meta rel="canonical" href="https://docs.liquibase.com/commands/config-ref/filter-log-messages.html" />
        <meta name="description" content="Reference information for the filter-log-messages parameter. The filter-log-messages parameter defines whether Liquibase should filter the log messages for potentially insecure data." />
    </head>
    <body>
        <h1><code>filter-log-messages</code> parameter</h1>
        <p>The <code>filter-log-messages</code> parameter is a Boolean that defines whether <MadCap:variable name="General.Liquibase" /> should filter the log messages for potentially insecure data. For now, <MadCap:variable name="General.Liquibase" /> checks for and filters out the <MadCap:variable name="General.Hub" /> API key. The default value is <code>true</code>.</p>
        <h2>Uses</h2>
        <p><MadCap:variable name="General.Liquibase" /> log messages represent the records of events that occur when running commands. With log messages, you can typically find the reason for errors or exceptions and troubleshoot a problem. However, before <MadCap:variable name="General.Liquibase" /> sends all the information to <code>STDERR</code> or the log file, you can prevent sensitive data from being logged in the verbose log messages by using the <code>filter-log-messages</code> parameter.</p>
        <p>You can also use the <code>filter-log-messages</code> parameter along with the <MadCap:xref href="loglevel.htm">logLevel parameter</MadCap:xref>, which sets the amount of messages generated when running <MadCap:variable name="General.Liquibase" /> commands.</p>
        <p> Although, there may be cases when you need to set the <code>filter-log-messages</code> parameter to <code>false</code>:</p>
        <ul>
            <li>If you are trying to debug something related to a password or key and the filtered log messages can be helpful </li>
            <li>If you want to improve performance without checking log message strings. For example, when you  use the <code>FINE</code> logging or other times when there are a lot of log messages. </li>
        </ul>
        <h2>Setting the <code>filter-log-messages</code> parameter</h2>
        <p>You can set the <code>filter-log-messages</code> parameter in one of the following ways:</p>
        <h3><code>filter-log-messages</code> as a Java system property</h3>
        <p>You can set the <code>filter-log-messages</code> parameter as a Java system property from your command line:</p><pre><code class="language-text">java -Dliquibase.filterLogMessages=&lt;true|false&gt;</code></pre>
        <p>You can also set it with the <MadCap:xref href="../java-opts-environment-variable.htm">JAVA_OPTS Environment Variable</MadCap:xref>.</p>
        <p>The syntax for Mac/Linux:</p><pre><code class="language-text">JAVA_OPTS=-Dliquibase.filterLogMessages=&lt;true|false&gt;</code></pre>
        <p>The syntax for Windows, which requires the <code>set</code> command:</p><pre><code class="language-text">set JAVA_OPTS=-Dliquibase.filterLogMessages=&lt;true|false&gt;</code></pre>
        <h3><code>filter-log-messages</code> in the <code><MadCap:variable name="General.liquiPropFile"></MadCap:variable></code> file</h3>
        <p>You can set the <code>filter-log-messages</code> parameter by adding the following to your <code><MadCap:variable name="General.liquiPropFile"></MadCap:variable></code> file:</p><pre><code class="language-text">liquibase.filterLogMessages=&lt;true|false&gt;</code></pre>
        <h3><code>filter-log-messages</code> as a CLI global parameter</h3>
        <p>You can use <code>filter-log-messages</code> as a global parameter in your command line with a <MadCap:variable name="General.Liquibase" /> command, such as <code>update</code>:</p><pre><code class="language-text">liquibase --filter-log-messages=&lt;true|false&gt; update --changelog-file=dbchangelog.xml</code></pre>
        <h3><code>filter-log-messages</code> as an environment variable</h3>
        <p>If you use <MadCap:variable name="General.LBPro" />, you can set <code>filter-log-messages</code> as an environment variable.</p>
        <p>The syntax for Mac/Linux:</p><pre><code class="language-text">LIQUIBASE_FILTER_LOG_MESSAGES=&lt;true|false&gt;</code></pre>
        <p>The syntax for Windows, which requires the set command:</p><pre><code class="language-text">set LIQUIBASE_FILTER_LOG_MESSAGES=&lt;true|false&gt;</code></pre>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">The commands shown above only apply to the current shell. If you need to pass an environment variable to a child process without affecting the parent process, you can use the <code>export</code> command on Mac/Linux or the <code>setx</code> command on Windows.</p>
    </body>
</html>