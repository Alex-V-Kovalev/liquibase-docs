<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title>rollback &lt;tag&gt; command | Liquibase Docs</title>
        <link href="../../Z_Resources/Stylesheets/TableStyles.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <meta name="description" content="Reference information and use cases for the rollback &lt;tag&gt; command. The rollback &lt;tag&gt; command will roll back changes made to the database based on the specified tag." />
    </head>
    <body>
        <h1>rollback &lt;tag&gt; command</h1>
        <p>The <code>rollback &lt;tag&gt;</code> command will roll back changes made to the database based on the specified tag.</p>
        <h2>Description</h2>
        <p><MadCap:variable name="General.Liquibase" /> allows for reverting changes to the database through rollback commands. The<code> rollback &lt;tag&gt;</code> command will revert all changes that were made to the database after the specified tag.</p>
        <ul>
            <li>If the tag name is unknown, it can be found in the <MadCap:variable name="General.databasechangelog" /> table.</li>
            <li>When you run a rollback &lt;tag&gt;, <MadCap:variable name="General.Liquibase" /> will roll back sequentially all the deployed changes until it reaches the tag row in the <MadCap:variable name="General.databasechangelog" /> table.</li>
            <li><MadCap:variable name="General.changetypes" />s such as <MadCap:xref href="../../change-types/community/drop-table.html">dropTable</MadCap:xref> and <MadCap:xref href="../../change-types/community/insert.html">insert</MadCap:xref> have no corresponding rollback commands that can be automatically generated.</li>
        </ul>
        <h2>Uses</h2>
        <p>The <code>rollback &lt;tag&gt;</code> command is typically used when you want to undo a series of changes made to your database related to a specific tag such as a numbered release.</p>
        <p>If you have tags for release 1, release 2, and release 3, and need to make a correction in release 2, you have to rollback to release 3 first.</p>
        <ul>
            <li>Use an empty tag when you do not want to undo changes in rollback mode.</li>
            <li>When you want to override the default generated rollback commands, specify the rollback commands using the tag within the <MadCap:variable name="General.changeset" style="font-style: italic;" /> tag</li>
        </ul>
        <h2><code>rollback &lt;tag&gt;</code> global attributes</h2>
        <table style="mc-table-style: url('../../Z_Resources/Stylesheets/TableStyles.css');margin-left: auto;margin-right: auto;" class="TableStyle-TableStyles" cellspacing="0">
            <col class="TableStyle-TableStyles-Column-Column1" style="width: 300px;" />
            <col class="TableStyle-TableStyles-Column-Column1" style="width: 300px;" />
            <col class="TableStyle-TableStyles-Column-Column1" style="width: 300px;" />
            <thead>
                <tr class="TableStyle-TableStyles-Head-Header1">
                    <th class="TableStyle-TableStyles-HeadE-Column1-Header1">Attribute</th>
                    <th class="TableStyle-TableStyles-HeadE-Column1-Header1">Definition</th>
                    <th class="TableStyle-TableStyles-HeadD-Column1-Header1">Requirement</th>
                </tr>
            </thead>
            <tbody>
                <tr class="TableStyle-TableStyles-Body-Body1">
                    <td class="TableStyle-TableStyles-BodyE-Column1-Body1"><code>--changeLogFile</code>*</td>
                    <td class="TableStyle-TableStyles-BodyE-Column1-Body1">The root <i>changelog</i></td>
                    <td class="TableStyle-TableStyles-BodyD-Column1-Body1">Required</td>
                </tr>
                <tr class="TableStyle-TableStyles-Body-Body2">
                    <td class="TableStyle-TableStyles-BodyE-Column1-Body2"><code>--url</code>
                    </td>
                    <td class="TableStyle-TableStyles-BodyE-Column1-Body2">The JDBC database connection URL</td>
                    <td class="TableStyle-TableStyles-BodyD-Column1-Body2">Required</td>
                </tr>
                <tr class="TableStyle-TableStyles-Body-Body1">
                    <td class="TableStyle-TableStyles-BodyE-Column1-Body1"><code>--username</code>
                    </td>
                    <td class="TableStyle-TableStyles-BodyE-Column1-Body1">The database username</td>
                    <td class="TableStyle-TableStyles-BodyD-Column1-Body1">Required</td>
                </tr>
                <tr class="TableStyle-TableStyles-Body-Body2">
                    <td class="TableStyle-TableStyles-BodyB-Column1-Body2"><code>--password</code>
                    </td>
                    <td class="TableStyle-TableStyles-BodyB-Column1-Body2">The database password</td>
                    <td class="TableStyle-TableStyles-BodyA-Column1-Body2">Required</td>
                </tr>
            </tbody>
        </table>
        <h2>Impact of running the <code>rollback &lt;tag&gt;</code> command</h2>
        <p>Using the <code>rollback &lt;tag&gt;</code> command comes with risks to your database, so it's important to look for potential unintended consequences before executing this command.</p>
        <p>It is a best practice to run the <MadCap:xref href="rollbackSQLtag.htm">rollbackSQL &lt;tag&gt; command</MadCap:xref> that allows you to inspect for potential mistakes before running the command.</p>
        <h2>Running the <code>rollback &lt;tag&gt;</code> command</h2>
        <p>Before using the rollback commands, verify your <code>liquibase.properties</code> file includes the driver class path, database URL, and user authentication information.</p>
        <p>If you have not set any tags, run <code>liquibase tag mytagname</code> to specify a tag name for your releases.</p>
        <h3>Using CLI</h3><pre><code class="language-html">liquibase [global params] rollback [your tag name]</code></pre>
        <p><pre><code class="language-html">liquibase --changeLogFile=postgres_lbpro_master_changelog.xml tag v3.2.1</code></pre>
        </p>
        <h3>Using Maven</h3>
        <p>To use the Maven rollback command, you need to specify two properties in your <code>pom.xml</code> file, run:</p><pre><code class="language-html">&lt;liquibase.tag&gt;v3.2.1&lt;/liquibase.tag&gt;</code></pre>
        <p>and</p><pre><code class="language-html">&lt;liquibase.rollbackTag&gt;${liquibase.tag}&lt;/liquibase.rollbackTag&gt;</code></pre>
        <p>Then run the rollback <code>mvn compile liquibase:rollback</code></p>
        <h3>Using Ant</h3>
        <p>Create a build script with your defined tasks and call the <MadCap:variable name="General.Liquibase" /> tag function.</p><pre><code class="language-html">&lt;target name="tag" depends="prepare"&gt;
	&lt;tagDatabase
		changeLogFile="${changelogLogFile}"
		url="${url}"
		username="${username}"
		password="${password}"
		promptOnNonLocalDatabase="false"
		classpathref="classpath"
		tag="ant-tag"&gt;
	&lt;/tagDatabase&gt;
&lt;/target&gt;</code></pre>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>Output</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p>Using this command:</p><pre><code class="language-text">liquibase --changeLogFile=postgres_lbpro_master_changelog.xml tag myTag</code></pre>
                <p>When successful, the command produces the following output:</p><pre><code class="language-text">Liquibase Pro 3.8.10-DAT-4254-SNAPSHOT by Datical licensed to Liquibase Pro Customer until Tue Nov 03 19:00:00 CST 2020
Rolling Back Changeset:postgres_lbpro_master_changelog.xml::4::functionForTrigger::Liquibase Pro User
Rolling Back Changeset:postgres_lbpro_master_changelog.xml::3::createTableforCC-proschema::Liquibase Pro User
Rolling Back Changeset:postgres_lbpro_master_changelog.xml::2::createTableforView-proschema::Liquibase Pro User
Rolling Back Changeset:postgres_lbpro_master_changelog.xml::1::createTableforSynonym-proschema::Liquibase Pro User
Rolling Back Changeset:changelogLevel.xml::2::logicalFilePath::changelog::Liquibase Pro User
Rolling Back Changeset:third_changelog.xml::1::logicalFilePath::changeset:: Liquibase Pro User
Liquibase command 'tag' was executed successfully.</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>Additional Outputs</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p>Many change tags do not require a <code>rollback &lt;tag&gt;</code> because they can be generated from the update command.</p><pre><code class="language-xml">&lt;changeSet id="changeRollback2-create" author="nvoxland"&gt;
&lt;createTable tableName="changeRollback2"&gt;
&lt;column name="id" type="int"/&gt;
&lt;/createTable&gt;
&lt;/changeSet&gt;
Standard change tags can be used in a rollback &lt;tag&gt;
&lt;changeSet id="changeRollback" author="nvoxland"&gt;
&lt;createTable tableName="changeRollback1"&gt;
&lt;column name="id" type="int"/&gt;
&lt;/createTable&gt;
&lt;rollback&gt;
&lt;dropTable tableName="changeRollback1"/&gt;
&lt;/rollback&gt;
&lt;/changeSet&gt;</code></pre>
                <p>Multiple <code>rollback &lt;tag&gt;</code> can be specified in one <MadCap:variable name="General.changeset" />.</p><pre><code class="language-xml">&lt;changeSet id="multiRollbackTest" author="rs"&gt;
&lt;createTable tableName="multiRollback1"&gt;
&lt;column name="id" type="int"/&gt;
&lt;/createTable&gt;
&lt;createTable tableName="multiRollback2"&gt;
&lt;column name="id" type="int"/&gt;
&lt;/createTable&gt;
&lt;createTable tableName="multiRollback3"&gt;
&lt;column name="id" type="int"/&gt;
&lt;/createTable&gt;
&lt;rollback&gt;
drop table multiRollback1;
drop table multiRollback2;
&lt;/rollback&gt;
&lt;rollback&gt;drop table multiRollback3&lt;/rollback&gt;
&lt;/changeSet&gt;</code></pre>
                <p>A <code>rollback &lt;tag&gt;</code> can reference the <MadCap:variable name="General.changeset" /> that originally created a statement.</p><pre><code class="language-xml">&lt;changeSet id="changeRollback2-drop" author="nvoxland"&gt;
&lt;dropTable tableName="changeRollback2"/&gt;
&lt;rollback changeSetId="changeRollback2-create" changeSetAuthor="nvoxland"/&gt;
&lt;/changeSet&gt;</code></pre>
                <p>A <code>rollback &lt;tag&gt;</code> can be empty if a rollback is not possible or required.</p><pre><code class="language-xml">&lt;changeSet id="noRollback" author="nvoxland"&gt;
&lt;sql&gt;insert into multiRollback3 (id) values (1)&lt;/sql&gt;
&lt;rollback/&gt;
&lt;/changeSet&gt;</code></pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
    </body>
</html>