<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <link href="../Z_Resources/Stylesheets/TableStyles.css" rel="stylesheet" MadCap:stylesheetType="table" /><title>Working with Command Parameters | Liquibase Docs</title>
        <meta rel="canonical" href="https://docs.liquibase.com/tools-integrations/cli/home.html" />
        <meta name="description" content="This page explains how to run liquibase from the command line. You can also get specific information about the liquibase.properties files." />
    </head>
    <body>
        <h1 class="Print">Working with Command Parameters</h1>
        <p>The command line migrator works well when you want to do migrations on demand, but don't have <MadCap:xref href="../tools-integrations/ant/home.html">Ant</MadCap:xref> or <MadCap:xref href="../tools-integrations/maven/home.html">Maven</MadCap:xref> available such as on servers. 
The command line migrator also gives you more control over the process than the <MadCap:xref href="../tools-integrations/community-supported/servlet-listener.html">Servlet Listener</MadCap:xref>, Ant, or Maven do, allowing you to run maintenance commands like outputting SQL and listing or releasing database <MadCap:variable name="General.changelog" style="font-style: italic;" /> locks.</p>
        <p>You can run all <MadCap:variable name="General.Liquibase" /> commands using the CLI. Although there are significant backend changes in how you can configure <MadCap:variable name="General.Liquibase" /> or how you can type commands in <MadCap:variable name="General.Liquibase" /> 4.4, the <MadCap:variable name="General.Liquibase" /> CLI functionality aims to be backward compatible with all previous versions. However, it is a best practice to follow the syntax rules mentioned in this instruction and in the <code>--help</code> output.</p>
        <h2>Argument Locations</h2>
        <p>There are two types of flags or arguments you can specify—global arguments and command arguments:</p>
        <ul>
            <li>The global arguments are not a part of the command and are not specific to a command. They represent a way to change the overall default behavior. Examples of global arguments include <code>logLevel</code>, <code>catalogName</code>, and others.</li>
            <li>The command arguments are the settings for a particular command. Some command arguments are required, some of them are optional. Examples of command settings include <code>changelogFile</code>, <code>password</code>, <code>username</code>, <code>referenceUrl</code>, and others.</li>
        </ul>
        <p>Use global arguments before the command name and command arguments after the command name.</p><pre><code class="language-text">liquibase [global options] [command] [command parameters]</code></pre>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot style="font-size: 12pt;">Global Arguments</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <ul>
                    <li>always-override-stored-logic-schema</li>
                    <li>auto-reorg</li>
                    <li>catalog-name</li>
                    <li>change-exec-listener-class</li>
                    <li>change-exec-listener-properties-file</li>
                    <li>changelog-lock-poll-rate</li>
                    <li>changelog-lock-wait-time-in-minutes</li>
                    <li>classpath</li>
                    <li>convert-data-types</li>
                    <li>database-changelog-lock-table-name</li>
                    <li>database-changelog-table-name</li>
                    <li>database-class</li>
                    <li>default-catalog-name</li>
                    <li>default-schema-name</li>
                    <li>	defaults-file</li>
                    <li>	diff-column-order</li>
                    <li>driver</li>
                    <li>driver-properties-file</li>
                    <li>	filter-log-messages</li>
                    <li>generate-changesets-created-values</li>
                    <li>generated-changeset-ids-contains-description</li>
                    <li>	headless</li>
                    <li>hub-api-key</li>
                    <li>hub-log-level</li>
                    <li>hub-mode</li>
                    <li>	hub-url</li>
                    <li>include-catalog-in-specification</li>
                    <li>include-system-classpath</li>
                    <li>	pro-licensekey</li>
                    <li>prompt-for-non-local-database</li>
                    <li>schema-name</li>
                    <li>should-snapshot-data</li>
                    <li>	should-run</li>
                    <li>tablespace-name</li>
                </ul>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p><MadCap:variable name="General.Liquibase" /> parses any other arguments as command arguments. However, it does not support the positional argument style. Positional arguments are unnamed arguments that come after the command. For example: <code>git pull origin</code>. Using <MadCap:variable name="General.Liquibase" /> style, you would specify it as follows: <code>git pull --remote=origin</code>.</p>
        <h2>Global and Command Arguments Syntax</h2>
        <p>Global and command arguments have namespaces associated with them to avoid conflicts between extensions. To prevent extensions from conflicting with <MadCap:variable name="General.Liquibase" /> settings, <MadCap:variable name="General.Liquibase" /> uses the <code>liquibase</code> namespace in the defaults files: <code>liquibase.logLevel</code>. When specifying arguments in the CLI, you can drop the <code>--liquibase-</code> part. For example: <code>--logLevel</code>.</p>
        <h3>Argument Keys and Values</h3>
        <p>To assign values to arguments, use the equal sign (=) between them. </p>
        <p class="example" MadCap:autonum="&lt;b&gt;Example: &lt;/b&gt;"><code> --url=jdbc:h2:/mem</code>
        </p>
        <p>Alternatively, you can use a space to assign a value to an argument.</p>
        <p class="example" MadCap:autonum="&lt;b&gt;Example: &lt;/b&gt;"><code> --url jdbc:h2:/mem</code>
        </p>
        <h3>Multi-Word Arguments</h3>
        <p>Some arguments consists of multiple words, such as the reference URL and reference username. Follow the syntax rules below when using word arguments, even if you see examples of them as a camelCased word:</p>
        <ul>
            <li>Separate words using a dash (-)</li>
            <li>Use lowercase letters: <code>--reference-url</code></li>
            <li>Do not use two dashes or space in the middle of the global or command argument.</li>
        </ul>
        <h2>Configuration Hierarchy for CLI Arguments</h2>
        <p><MadCap:variable name="General.Liquibase" /> supports setting properties in multiple locations, with the final value determined in the chart in which the top locations take precedence over lower locations:</p>
        <p>
            <img src="../Z_Resources/Images/Screenshots/concepts/environment-variables.png" style="width: 382px;height: 323px;" />
        </p>
        <table style="width: 100%;margin-left: auto;margin-right: auto;mc-table-style: url('../Z_Resources/Stylesheets/TableStyles.css');" class="TableStyle-TableStyles" cellspacing="0">
            <col class="TableStyle-TableStyles-Column-Column1" />
            <col class="TableStyle-TableStyles-Column-Column1" />
            <tbody>
                <tr class="TableStyle-TableStyles-Body-Body1">
                    <td class="TableStyle-TableStyles-BodyE-Column1-Body1">Command line arguments</td>
                    <td class="TableStyle-TableStyles-BodyD-Column1-Body1">Override ServletConfig and ServletContext init parameters, Java system properties, OS environment variables, and configuration data</td>
                </tr>
                <tr class="TableStyle-TableStyles-Body-Body2">
                    <td class="TableStyle-TableStyles-BodyE-Column1-Body2">ServletConfig init parameters</td>
                    <td class="TableStyle-TableStyles-BodyD-Column1-Body2">Override ServletContext init parameters, Java system properties, OS environment variables, and configuration data</td>
                </tr>
                <tr class="TableStyle-TableStyles-Body-Body1">
                    <td class="TableStyle-TableStyles-BodyE-Column1-Body1">ServletContext init parameters</td>
                    <td class="TableStyle-TableStyles-BodyD-Column1-Body1">
Override Java system properties, OS environment variables, and configuration data
                    </td>
                </tr>
                <tr class="TableStyle-TableStyles-Body-Body2">
                    <td class="TableStyle-TableStyles-BodyE-Column1-Body2">Java system properties</td>
                    <td class="TableStyle-TableStyles-BodyD-Column1-Body2">Override OS environment variables and configuration data</td>
                </tr>
                <tr class="TableStyle-TableStyles-Body-Body1">
                    <td class="TableStyle-TableStyles-BodyE-Column1-Body1">OS environment variables</td>
                    <td class="TableStyle-TableStyles-BodyD-Column1-Body1">Override configuration data</td>
                </tr>
                <tr class="TableStyle-TableStyles-Body-Body2">
                    <td class="TableStyle-TableStyles-BodyB-Column1-Body2">Configuration data, such as <code><MadCap:variable name="General.liquiPropFile"></MadCap:variable></code> file, piped standard input, or defaults files</td>
                    <td class="TableStyle-TableStyles-BodyA-Column1-Body2">Does not override any values</td>
                </tr>
            </tbody>
        </table>
        <h2 id="using-a-liquibaseproperties-file">Using a <code class="highlighter-rouge">liquibase.properties</code> file</h2>
        <p>If you do not want to always specify options on the command line, you can create a properties file that contains default values. By default, <MadCap:variable name="General.Liquibase" /> will look for a file called <code class="highlighter-rouge"><MadCap:variable name="General.liquiPropFile" /></code> in the current working directory, but you can specify an alternate location with the <code class="highlighter-rouge">--defaultsFile</code> flag. For more information, see <MadCap:xref href="../workflows/liquibase-community/creating-config-properties.html">Creating and configuring a [%=General.liquiPropFile%] file</MadCap:xref>.</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>Examples</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <h4>Standard update run</h4><pre xml:space="preserve"><code class="language-text">liquibase \
--classpath=path/to/changelog/files \
update \
--changelog-file=com/example/db.changelog.xml \
--url="jdbc:oracle:thin:@localhost:1521:oracle" \
--username=scott \
--password=tiger</code></pre>
                <h4>Run update pulling <MadCap:variable name="General.changelog" style="font-style: italic;" /><i>s</i> from a .WAR file</h4><pre xml:space="preserve"><code class="language-text">liquibase \
--classpath=website.war \
update \
--changelog-file=com/example/db.changelog.xml \
--url=jdbc:oracle:thin:@localhost:1521:oracle \
--username=scott \
--password=tiger</code></pre>
                <h4>Run update pulling <MadCap:variable name="General.changelog" style="font-style: italic;" /><i>s</i> from an .EAR file</h4><pre xml:space="preserve"><code class="language-text">liquibase \
--classpath=application.ear \
update \
--changeLogFile=com/example/db.changelog.xml \
--url=jdbc:oracle:thin:@localhost:1521:oracle \
--username=scott \
--password=tiger</code></pre>
                <h4>Don't execute <MadCap:variable name="General.changeset" style="font-style: italic;" /><i>s</i>, save SQL to <code>/tmp/script.sql</code></h4><pre xml:space="preserve"><code class="language-text">liquibase \
--classpath=path/to/changelog/files \
updateSQL &gt; /tmp/script.sql \
--url=jdbc:oracle:thin:@localhost:1521:oracle \
--username=scott \
--password=tiger</code></pre>
                <h4>List lock records in the <code class="highlighter-rouge"><MadCap:variable name="General.databasechangeloglock" /></code> table</h4><pre><code class="language-text">liquibase \
listLocks \
--url=jdbc:oracle:thin:@localhost:1521:oracle \
--username=scott \
--password=tiger</code></pre>
                <h4>Run <MadCap:variable name="General.Liquibase" /> using defaults from <code class="highlighter-rouge">./liquibase.properties</code></h4><pre><code class="language-text">liquibase update</code></pre>
                <h4 id="liquibaseproperties"><MadCap:variable name="General.liquiPropFile" /> </h4><pre><code class="language-text">classpath: path/to/changelog/files
url: jdbc:oracle:thin:@localhost:1521:oracle
username: scott
password: tiger</code></pre>
                <h4>Export data from a database</h4>
                <p>The following example will export the data from the targeted database and put it in a folder <code>data</code> in a file name specified with <code>&lt;insert file name&gt;</code>.</p><pre xml:space="preserve"><code class="language-text">liquibase --diffTypes="data" generateChangeLog --changeLogFile="./data/&lt;insert file name&gt; "</code></pre>
                <h4>Update passing <MadCap:variable name="General.changelog" style="font-style: italic;" /> parameters</h4><pre><code class="language-text">liquibase.bat update -Dengine=myisam</code></pre>
                <h4>MySQL Unicode</h4>
                <p>Add URL parameters <code>useUnicode=true</code> and <code>characterEncoding=UTF-8</code> to set character encoding to utf8.</p>
                <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;"><em style="font-style: normal;">Since v5.1.3 Connector/J now auto-detects servers configured with <code>character_set_server=utf8mb4</code> or treats the Java encoding <code>utf-8</code> passed using <code>characterEncoding=…</code> as <code>utf8mb4</code>.</em>
                </p><pre xml:space="preserve"><code class="language-text">--url="jdbc:mysql://localhost/dbname?useUnicode=true&amp;characterEncoding=UTF-8"</code></pre>
                <p>See the <a href="https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference-charsets.html"><a href="https://dev.mysql.com/doc/connector-j/en/connector-j-reference-charsets.html">MySQL Connector J Using Character Sets and Unicode</a></a> topic for more information.</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <h3>Related Links</h3>
        <ul>
            <li>
                <MadCap:xref href="../concepts/basic/liquibase-environment-variables.htm">[%=General.Liquibase%] Environment Variables</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="command-parameters.htm">[%=General.Liquibase%] Configuration Reference for Parameters and Environment Variables</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="home.htm">Liquibase Commands</MadCap:xref>
            </li>
        </ul>
    </body>
</html>