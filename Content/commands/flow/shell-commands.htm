<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <meta rel="canonical" href="https://docs.liquibase.com/commands/flow/shell-commands.html" />
        <meta name="description" content="Reference information and use cases for shell commands in the Flow File." />
    </head>
    <body>
        <h1>Shell Commands <MadCap:snippetText src="../../Resources/Snippets/images/.ver_icon_size_pro.flsnp" /></h1>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">This feature is available in version 4.17 and later.</p>
        <p>Using Shell Commands in a Flow file allows you to use multiple commands in sequence and redirect environment variable commands via grep.</p>
        <p>Read more: <MadCap:xref href="flow.htm">flow</MadCap:xref></p>
        <h2>Shell Command implementation example</h2>
        <p>First you want to ensure that the environment variables are set correctly in the Flow file.</p>
        <p>In the example below, note that the title <code>'Printing LIQUIBASE_* env vars'</code> is echoed and <code>&amp;&amp;&#160;env | grep 'LIQUIBASE_""</code> is chained.</p>
        <p>You will also notice that the <code>env</code> output is directed into the <code>grep 'Liquibase_'</code> command:</p><pre><code class="language-text">env | grep 'LIQUIBASE_'</code></pre>
        <p>This will allow you to only print the environment variables that match <code>'LIQUIBASE_'</code></p>
        <p>Chained Command Example in Flow file:</p>
        <MadCap:codeSnippet>
            <MadCap:codeSnippetCopyButton />
            <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve" style="mc-code-lang: JavaScript;">stages:
	chainedCommandExample:
		actions:
				-type: shell
					#command: bash -c "echo "Printing Liquibase_* env vars' &amp;&amp; env | grep "LIQUIBASE_'"
					command: echo 'Printing LIQUIBASE_* env vars' &amp;&amp; env |grep 'LIQUIBASE_'
</MadCap:codeSnippetBody>
        </MadCap:codeSnippet>
        <p>Type the following in the CLI to enable both a shell command and the environment variables:</p><pre><code class="language-text">echo 'Printing LIQUIBASE_* env vars' &amp;&amp; env | grep 'LIQUIBASE_'</code></pre>
        <p>The results show the <code>env</code> command directed into grep prints only <code>LIQUIBASE_</code> items.</p>
        <h2>Command Format</h2>
        <p>The correct command format within a Flow file is essential to run <code>liquibase flow</code> successfully.</p>
        <p>chain commands include <code>bash -c</code> in front of the double quoted command <code>"echo 'Printing LIQUIBASE_* env vars' &amp;&amp; env | grep 'LIQUIBASE_'"</code> which tells the machine to run a completely new shell. If you need to quote something inside of the command, use single quotes to distinguish the inside from the outside of the shell command in double quotes.</p>
        <p>Chain command example:</p><pre><code class="language-text">bash -c "echo "Printing Liquibase_* env vars' &amp;amp;&amp;amp; env | grep "LIQUIBASE_'"</code></pre>
        <p>Once that is added to the Flow file, run the liquibase flow command.</p><pre><code class="language-text">liquibase flow --flow-file=flows/(your flow file title here).yaml</code></pre>
        <p>The shell bash commits successfully and all environment variables display as intended.</p>
        <h2>Related links</h2>
        <ul>
            <li>
                <MadCap:xref href="advanced-flow-file.htm">Advanced Flow File</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="if-conditionals.htm">if conditionals</MadCap:xref>
            </li>
            <li>
                <MadCap:xref href="variables.htm">variables and include feature</MadCap:xref>
            </li>
        </ul>
    </body>
</html>