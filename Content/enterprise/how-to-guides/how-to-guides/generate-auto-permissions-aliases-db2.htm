<?xml version="1.0" encoding="utf-8"?>
<html>
    <head><title>Liquibase Enterprise Documentation</title><meta name="description" content="Liquibase Enterprise Documentation" /></head>
    <body>
        <h1>How To: Generate Auto Permissions and Aliases for DB2</h1> <MadCap:snippetText src="../../../Resources/Snippets/images/.ver_icon_size_enterprise.flsnp" /><h1 id="HowTo:GenerateAutoPermissionsandAliasesforDB2-Overview">Overview</h1> <MadCap:snippetText src="../../../Resources/Snippets/images/.ver_icon_size_enterprise.flsnp" /><p>There are situations where grants or aliases may need to be created for all objects that meet a particular criteria such as belonging to a specific schema. This can be accomplished by creating a changeset that is executed at the end of every deployment to apply the appropriate grants and aliases.</p><p>Executing pl/sql scripts for db2 can present a challenge because the default SQL terminator “;” must be changed to another character so that it does not conflict with the “;” used within the pl/sql code blocks.  </p><p>There are two approaches to handling the SQL terminator:</p><ol><li><p> Utilize the “Execute a SQL script file using JDBC”/“Custom SQL (External File)” change set type and set a different value for “End Delimiter”.</p></li><li><p>Create a stored procedure, then call the stored procedure from a simple script which does not require internal “;” characters.</p></li></ol><p /><h2 id="HowTo:GenerateAutoPermissionsandAliasesforDB2-Approach1">Approach 1</h2><h3 id="HowTo:GenerateAutoPermissionsandAliasesforDB2-Step1–CreateaScripttoPerformGrant/AliasOperations">Step 1 – Create a Script to Perform Grant/Alias Operations</h3><p>Create a script that will generate the desired grant or alias statements. The script can utilize change log properties (<a href="set-prop-project-changelog.htm">Setting Properties in the Project Changelog</a> ) to customize values for different steps in the pipeline. The following is an example of a script to grant SELECT access to all tables in a specified schema. The criteria for CREATOR and GRANTEE will be specified by properties from the project changelog. Do not include a terminator at the end of the file. The default terminator, ';' within the code block will cause errors, so a different terminator will be specified as part of the changeset definition. Save the script to a location outside the SQL SCM for the <MadCap:variable name="General.DaticalDB" /> Project since we will manually add the changeset to the changelog.</p><p /><div class="code panel pdl conf-macro output-block" style="border-width: 1px;"><div class="codeContent panelContent pdl"><pre class="syntaxhighlighter-pre" xml:space="preserve">BEGIN
  DECLARE v_stmt        VARCHAR(200);
  FOR v1 as
      c1 CURSOR FOR SELECT rtrim(ltrim(CREATOR)) CREATOR,NAME from SYSIBM.systables where CREATOR in ('${p_creator}')
      DO
        set v_stmt = 'grant select on '||CREATOR||'.'||NAME || ' to ' || '${p_grantee}';
        execute immediate v_stmt;
      END FOR;
END</pre></div></div><p /><h3 id="HowTo:GenerateAutoPermissionsandAliasesforDB2-Step2–CreateChangelogPropertiesforReplacementVariables">Step 2 – Create Changelog Properties for Replacement Variables</h3><p>If the script requires different values based upon context or labels, create the required properties. Go the Project Settings in the <MadCap:variable name="General.DaticalDB" /> GUI and select Manage Properties.</p><span class="confluence-embedded-file-wrapper image-center-wrapper"><img class="confluence-embedded-image image-center" loading="lazy" src="https://datical-cs.atlassian.net/wiki/download/attachments/904626332/Manage_properties.png?version=1&amp;modificationDate=1573596001385&amp;cacheVersion=1&amp;api=v2" /></span><p>Add the properties to be used by the script along with the Context or Label where the property value should be applied. Within the script specify the Property Key using the syntax ${property_key}.  </p><span class="confluence-embedded-file-wrapper image-center-wrapper"><img class="confluence-embedded-image image-center" loading="lazy" src="https://datical-cs.atlassian.net/wiki/download/attachments/904626332/add_properties.png?version=1&amp;modificationDate=1573596001199&amp;cacheVersion=1&amp;api=v2" /></span><p /><h3 id="HowTo:GenerateAutoPermissionsandAliasesforDB2-Step3–AddtheChangeSettotheChangeLog">Step 3 – Add the ChangeSet to the ChangeLog</h3><p>From the <MadCap:variable name="General.DaticalDB" /> GUI, Select “Add a Change Set”.  </p><span class="confluence-embedded-file-wrapper image-center-wrapper"><img class="confluence-embedded-image image-center" loading="lazy" src="https://datical-cs.atlassian.net/wiki/download/attachments/904626332/add_change.png?version=1&amp;modificationDate=1573596000852&amp;cacheVersion=1&amp;api=v2" /></span><p>Scroll down and select the “Execute a SQL script file using JDBC”/“Custom SQL (External File)” change type. Note that “Execute a SQL script file using JDBC” is the newer name, and “Custom SQL (External File)” is the older name for the same change type.</p><span class="confluence-embedded-file-wrapper image-center-wrapper"><img class="confluence-embedded-image image-center" loading="lazy" src="https://datical-cs.atlassian.net/wiki/download/attachments/904626332/custom_sql_external.png?version=1&amp;modificationDate=1573596000679&amp;cacheVersion=1&amp;api=v2" /></span><p /><p>Browse to select the file. Change the delimiter to “@”. Deselect Split Statements.  </p><span class="confluence-embedded-file-wrapper image-center-wrapper"><img class="confluence-embedded-image image-center" loading="lazy" src="https://datical-cs.atlassian.net/wiki/download/attachments/904626332/custom_sql_settings.png?version=1&amp;modificationDate=1573596000502&amp;cacheVersion=1&amp;api=v2" /></span><p>On the next screen select Finalize.</p><p>On the Create Change Set screen:</p><p>Enter the ChangeSet ID (any text string) and the Author.  </p><p>Set the Execution Settings to:</p><p style="margin-left: 30.0px;">“Redeploy this Change Set every time the contents are modified” – Allows modification of the SQL file saved to the resources directory. Without this there will be “checksum” errors if the file is modified.</p><p style="margin-left: 30.0px;"> “Deploy this Change Set every time a deployment is performed” – Changeset will be run for every Deployment.</p><p>Set Deploy Order to “After Other Change Sets”.  </p><span class="confluence-embedded-file-wrapper image-center-wrapper"><img class="confluence-embedded-image image-center" loading="lazy" src="https://datical-cs.atlassian.net/wiki/download/attachments/904626332/auto_grants_changeset.png?version=1&amp;modificationDate=1574173653683&amp;cacheVersion=1&amp;api=v2" /></span><p /><p>Save changes by selecting: File &gt;&gt; Save.</p><p>Add, Commit, and Push the changes to the SCM.</p><h3 id="HowTo:GenerateAutoPermissionsandAliasesforDB2-Step5–TesttheNewChangeSet">Step 5 – Test the New Change Set</h3><p>Package and deploy a simple “CREATE TABLE” script. Verify that the grants are applied to the new table.</p><p /><h2 id="HowTo:GenerateAutoPermissionsandAliasesforDB2-Approach2">Approach 2</h2><h3 id="HowTo:GenerateAutoPermissionsandAliasesforDB2-Step1–Deployastoredprocedurefollowingthenormalprocess.">Step 1 – Deploy a stored procedure following the normal process.</h3><p>Sample Stored Procedure</p><p /><div class="code panel pdl conf-macro output-block" style="border-width: 1px;"><div class="codeContent panelContent pdl"><pre class="syntaxhighlighter-pre" xml:space="preserve">create or replace procedure myschema.table_grants
(p_creator varchar2(30),
 p_grantee varchar2(30) )
BEGIN
  DECLARE v_stmt        VARCHAR(200);
  FOR v1 as
      c1 CURSOR FOR SELECT rtrim(ltrim(CREATOR)) CREATOR,NAME from SYSIBM.systables where CREATOR in (p_creator)
      DO
        set v_stmt = 'grant select on '||CREATOR||'.'||NAME || ' to ' || p_grantee;
        execute immediate v_stmt;
     END FOR;
END</pre></div></div><p /><h3 id="HowTo:GenerateAutoPermissionsandAliasesforDB2-Step2–CreateaChangeSettoCalltheStoredProcedure">Step 2 – Create a Change Set to Call the Stored Procedure</h3><p>Sample SQL Script – notice that the command is NOT terminated by “;”.</p><p /><div class="code panel pdl conf-macro output-block" style="border-width: 1px;"><div class="codeContent panelContent pdl"><pre class="syntaxhighlighter-pre" xml:space="preserve">call table_grants('${p_creator}','${p_grantee}')</pre></div></div><p /><p>Follow the steps above to create changelog properties for replacement values, and use the Change Set Wizard to create a change set that runs after each deployment.</p></body>
</html>