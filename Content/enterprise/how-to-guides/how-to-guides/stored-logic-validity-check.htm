<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title>Liquibase Enterprise Documentation</title><meta name="description" content="Liquibase Enterprise Documentation" /></head>
    <body>
        <h1>Stored Logic Validity Check</h1> <MadCap:snippetText src="../../../Resources/Snippets/images/.ver_icon_size_enterprise.flsnp" /><p>The Stored Logic Validity Check compiles the stored logic objects associated with a database definition and reports INVALID objects and objects that change between VALID and INVALID states as the result of a deployment. A stored logic object can become invalid for many reasons.&#160;The most common reasons are missing dependencies and syntax errors.</p><div class="confluence-information-macro confluence-information-macro-information conf-macro output-block"><div class="confluence-information-macro-body"><p>The CLI property to use is <code>storedLogicValidityCheck=DISABLED | LIMITED | LOCAL | GLOBAL</code>. The <code>datical.project</code> file property to use is <code>storedLogicValidityCheck="disabled | limited | local | global"</code>.</p></div></div><p>You can see the Stored Logic Validity Check results in the Deploy reports:</p><ul><li><p>Forecast operations: the validity check is not performed.</p></li><li><p>Deploy operations: the validity check is performed after deployment. You can find it in the <strong>Stored logic Validity Check</strong> section of the Deploy report.</p></li><li><p>Packager operations: the validity check is performed as part of the deployment to the <code>REFDB</code>. Packager reports do not include stored logic validity check outcomes directly.&#160;The Deploy for the <code>REFDB</code> includes this information and is linked in the Packager Report.</p></li></ul><p>Liquibase Enterprise &amp; Business provide the following Stored Logic Validity Check settings for the Oracle, SQL Server, and DB2 databases:</p><ul><li><p>Disabled – does not perform the Stored Logic Validity Check.</p></li><li><p>Limited – checks only Stored Logic objects that are targeted by Changesets in the deployment (smallest scope/fastest).</p></li><li><p>Local – checks all Stored Logic objects in all schemas included in the project (medium scope). This is the default setting.</p></li><li><p>Global – checks all Stored Logic objects in all schemas in a database, even outside the project schemas (largest scope/slowest).</p></li></ul><h2 id="StoredLogicValidityCheck-UsingStoredLogicValidityCheck:LimitedMode">Using Stored Logic Validity Check: Limited Mode</h2><div class="panel conf-macro output-block" style="background-color: #EAE6FF;border-color: #998DD9;border-width: 1px;"><div class="panelContent" style="background-color: #EAE6FF;"><p>The Limited mode is recommended when environments are known and expected to have a large number of stored logic objects or persistently invalid stored logic objects. In&#160;the Limited&#160;mode, DaticalDB will only compile the stored logic objects that are determined to be targeted by changes included in the deployment, which may lead to significant performance improvements for deploy operations.</p><p>However, for Oracle environments, objects that are valid after a deployment may be reported as invalid on the Deploy Report in some cases. This can occur when DaticalDB is unable to determine that the changes in the deployment are associated with the invalid object.</p><p>For this reason, it is not recommended to use&#160;<code>storedLogicValidityAction=FAIL&#160;when&#160;storedLogicValidityCheck=LIMITED</code>&#160;for Oracle.</p></div></div><h3 id="StoredLogicValidityCheck-TheStoredLogicValidityCheckworkflowwiththeLimitedmode">The Stored Logic Validity Check workflow with the Limited mode</h3><ol><li><p>At the beginning of deployment, a list of all objects that are currently invalid in managed schemas is obtained.</p></li><li><p>The list is filtered based on changesets to be deployed. However, instead of compiling all invalid objects like in the Local mode, only invalid objects targeted by deployment are compiled to confirm they are invalid.</p></li><li><p>Deployment occurs.</p></li><li><p>Another compilation of objects targeted by changesets in the Deploy occurs.</p></li><li><p>The report is as follows:</p><ul><li><p>If an object’s state transitions from INVALID to VALID, it is green to indicate that any issues with it were corrected.</p></li><li><p>If an object goes from VALID to INVALID, DaticalDB reports the object as INVALID and includes any relevant error messages.</p></li></ul></li></ol><p>DaticalDB reports on any invalid items found in the Limited mode, including objects found in another schema managed by the project and objects that were not targeted by changesets in the deployment. However, these classes of INVALID objects do not affect the Success or Failure outcome of the deployment.</p></body>
</html>