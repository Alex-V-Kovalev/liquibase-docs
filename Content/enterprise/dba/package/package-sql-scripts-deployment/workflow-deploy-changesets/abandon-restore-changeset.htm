<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title>Liquibase Enterprise Documentation</title>
        <meta name="description" content="Liquibase Enterprise Documentation" />
    </head>
    <body>
        <h1>Abandoning and Restoring a Changeset: ignore and unignore</h1>
        <MadCap:snippetText src="../../../../../Resources/Snippets/images/.ver_icon_size_enterprise.flsnp" />
        <h2 id="AbandoningandRestoringaChangeset:ignoreandunignore-TypesofChangesEligibleforIgnoreandUnignoreScripts">Types of Changes Eligible for Ignore and Unignore Scripts</h2>
        <p>Ignore and Unignore scripts work for different types "non-rerunnable" changes:</p>
        <ul>
            <li>DDL folder or packageMethod=CONVERT</li>
            <li><span>DDL_DIRECT folder or packageMethod=DDL_DIRECT</span>
            </li>
            <li>DATA_DML folder or packageMethod=DATA_DML</li>
            <li>SQL_DIRECT folder or packageMethod=DIRECT</li>
            <li>SQL folder or packageMethod=SQLFILE</li>
            <li>Liquibase changelogs</li>
        </ul>
        <p>
            <br />Ignore and/or Unignore are <strong>NOT</strong> recommended for stored logic (code: package, packagebody, procedure, function, trigger, view folders). Use the provided versioning capability with stored logic instead.</p>
        <h2 id="AbandoningandRestoringaChangeset:ignoreandunignore-IgnoringChangesets">Ignoring Changesets</h2>
        <p>To prevent a changeset from being deployed, add a blank (zero-length) "ignore" file to the directory.</p>
        <p>For a file named <code>mychanges.sql</code>,&#160;name the "ignore" file using one of the following forms:</p>
        <p><code>mychanges-ignore.sql</code>
        </p>
        <p><code>mychanges_ignore<code>.sql</code></code></p>
        <h2 id="AbandoningandRestoringaChangeset:ignoreandunignore-RestoringChangesets">Restoring Changesets</h2>
        <p>To restore a previously abandoned changeset, add a blank (zero-length) "unignore" file to the directory.</p>
        <p>For a file named <code>mychanges.sql</code>, name the "unignore" file using one of the following forms:</p>
        <p><code>mychanges-unignore.sql</code>
        </p>
        <p><code>mychanges_unignore.sql</code>
        </p>
        <h2 id="AbandoningandRestoringaChangeset:ignoreandunignore-Processing">Processing</h2>
        <p>When Deployment Packager processes the files during packaging,</p>
        <p>Packaging stops with an error if the following condition is found:</p>
        <ul>
            <li>The "ignore" or "unignore" file is not zero length (blank).</li>
        </ul>
        <p>When the condition is passed, Deployment Packager does the following:</p>
        <ul>
            <li>Searches the changelog for matching changesets. Processing stops if there are no matching changesets in the changelog. Changesets must match these attributes.
				<ul><li>datical:origFilePath</li><li>datical:origFileName</li><li>Highest datical:version number</li></ul></li>
            <li>Sets the ignore attribute on all matching changesets.
				<ul><li>For "ignore," ignore=true.</li><li>For "unignore," the ignore= attribute is removed.</li></ul></li>
            <li>Archives the "ignore" or "unignore" file.</li>
            <li>For a file set to "unignore," if a matching file already exists in the archive directory, then replace it.</li>
        </ul>
    </body>
</html>