<?xml version="1.0" encoding="utf-8"?>
<html>
    <head><title></title>
    </head>
    <body>
        <h1>Datical Labels</h1>
        <p />
        <div class="toc-macro client-side-toc-macro  conf-macro output-block">
        </div>
        <h1 id="DaticalLabels-OverviewofLabels">Overview of Labels</h1>
        <p>A label is a string that is stored on a changeset. Labels are used to track and manage changes as they move through the release pipeline.&#160;</p>
        <h2 id="DaticalLabels-LabelCharacterRestrictions">Label Character Restrictions</h2>
        <p>Label names may include <strong>only</strong> the following characters:</p>
        <ul>
            <li>letters (upper and lower case)</li>
            <li>numbers</li>
            <li>dashes ( - )</li>
            <li>underscores ( _ )</li>
        </ul>
        <div class="confluence-information-macro confluence-information-macro-warning conf-macro output-block">
            <div class="confluence-information-macro-body">
                <p>Using any other character may cause failure during packaging and other operations. In particular, never use the equals character ( = ) in a label or SCM checkin comment. .&#160;</p>
            </div>
        </div>
        <h2 id="DaticalLabels-SpecifyingLabels">Specifying Labels</h2>
        <p>Labels are first added when SQL scripts are packaged. Some labels are added automatically during Datical operations.&#160;</p>
        <div class="table-wrap">
            <table class="wrapped confluenceTable">
                <colgroup>
                    <col />
                    <col />
                </colgroup>
                <tbody>
                    <tr>
                        <th class="confluenceTh">Where</th>
                        <th class="confluenceTh">How</th>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd">Project</td>
                        <td colspan="1" class="confluenceTd">
                            <p>Static assignment. These labels are assigned at all steps and for all operations. Use the Datical GUI or edit the <code>datical.project</code> file.&#160;</p>
                            <p>May be a label expression: <em>either</em> a comma-separated list <em>or</em> an expression that uses&#160;!, AND, OR, and parentheses.&#160;&#160;See Label Expressions below.&#160;</p>
                        </td>
                    </tr>
                    <tr>
                        <td class="confluenceTd">DbDef / Step definition</td>
                        <td class="confluenceTd">
                            <div class="content-wrapper">
                                <p>Static assignment. When a changeset is deployed to this step, must have the label or labels specified.&#160;Use the Datical GUI or edit the <code>datical.project</code> file.&#160;</p>
                                <p>May be a label expression: <em>either</em> a comma-separated list <em>or</em> an expression that uses&#160;!, AND, OR, and parentheses.&#160; See Label Expressions below.&#160;</p>
                                <div class="confluence-information-macro confluence-information-macro-information conf-macro output-block">
                                    <p class="title">Note</p>
                                    <div class="confluence-information-macro-body">
                                        <p>If you are using pipelines, the pipeline name must be the first label in the list.&#160;</p>
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="confluenceTd">Check in to SCM</td>
                        <td class="confluenceTd">
                            <div class="content-wrapper">
                                <p><em><strong>NOTE: This item is only relevant for <MadCap:variable name="General.DaticalDB" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" /> customers who use deploy packager.&#160; </strong></em>
                                </p>
                                <p>Use square brackets in the check-in comment to include labels. It is a common practice to include the issue-tracking ticket number at check-in. The labels are added during packaging. Any changesets produced by packaging get the labels specified.&#160; &#160;</p>
                                <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
                                    <div class="codeContent panelContent pdl"><pre class="syntaxhighlighter-pre" xml:space="preserve">git commit -m "[JIRA-1115][Add columns to Books table]"</pre>
                                    </div>
                                </div>
                            </div>
                            <p class="auto-cursor-target">As of the 7.9 Release of Liquibase Enterprise, the pattern that denotes labels in commit messages can be defined by the user.&#160; Please see the description of the&#160;<strong><span class="code">commitMsgLabelRegexp </span></strong><span class="code">property on&#160;<a href="../../how-to-guides/required-deploy-packager-properties.htm">Using the Required deployPackager.properties File</a></span></p>
                        </td>
                    </tr>
                    <tr>
                        <td class="confluenceTd">Packaging</td>
                        <td class="confluenceTd">
                            <p><em><strong>NOTE: This item is only relevant for <MadCap:variable name="General.DaticalDB" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" /> customers who use deploy packager.&#160; </strong></em>
                            </p>
                            <p>Labels are added to changesets during packaging by all of the following methods.&#160;</p>
                            <p><strong>Automatic</strong>: the following labels are added automatically during packaging.&#160;</p>
                            <ul>
                                <li>SQL script file name</li>
                                <li>Pipeline label (as specified in the REF context DbDef)</li>
                            </ul>
                            <p><strong>metatdata.properties file</strong>
                            </p>
                            <ul>
                                <li>Use the <code>label</code> property to specify one or more additional labels to add during packaging. Use a comma-separated list for multiple values. Expressions are not supported.&#160;</li>
                            </ul>
                            <p><strong>deployPackger.groovy command-line option</strong>
                            </p>
                            <ul>
                                <li>Use the <code>labels=</code> option to add one or more additional labels to add.&#160;Use a comma-separated list for multiple values. Expressions are not supported.&#160;</li>
                            </ul>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd">Operations</td>
                        <td colspan="1" class="confluenceTd">
                            <p>The following operations allow you to work with labels.</p>
                            <ul>
                                <li><code>forecast</code> - add labels during the operation</li>
                                <li><code>deploy</code> - add labels during the operation</li>
                                <li><a href="../../../documentation/package-sql-scripts-for-deployment/overview-packaging/CLI_Commands.htm" rel="nofollow"><code>modifyChangeSet</code></a> - add and remove labels on changesets directly</li>
                                <li><code>diffChangeLog</code> - add labels during the operation</li>
                            </ul>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <p>
            <br />
        </p>
        <h1 id="DaticalLabels-LabelExpressions">Label Expressions</h1>
        <p>Label expressions can be used only in the project, a DbDef or with CLI parameter options.</p>
        <p>You can use a comma-separated list or an expression, but not both.&#160;</p>
        <p>Note that label expressions must be enclosed in quotes when used as CLI parameter options.&#160; For example,</p>
        <p>--searchLabels=<span>"(cliLabel1 AND cliLabel2) AND (dbdefLabel1 OR&#160;dbdefLabel2 OR&#160;dbdefLabel3)"</span></p>
        <h2 id="DaticalLabels-Comma-SeparatedList">Comma-Separated List</h2>
        <p>When a comma-separated list of labels is set on a DbDef, a changeset must have at least one of the labels in the list in order to be deployed to the step.</p>
        <h2 id="DaticalLabels-ExpressionElements">Expression Elements</h2>
        <p><strong>!</strong>&#160;- (exclamation point) - NOT</p>
        <p><strong>AND</strong> - logical AND</p>
        <p><strong>OR</strong> - logical OR</p>
        <p><strong>()</strong> - (parentheses) - grouping&#160;</p>
        <h2 id="DaticalLabels-ExpressionExamples">Expression Examples</h2>
        <p>Labels are referred to by name in expressions. In the table, mylabel, yourlabel, hislabel, and herlabel are example labels.&#160;</p>
        <div class="table-wrap">
            <table class="wrapped confluenceTable">
                <colgroup>
                    <col />
                    <col />
                </colgroup>
                <tbody>
                    <tr>
                        <th class="confluenceTh">Expression</th>
                        <th class="confluenceTh">Description</th>
                    </tr>
                    <tr>
                        <td class="confluenceTd"><code>mylabel</code>
                        </td>
                        <td class="confluenceTd">Changeset must have <code>mylabel</code> to be deployed to this step.</td>
                    </tr>
                    <tr>
                        <td class="confluenceTd"><code>mylabel, yourlabel</code>
                        </td>
                        <td class="confluenceTd">Changeset must have either <code>mylabel</code> or <code>yourlabel</code> to be deployed to this step.</td>
                    </tr>
                    <tr>
                        <td class="confluenceTd"><code>mylabel OR yourlabel</code>
                        </td>
                        <td class="confluenceTd">Changeset must have either <code>mylabel</code> or <code>yourlabel</code> to be deployed to this step.</td>
                    </tr>
                    <tr>
                        <td class="confluenceTd"><code>mylabel AND yourlabel</code>
                        </td>
                        <td class="confluenceTd">Changeset must have both <code>mylabel</code> and <code>yourlabel</code> to be deployed to this step.</td>
                    </tr>
                    <tr>
                        <td class="confluenceTd"><code>!mylabel</code>
                        </td>
                        <td class="confluenceTd">Changeset must not have <code>mylabel</code> to be deployed to this step.&#160;</td>
                    </tr>
                    <tr>
                        <td class="confluenceTd"><code>!(mylabel OR yourlabel)</code>
                        </td>
                        <td class="confluenceTd">Changeset must have neither <code>mylabel</code> nor <code>yourlabel</code> to be deployed to this step.&#160;</td>
                    </tr>
                    <tr>
                        <td class="confluenceTd"><code>!(mylabel AND yourlabel)</code>
                        </td>
                        <td class="confluenceTd">Changeset may must have either&#160;<code>mylabel</code> or <code>yourlabel</code>, but not both, to be deployed to this step.&#160;</td>
                    </tr>
                    <tr>
                        <td class="confluenceTd"><code>mylabel AND&#160;!(herlabel OR hislabel)</code>
                        </td>
                        <td class="confluenceTd">Changeset must have <code>mylabel</code> but not <code>herlabel</code> or <code>hislabel</code> to be deployed to this step.&#160;</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="issue-data-block activity-comment twixi-block expanded">
            <div class="twixi-wrap verbose actionContainer">
                <div class="action-body flooded">
                    <p>
                        <br />
                    </p>
                </div>
            </div>
        </div>
        <h1 id="DaticalLabels-LabelUsagePractices">Label Usage Practices</h1>
        <p>Labels can be used in several ways:</p>
        <ul>
            <li>Group related database changes<ul><li>group scripts by development ticket (<strong>JIRA-1115</strong>)</li><li>group scripts by release (<strong>currentRelease</strong>)</li></ul></li>
            <li>Deploy changes selectively<ul><li>by script name (<strong>create_table_orderentry.sql</strong>)</li><li>by ticket number (<strong>JIRA-699</strong>)</li><li>by release&#160;(<strong>currentRelease</strong>)</li></ul></li>
            <li>Track Deployed Changes<ul><li>Labels are tracked in the Deployment Monitoring Console Database (DMCDB). The Datical Management Console (DMC) provides views of operations by label.&#160;</li></ul></li>
            <li>Manage workflow in the release pipeline<ul><li>Labels on DbDefs enable or disable change promotion through the release pipeline. Examples: <strong>pass_unit_test</strong>, <strong>pass_feature_test</strong>, <strong>pass_manual_test</strong>, <strong>pass_uat</strong>.</li><li>Examples: pass_unit_test, pass_feature_test, pass_manual_test, pass_uat</li></ul></li>
            <li>Modify Changeset labels<ul><li>Can update a label on a group of changesets</li><li>Example is 2 parts:<ul><li>Add new label: <code style="margin-left: 0.0px;">hammer modifyChangeSet --action=ADD --modifyLabels=newlabel <code style="margin-left: 0.0px;">--searchLabels=MyScriptName123.sql</code></code></li><li>Remove old label<code style="margin-left: 0.0px;">: <code style="margin-left: 0.0px;">modifyChangeSet --action=REMOVE --modifyLabels=oldlabel </code><code style="margin-left: 0.0px;">--searchLabels=MyScriptName123.sql</code></code></li></ul></li></ul></li>
        </ul>
        <h1 id="DaticalLabels-PipelinesandDbDefLabels">Pipelines and DbDef Labels</h1>
        <p>If you choose to use pipelines within a project, you need to make the pipeline name the first label for every DbDef in the pipeline.&#160;</p>
        <p>Pipeline merges rely on the pipeline name being the first label on each DbDef.&#160;</p>
        <h1 id="DaticalLabels-Errors">Errors</h1>
        <p>If you create an invalid expression for the project or the DbDef, you get an error during a status operation or during deployment:</p>
        <div class="code panel pdl conf-macro output-block" style="border-width: 1px;">
            <div class="codeContent panelContent pdl"><pre class="syntaxhighlighter-pre" xml:space="preserve">Failed to get Liquibase Change Set Statuses Cannot parse expression &lt;expression&gt;Cannot parse expression &lt;expression&gt;</pre>
            </div>
        </div>
    </body>
</html>