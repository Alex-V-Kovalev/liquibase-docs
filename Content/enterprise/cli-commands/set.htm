<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" xml:lang="en-us">
	<head>
		<title>Liquibase Enterprise Documentation</title>
	</head>
	<body>
		<h1>set</h1>
		<MadCap:snippetText src="../../Resources/Snippets/images/.ver_icon_size_enterprise.flsnp" />
		<p>Set properties for the project and database.</p>
		<p>The set command provides help for the subcommands.</p>
		<p><strong>USAGE</strong></p>
		<p><span class="HTMLCode_1">set &lt;property&gt; &lt;values&gt;</span></p>
		<p><span class="HTMLCode_1">set help</span></p>
		<p><strong>PROPERTIES</strong></p>
		<ul>
			<li>
				<p><span class="HTMLCode_1">alternateSchema</span> – Set the alternate schema for the project.</p>
				<p>USAGE: <span class="HTMLCode_1">set alternateSchema &lt;schema name&gt;</span></p>
			</li>
		</ul>
		<ul>
			<li>
				<p><span class="HTMLCode_1">autoGenSQL</span> – control whether or not SQL scripts are automatically generated during Forecast, Deploy, and Rollback operations.</p>
				<p>USAGE: <span class="HTMLCode_1">set autoGenSQL true|false</span></p>
			</li>
		</ul>
		<ul>
			<li>
				<p><span class="HTMLCode_1">dbprop</span> – Set a database property in a project.</p>
				<p>USAGE: <span class="HTMLCode_1">set dbprop [dbdef] [propertyName] [propertyValue]</span></p>
			</li>
		</ul>
		<ul>
			<li>
				<p><span class="HTMLCode_1">dbdef</span> – the name of a database definition&#160;in the current project.</p>
			</li>
			<li>
				<p>propertyName – a property name. The only property currently supported is <span class="HTMLCode_1">enableStorageOptions</span>. This property controls whether or not storage options are collected for a specific database definition during the snapshot command. Storage Option information includes storage configuration, tablespace/filegroup assignments, large object storage parameters and partitioning information for tables and indexes. This defaults to <span class="HTMLCode_1">false</span>.</p>
			</li>
			<li>
				<p>propertyValue – a property value (must be valid for the type of the property).</p>
				<p>EXAMPLE: <span class="HTMLCode_1">set dbProp QDdb enableStorageOptions true</span></p>
			</li>
		</ul>
		<ul>
			<li>
				<p><span class="HTMLCode_1">deployMode</span> – controls how much work is done during Deploy operations.</p>
				<p>USAGE: <span class="HTMLCode_1">set deployMode quick|full</span></p>
			</li>
		</ul>
		<ul>
			<li>
				<p><span class="HTMLCode_1">full</span> – performs rules validation and runs a forecast before deploying the changes, subject to <span class="HTMLCode_1">limitForecast</span>.</p>
			</li>
			<li>
				<p><span class="HTMLCode_1">quick</span> – deploys the changes (no rules valildation or forecast)</p>
			</li>
			<li>
				<p><span class="HTMLCode_1">deployThreshold</span> – controls what happens when a full deploy detects errors or warnings in rules or in forecast.</p>
				<p>USAGE: <span class="HTMLCode_1">set deployThreshold stopOnError|stopOnWarn|deployAlways&gt;</span></p>
			</li>
		</ul>
		<ul>
			<li>
				<p><span class="HTMLCode_1">stopOnError</span> – Deployment is not performed when errors are present in Pre-Deployment validation</p>
			</li>
			<li>
				<p><span class="HTMLCode_1">stopOnWarn</span> – Deployment is not performed when errors and/or Warnings are present in Pre-Deployment validation</p>
			</li>
			<li>
				<p><span class="HTMLCode_1">deployAlways</span> – Deploy proceeds regardless of validation results. NOT RECOMMENDED</p>
			</li>
			<li>
				<p>enableRowCount – set method for counting rows in tables.</p>
			</li>
			<li>
				<p>Changed in v5.7 from <span class="HTMLCode_1">true | false</span> with default of true. New default is <span class="HTMLCode_1">disabled</span>. Older projects are interpreted correctly and mapped to the new values.</p>
				<p>USAGE: <span class="HTMLCode_1">set enableRowCount exact | approximate | disabled</span></p>
				<ul>
					<li>
						<p><span class="HTMLCode_1">exact</span> – Uses a table scan to count the number of rows in each table.</p>
					</li>
					<li>
						<p><span class="HTMLCode_1">approximate</span> – Uses database statistics to approximate the number of rows.</p>
					</li>
					<li>
						<p><span class="HTMLCode_1">disable</span> – Does not count table rows.</p>
					</li>
				</ul>
			</li>
			<li>
				<p>enableSqlParser – set use of SQL Parser to allow forecasting of DIRECT, <span>DDL_DIRECT,</span> and SQLFILE scripts</p>
				<p>USAGE: <span class="HTMLCode_1">set enableSqlParser true | false</span></p>
			</li>
		</ul>
		<ul>
			<li>
				<p>
					<span class="HTMLCode_1">true</span>&#160;- use <span>SQL Parser to parse DIRECT, </span><span>DDL_DIRECT,</span>
					<span>and SQLFILE scripts into the <MadCap:variable name="General.DaticalDB" /> object model for subsequent validation with rules and forecast.</span></p>
			</li>
			<li>
				<p><span class="HTMLCode_1">false</span> – disable SQL Parser.</p>
			</li>
			<li>
				<p><span class="HTMLCode_1">externalStoredLogic</span> – Set whether stored logic definitions (stored procedures, etc.) are stored in external files or within the project changelog.</p>
				<p>USAGE: <span class="HTMLCode_1">set externalStoredLogic &lt;true|false&gt;</span></p>
			</li>
		</ul>
		<ul>
			<li>
				<p><span class="HTMLCode_1">forecastDML</span> – For Oracle only, controls whether Datical DB attempts to forecast DML (Data Manipulation Language).</p>
				<p>USAGE: set forecastDML <span class="HTMLCode_1">true | false</span></p>
			</li>
		</ul>
		<ul>
			<li>
				<p><span class="HTMLCode_1">true</span> – forecasts predict whether a DML change will be successful</p>
			</li>
			<li>
				<p><span class="HTMLCode_1">false</span> – forecasts warn that any DML change encountered will not be forecast</p>
			</li>
			<li>
				<p><span class="HTMLCode_1">help &lt;property&gt;</span> – show more help about a property.</p>
			</li>
			<li>
				<p><span class="HTMLCode_1">invalidsCheck</span> – controls how to check the validity of stored logic after deployment</p>
				<p>USAGE: <span class="HTMLCode_1">set invalidsCheck disabled|limited|local|global</span></p>
			</li>
		</ul>
		<ul>
			<li>
				<p><span class="HTMLCode_1">disabled</span> – do not perform the check</p>
			</li>
			<li>
				<p><span class="HTMLCode_1">limited</span> – only check objects targeted by a deployment and their dependencies</p>
			</li>
			<li>
				<p><span class="HTMLCode_1">local</span> – check the target schema only</p>
			</li>
			<li>
				<p><span class="HTMLCode_1">global</span> – check all schema in the database</p>
			</li>
			<li>
				<p><span class="HTMLCode_1">invalidsAction</span> – controls how to check the validity of stored logic after deployment</p>
				<p>USAGE: <span class="HTMLCode_1">set invalidsAction warn|fail</span></p>
				<ul>
					<li>
						<p><span class="HTMLCode_1">warn</span> – print a warning message if invalidsCheck does not pass.</p>
					</li>
					<li>
						<p>fail – print an error message if <span class="HTMLCode_1">invalidsCheck</span> does not pass for new stored logic objects. Print a warning if the check does not pass for objects that already exist in the database. If set to fail and a package operation encounters the error during deployment to REF, the package operations fails and the database is restored to its state before the packaging operation was started.</p>
					</li>
				</ul>
			</li>
			<li>
				<p><span class="HTMLCode_1">limitForecast</span> – controls how Datical DB behaves during forecast operations. Forecast operations run faster if set to true, but some rules are not checked.</p>
				<p>USAGE: <span class="HTMLCode_1">set limitForecast true|false</span></p>
			</li>
		</ul>
		<ul>
			<li>
				<p><span class="HTMLCode_1">true</span> – limit object profiling to those directly affected by the forecast</p>
			</li>
			<li>
				<p><span class="HTMLCode_1">false</span> – profile all objects in the target database</p>
			</li>
			<li>
				<p><span class="HTMLCode_1">nlsLang</span> – allows the user to set NLS_LANG value to interact with a database in their own language, as defined by the NLS_LANG parameter</p>
				<p>USAGE:&#160;<span class="HTMLCode_1">set nlsLang &lt;String&gt;</span><br />EXAMPLE:&#160;<span class="HTMLCode_1">set nlsLang SPANISH_SPAIN.WE8ISO8859P1</span></p>
			</li>
		</ul>
		<ul>
			<li>
				<p>property – Sets the specified property to a given value. The only property currently supported is <span class="HTMLCode_1">drivers</span>. This points to the directory where you've stored your JDBC drivers.</p>
				<p>USAGE: <span class="HTMLCode_1">set property [propertyName] [propertyValue]</span></p>
				<p>EXAMPLE: <span class="HTMLCode_1">set property drivers /path/to/driver/dir</span></p>
			</li>
		</ul>
		<ul>
			<li>
				<p><span class="HTMLCode_1">requireOptions</span> – controls whether or not labels or contexts are required for Forecast and Deploy</p>
				<p>USAGE: <span class="HTMLCode_1">set requireOptions true|false</span></p>
			</li>
		</ul>
		<ul>
			<li>
				<p><span class="HTMLCode_1">runtimeCredentials</span> – controls whether database credentials are stored or prompted at run time. Default: false. If set to true, all stored credentials are removed and you are prompted for database credentials during forecasting and deployment. If set to false, database credentials are encoded and stored in the project. <span class="Strong_2">We strongly recommend to use runtime credentials because it is more secure than stored credentials (due to the possibility of the stored password being decoded)</span><span>.</span></p>
				<p>USAGE <span class="HTMLCode_1">set runtimeCredentials true|false&#160;</span></p>
			</li>
		</ul>
		<ul>
			<li>
				<p><span class="HTMLCode_1">true</span> – all stored credentials (if any) are removed. You are prompted for database credentials during forecasting and deployment.</p>
			</li>
			<li>
				<p><span class="HTMLCode_1">false</span> – (default) database credentials are stored in the project.</p>
			</li>
		</ul>
		<ul>
			<li>
				<p><span class="HTMLCode_1">scriptExecutionTimeout</span> – sets a limit on how long Datical DB will wait for a script to run. We recommend setting a value for this for all of your REF dbDefs, but only your REF dbDefs.</p>
				<p>USAGE: <span class="HTMLCode_1">set scriptExecutionTimeout &lt;dbdefName&gt; &lt;seconds&gt;&#160;</span></p>
			</li>
		</ul>
		<ul>
			<li>
				<p><span class="HTMLCode_1">dbdefName</span> – name of the dbdef where the limit is applied</p>
			</li>
			<li>
				<p><span class="HTMLCode_1">seconds</span> – number of seconds. If set to 0, there is no timeout limit. The default value is 0.</p>
			</li>
			<li>
				<p><span class="HTMLCode_1">storageOptionsScope&#160;</span> – Specifies what storage information to use in snapshot and diff operations for all steps/dbdefs in the project. For <span class="HTMLCode_1">&lt;arg&gt;</span>, specify one of <span class="HTMLCode_1">all</span>, <span class="HTMLCode_1">lob</span>, <span class="HTMLCode_1">tablespace</span>, <span class="HTMLCode_1">tablespaceAndLob</span>. The default is <span class="HTMLCode_1">all</span>. This setting works only for steps/dbdefs that have <span class="HTMLCode_1">enableStorageSettings</span> set to <span class="HTMLCode_1">true</span>.</p>
				<p>USAGE: <span class="HTMLCode_1">set storageOptionsScope&#160;&lt;arg&gt;</span></p>
			</li>
		</ul>
		<ul>
			<li>
				<ul>
					<li>
						<p><span class="HTMLCode_1">&lt;arg&gt;</span> – one of <span class="HTMLCode_1">all, lob, tablespace, or tablespaceAndLob</span></p>
					</li>
				</ul>
			</li>
		</ul>
		<p><strong>SEE ALSO</strong></p>
		<p><span class="HTMLCode_1">show</span> command</p>
	</body>
</html>