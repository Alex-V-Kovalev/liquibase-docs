<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" xml:lang="en-us">
	<head>
		<title>Liquibase Enterprise Documentation</title>
	</head>
	<body>
		<h1>Change Models</h1>
		<MadCap:snippetText src="../../../../Resources/Snippets/images/.ver_icon_size_enterprise.flsnp" />
		<h2>All Change Models</h2>
		<p class="HTMLPreformatted">Boolean supportsRollback()</p>
		<ul>
			<li>
				<p>Returns a Boolean indicating that a change model supports auto-rollback (or not)</p>
			</li>
		</ul>
		<h2>Auto Increment</h2>
		<ul>
			<li>
				<p><strong>AddAutoIncrementType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.AddAutoIncrementType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getColumnDataType();</p>
		<p class="HTMLPreformatted">String getColumnName();</p>
		<p class="HTMLPreformatted">long getIncrementBy();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">long getStartWith();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<p class="HTMLPreformatted">boolean isSetIncrementBy();</p>
		<p class="HTMLPreformatted">boolean isSetStartWith();</p>
		<h2>Columns</h2>
		<ul>
			<li>
				<p><strong>AddColumnType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.AddColumnType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">List&lt;ColumnAddColumnType&gt; getColumn();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<ul>
			<li>
				<p><strong>ColumnAddColumnType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ColumnAddColumnType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getAfterColumn();</p>
		<p class="HTMLPreformatted">String getBeforeColumn();</p>
		<p class="HTMLPreformatted">BigInteger getPosition();</p>
		<ul>
			<li>
				<p><strong>ColumnBaseType</span> <em>import org.liquibase.xml.ns.dbchangelog.ColumnBaseType;</span><span class="Emphasis"><br /></em><span class="Emphasis">Note: Call the RuleFunctions class static method getText(myColumnBaseType); to get the text associated with this refactoring.</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">Object getAutoIncrement();</p>
		<p class="HTMLPreformatted">ConstraintsType getConstraints();</p>
		<p class="HTMLPreformatted">String getDefaultValue();</p>
		<p class="HTMLPreformatted">Object getDefaultValueBoolean();</p>
		<p class="HTMLPreformatted">String getDefaultValueComputed();</p>
		<p class="HTMLPreformatted">String getDefaultValueDate();</p>
		<p class="HTMLPreformatted">String getDefaultValueNumeric();</p>
		<p class="HTMLPreformatted">String getDefaultValueSequenceCurrent();</p>
		<p class="HTMLPreformatted">String getDefaultValueSequenceNext();</p>
		<p class="HTMLPreformatted">String getEncoding();</p>
		<p class="HTMLPreformatted">long getIncrementBy();</p>
		<p class="HTMLPreformatted">String getName();</p>
		<p class="HTMLPreformatted">String getRemarks();</p>
		<p class="HTMLPreformatted">long getStartWith();</p>
		<p class="HTMLPreformatted">String getType();</p>
		<p class="HTMLPreformatted">String getValue();</p>
		<p class="HTMLPreformatted">String getValueBlobFile();</p>
		<p class="HTMLPreformatted">String getValueBoolean();</p>
		<p class="HTMLPreformatted">String getValueClobFile();</p>
		<p class="HTMLPreformatted">String getValueComputed();</p>
		<p class="HTMLPreformatted">String getValueDate();</p>
		<p class="HTMLPreformatted">String getValueNumeric();</p>
		<p class="HTMLPreformatted">String getValueSequenceCurrent();</p>
		<p class="HTMLPreformatted">String getValueSequenceNext();</p>
		<p class="HTMLPreformatted">boolean isSetIncrementBy();</p>
		<p class="HTMLPreformatted">boolean isSetStartWith();</p>
		<ul>
			<li>
				<p><strong>ColumnExistsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ColumnExistsType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getColumnName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<ul>
			<li>
				<p><strong>ColumnLoadDataType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ColumnLoadDataType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getDefaultValue();</p>
		<p class="HTMLPreformatted">Object getDefaultValueBoolean();</p>
		<p class="HTMLPreformatted">String getDefaultValueComputed();</p>
		<p class="HTMLPreformatted">String getDefaultValueDate();</p>
		<p class="HTMLPreformatted">String getDefaultValueNumeric();</p>
		<p class="HTMLPreformatted">String getHeader();</p>
		<p class="HTMLPreformatted">Object getIndex();</p>
		<p class="HTMLPreformatted">String getName();</p>
		<p class="HTMLPreformatted">String getType();</p>
		<ul>
			<li>
				<p><strong>ColumnLoadUpdateDataType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ColumnLoadUpdateDataType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getDefaultValue();</p>
		<p class="HTMLPreformatted">Object getDefaultValueBoolean();</p>
		<p class="HTMLPreformatted">String getDefaultValueComputed();</p>
		<p class="HTMLPreformatted">String getDefaultValueDate();</p>
		<p class="HTMLPreformatted">String getDefaultValueNumeric();</p>
		<p class="HTMLPreformatted">String getHeader();</p>
		<p class="HTMLPreformatted">Object getIndex();</p>
		<p class="HTMLPreformatted">String getName();</p>
		<p class="HTMLPreformatted">String getType();</p>
		<ul>
			<li>
				<p><strong>ColumnType</span> <em>import org.liquibase.xml.ns.dbchangelog.ColumnType;</span><span class="Emphasis"><br /></em><span class="Emphasis">Note: Call the RuleFunctions class static method getText(myColumnType); to get the text associated with this refactoring.</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">Object getAutoIncrement();</p>
		<p class="HTMLPreformatted">Object getComputed();</p>
		<p class="HTMLPreformatted">ConstraintsType getConstraints();</p>
		<p class="HTMLPreformatted">String getDefaultValue();</p>
		<p class="HTMLPreformatted">Object getDefaultValueBoolean();</p>
		<p class="HTMLPreformatted">String getDefaultValueComputed();</p>
		<p class="HTMLPreformatted">String getDefaultValueDate();</p>
		<p class="HTMLPreformatted">String getDefaultValueNumeric();</p>
		<p class="HTMLPreformatted">String getDefaultValueSequenceCurrent();</p>
		<p class="HTMLPreformatted">String getDefaultValueSequenceNext();</p>
		<p class="HTMLPreformatted">String getEncoding();</p>
		<p class="HTMLPreformatted">long getIncrementBy();</p>
		<p class="HTMLPreformatted">String getName();</p>
		<p class="HTMLPreformatted">String getRemarks();</p>
		<p class="HTMLPreformatted">long getStartWith();</p>
		<p class="HTMLPreformatted">String getType();</p>
		<p class="HTMLPreformatted">String getValue();</p>
		<p class="HTMLPreformatted">String getValueBlobFile();</p>
		<p class="HTMLPreformatted">String getValueBoolean();</p>
		<p class="HTMLPreformatted">String getValueClobFile();</p>
		<p class="HTMLPreformatted">String getValueComputed();</p>
		<p class="HTMLPreformatted">String getValueDate();</p>
		<p class="HTMLPreformatted">String getValueNumeric();</p>
		<p class="HTMLPreformatted">String getValueSequenceCurrent();</p>
		<p class="HTMLPreformatted">String getValueSequenceNext();</p>
		<p class="HTMLPreformatted">boolean isSetIncrementBy();</p>
		<p class="HTMLPreformatted">boolean isSetStartWith();</p>
		<ul>
			<li>
				<p><strong>DropColumnType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropColumnType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getColumnName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<ul>
			<li>
				<p><strong>MergeColumnsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.MergeColumnsType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getColumn1Name();</p>
		<p class="HTMLPreformatted">String getColumn2Name();</p>
		<p class="HTMLPreformatted">String getFinalColumnName();</p>
		<p class="HTMLPreformatted">String getFinalColumnType();</p>
		<p class="HTMLPreformatted">String getJoinString();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<ul>
			<li>
				<p><strong>RenameColumnType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.RenameColumnType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getColumnDataType();</p>
		<p class="HTMLPreformatted">String getNewColumnName();</p>
		<p class="HTMLPreformatted">String getOldColumnName();</p>
		<p class="HTMLPreformatted">String getRemarks();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<h2>Constraints</h2>
		<ul>
			<li>
				<p><strong>ConstraintsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ConstraintsType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCheckConstraint();</p>
		<p class="HTMLPreformatted">Object getDeferrable();</p>
		<p class="HTMLPreformatted">Object getDeleteCascade();</p>
		<p class="HTMLPreformatted">String getForeignKeyName();</p>
		<p class="HTMLPreformatted">Object getInitiallyDeferred();</p>
		<p class="HTMLPreformatted">Object getNullable();</p>
		<p class="HTMLPreformatted">Object getPrimaryKey();</p>
		<p class="HTMLPreformatted">String getPrimaryKeyName();</p>
		<p class="HTMLPreformatted">String getPrimaryKeyTablespace();</p>
		<p class="HTMLPreformatted">String getReferencedColumnNames();</p>
		<p class="HTMLPreformatted">String getReferencedTableName();</p>
		<p class="HTMLPreformatted">String getReferences();</p>
		<p class="HTMLPreformatted">Object getUnique();</p>
		<p class="HTMLPreformatted">String getUniqueConstraintName();</p>
		<h3>Check Constraints</h3>
		<ul>
			<li>
				<p><strong>AddCheckConstraintType</span> <em>import com.datical.xml.ns.storedlogic.AddCheckConstraintType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myAddCheckConstraintType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p></p>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getConstraintName();</p>
		<p class="HTMLPreformatted">Boolean getDisabled();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<p class="HTMLPreformatted">String getXmlns();</p>
		<ul>
			<li>
				<p><strong>DisableCheckConstraintType</span> <em>import com.datical.xml.ns.storedlogic.DisableCheckConstraintType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myDisableCheckConstraintType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getConstraintName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<p class="HTMLPreformatted">String getXmlns();</p>
		<ul>
			<li>
				<p><strong>DropCheckConstraintType</span> <span class="Emphasis">import com.datical.xml.ns.storedlogic.DropCheckConstraintType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getConstraintName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<p class="HTMLPreformatted">String getXmlns();</p>
		<ul>
			<li>
				<p><strong>EnableCheckConstraintType</span> <em>import com.datical.xml.ns.storedlogic.EnableCheckConstraintType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myEnableCheckConstraintType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getConstraintName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<p class="HTMLPreformatted">String getXmlns();</p>
		<h3>Foreign Key Constraints</h3>
		<ul>
			<li>
				<p><strong>AddForeignKeyConstraintType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.AddForeignKeyConstraintType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getBaseColumnNames();</p>
		<p class="HTMLPreformatted">String getBaseTableCatalogName();</p>
		<p class="HTMLPreformatted">String getBaseTableName();</p>
		<p class="HTMLPreformatted">String getBaseTableSchemaName();</p>
		<p class="HTMLPreformatted">String getConstraintName();</p>
		<p class="HTMLPreformatted">Object getDeferrable();</p>
		<p class="HTMLPreformatted">Object getDeleteCascade();</p>
		<p class="HTMLPreformatted">Object getInitiallyDeferred();</p>
		<p class="HTMLPreformatted">FkCascadeActionOptions getOnDelete();</p>
		<p class="HTMLPreformatted">FkCascadeActionOptions getOnUpdate();</p>
		<p class="HTMLPreformatted">String getReferencedColumnNames();</p>
		<p class="HTMLPreformatted">String getReferencedTableCatalogName();</p>
		<p class="HTMLPreformatted">String getReferencedTableName();</p>
		<p class="HTMLPreformatted">String getReferencedTableSchemaName();</p>
		<p class="HTMLPreformatted">Object getReferencesUniqueColumn();</p>
		<p class="HTMLPreformatted">boolean isSetOnDelete();</p>
		<p class="HTMLPreformatted">boolean isSetOnUpdate();</p>
		<ul>
			<li>
				<p><strong>DropAllForeignKeyConstraintsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropAllForeignKeyConstraintsType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getBaseTableCatalogName();</p>
		<p class="HTMLPreformatted">String getBaseTableName();</p>
		<p class="HTMLPreformatted">String getBaseTableSchemaName();</p>
		<ul>
			<li>
				<p><strong>DropForeignKeyConstraintType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropForeignKeyConstraintType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getBaseTableCatalogName();</p>
		<p class="HTMLPreformatted">String getBaseTableName();</p>
		<p class="HTMLPreformatted">String getBaseTableSchemaName();</p>
		<p class="HTMLPreformatted">String getConstraintName();</p>
		<ul>
			<li>
				<p><strong>ForeignKeyConstraintExistsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ForeignKeyConstraintExistsType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getForeignKeyName();</p>
		<p class="HTMLPreformatted">String getForeignKeyTableName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<h3>Not Null Constraints</h3>
		<ul>
			<li>
				<p><strong>AddNotNullConstraintType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.AddNotNullConstraintType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getColumnDataType();</p>
		<p class="HTMLPreformatted">String getColumnName();</p>
		<p class="HTMLPreformatted">String getDefaultNullValue();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<ul>
			<li>
				<p><strong>DropNotNullConstraintType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropNotNullConstraintType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getColumnDataType();</p>
		<p class="HTMLPreformatted">String getColumnName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<h3>Unique Constraints</h3>
		<ul>
			<li>
				<p><strong>AddUniqueConstraintType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.AddUniqueConstraintType;</strong></p>
			</li>
		</ul>
		<p></p>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getColumnNames();</p>
		<p class="HTMLPreformatted">String getConstraintName();</p>
		<p class="HTMLPreformatted">Object getDeferrable();</p>
		<p class="HTMLPreformatted">Object getDisabled();</p>
		<p class="HTMLPreformatted">Object getInitiallyDeferred();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<p class="HTMLPreformatted">String getTablespace();</p>
		<ul>
			<li>
				<p><strong>DropUniqueConstraintType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropUniqueConstraintType;</strong></p>
			</li>
		</ul>
		<p></p>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getConstraintName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<p class="HTMLPreformatted">String getUniqueColumns();</p>
		<h2>Default Values</h2>
		<ul>
			<li>
				<p><strong>AddDefaultValueType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.AddDefaultValueType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getColumnDataType();</p>
		<p class="HTMLPreformatted">String getColumnName();</p>
		<p class="HTMLPreformatted">String getDefaultValue();</p>
		<p class="HTMLPreformatted">String getDefaultValueBoolean();</p>
		<p class="HTMLPreformatted">String getDefaultValueComputed();</p>
		<p class="HTMLPreformatted">String getDefaultValueDate();</p>
		<p class="HTMLPreformatted">String getDefaultValueNumeric();</p>
		<p class="HTMLPreformatted">String getDefaultValueSequenceNext();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<ul>
			<li>
				<p><strong>DropDefaultValueType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropDefaultValueType;</strong></p>
			</li>
		</ul>
		<p></p>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getColumnDataType();</p>
		<p class="HTMLPreformatted">String getColumnName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<h2>Functions</h2>
		<ul>
			<li>
				<p><strong>CreateFunctionType</span> <em>import com.datical.xml.ns.storedlogic.CreateFunctionType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myCreateFunctionType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getDbms();</p>
		<p class="HTMLPreformatted">String getEncoding();</p>
		<p class="HTMLPreformatted">String getFunctionName();</p>
		<p class="HTMLPreformatted">String getPath();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getXmlns();</p>
		<p class="HTMLPreformatted">boolean isSetRelativeToChangelogFile();</p>
		<p class="HTMLPreformatted">boolean isSetReplaceIfExists();</p>
		<ul>
			<li>
				<p><strong>DropFunctionType</span> <span class="Emphasis">import com.datical.xml.ns.storedlogic.DropFunctionType;</strong></p>
			</li>
		</ul>
		<p></p>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getFunctionName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<h2>Indices</h2>
		<ul>
			<li>
				<p><strong>CreateIndexType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.CreateIndexType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getAssociatedWith();</p>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">Object getClustered();</p>
		<p class="HTMLPreformatted">List&lt;ColumnType&gt; getColumn();</p>
		<p class="HTMLPreformatted">String getIndexName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">StorageOptionsType getStorageOptions();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<p class="HTMLPreformatted">String getTablespace();</p>
		<p class="HTMLPreformatted">Object getUnique();</p>
		<ul>
			<li>
				<p><strong>DropIndexType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropIndexType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getAssociatedWith();</p>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getIndexName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<ul>
			<li>
				<p><strong>IndexExistsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.IndexExistsType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getColumnNames();</p>
		<p class="HTMLPreformatted">String getIndexName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<h2>Packages</h2>
		<ul>
			<li>
				<p><strong>CreatePackageBodyType</span> <em>import com.datical.xml.ns.storedlogic.CreatePackageBodyType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myCreatePackageBodyType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getDbms();</p>
		<p class="HTMLPreformatted">String getEncoding();</p>
		<p class="HTMLPreformatted">String getPackageBodyName();</p>
		<p class="HTMLPreformatted">String getPath();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">boolean isSetRelativeToChangelogFile();</p>
		<ul>
			<li>
				<p><strong>CreatePackageType</span> <em>import com.datical.xml.ns.storedlogic.CreatePackageType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myCreatePackageType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getDbms();</p>
		<p class="HTMLPreformatted">String getEncoding();</p>
		<p class="HTMLPreformatted">String getPackageName();</p>
		<p class="HTMLPreformatted">String getPath();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">boolean isSetRelativeToChangelogFile();</p>
		<ul>
			<li>
				<p><strong>DropPackageBodyType</span> <span class="Emphasis">import com.datical.xml.ns.storedlogic.DropPackageBodyType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getPackageBodyName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<ul>
			<li>
				<p><strong>DropPackageType</span> <span class="Emphasis">import com.datical.xml.ns.storedlogic.DropPackageType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getPackageName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<h2>Primary Keys</h2>
		<ul>
			<li>
				<p><strong>AddPrimaryKeyType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.AddPrimaryKeyType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getColumnNames();</p>
		<p class="HTMLPreformatted">String getConstraintName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<p class="HTMLPreformatted">String getTablespace();</p>
		<ul>
			<li>
				<p><strong>DropPrimaryKeyType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropPrimaryKeyType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getConstraintName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<ul>
			<li>
				<p><strong>PrimaryKeyExistsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.PrimaryKeyExistsType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getPrimaryKeyName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<h2>Procedures</h2>
		<ul>
			<li>
				<p><strong>CreateProcedureType</span> <em>import org.liquibase.xml.ns.dbchangelog.CreateProcedureType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myCreateProcedureType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getComment();</p>
		<p class="HTMLPreformatted">String getDbms();</p>
		<p class="HTMLPreformatted">String getEncoding();</p>
		<p class="HTMLPreformatted">String getPath();</p>
		<p class="HTMLPreformatted">String getProcedureName();</p>
		<p class="HTMLPreformatted">Object getRelativeToChangelogFile();</p>
		<p class="HTMLPreformatted">Object getReplaceIfExists();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<ul>
			<li>
				<p><strong>DropProcedureType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropProcedureType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getProcedureName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<h2>Rollback</h2>
		<ul>
			<li>
				<p><strong>RollbackType</span> <em>import org.liquibase.xml.ns.dbchangelog.RollbackType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myRollbackType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p class="HTMLPreformatted">List&lt;AddAutoIncrementType&gt; getAddAutoIncrement();</p>
		<p class="HTMLPreformatted">List&lt;AddColumnType&gt; getAddColumn();</p>
		<p class="HTMLPreformatted">List&lt;AddDefaultValueType&gt; getAddDefaultValue();</p>
		<p class="HTMLPreformatted">List&lt;AddForeignKeyConstraintType&gt; getAddForeignKeyConstraint();</p>
		<p class="HTMLPreformatted">List&lt;AddLookupTableType&gt; getAddLookupTable();</p>
		<p class="HTMLPreformatted">List&lt;AddNotNullConstraintType&gt; getAddNotNullConstraint();</p>
		<p class="HTMLPreformatted">List&lt;AddPrimaryKeyType&gt; getAddPrimaryKey();</p>
		<p class="HTMLPreformatted">List&lt;AddUniqueConstraintType&gt; getAddUniqueConstraint();</p>
		<p class="HTMLPreformatted">List&lt;AlterSequenceType&gt; getAlterSequence();</p>
		<p class="HTMLPreformatted">FeatureMap getAny();</p>
		<p class="HTMLPreformatted">String getChangeSetAuthor();</p>
		<p class="HTMLPreformatted">FeatureMap getChangeSetChildren();</p>
		<p class="HTMLPreformatted">String getChangeSetId();</p>
		<p class="HTMLPreformatted">String getChangeSetPath();</p>
		<p class="HTMLPreformatted">List&lt;String&gt; getComments();</p>
		<p class="HTMLPreformatted">List&lt;CreateIndexType&gt; getCreateIndex();</p>
		<p class="HTMLPreformatted">List&lt;CreateProcedureType&gt; getCreateProcedure();</p>
		<p class="HTMLPreformatted">List&lt;CreateSequenceType&gt; getCreateSequence();</p>
		<p class="HTMLPreformatted">List&lt;CreateTableType&gt; getCreateTable();</p>
		<p class="HTMLPreformatted">List&lt;CreateViewType&gt; getCreateView();</p>
		<p class="HTMLPreformatted">List&lt;CustomChangeType&gt; getCustomChange();</p>
		<p class="HTMLPreformatted">List&lt;DeleteType&gt; getDelete();</p>
		<p class="HTMLPreformatted">List&lt;DropAllForeignKeyConstraintsType&gt; getDropAllForeignKeyConstraints();</p>
		<p class="HTMLPreformatted">List&lt;DropColumnType&gt; getDropColumn();</p>
		<p class="HTMLPreformatted">List&lt;DropDefaultValueType&gt; getDropDefaultValue();</p>
		<p class="HTMLPreformatted">List&lt;DropForeignKeyConstraintType&gt; getDropForeignKeyConstraint();</p>
		<p class="HTMLPreformatted">List&lt;DropIndexType&gt; getDropIndex();</p>
		<p class="HTMLPreformatted">List&lt;DropNotNullConstraintType&gt; getDropNotNullConstraint();</p>
		<p class="HTMLPreformatted">List&lt;DropPrimaryKeyType&gt; getDropPrimaryKey();</p>
		<p class="HTMLPreformatted">List&lt;DropSequenceType&gt; getDropSequence();</p>
		<p class="HTMLPreformatted">List&lt;DropTableType&gt; getDropTable();</p>
		<p class="HTMLPreformatted">List&lt;DropUniqueConstraintType&gt; getDropUniqueConstraint();</p>
		<p class="HTMLPreformatted">List&lt;DropViewType&gt; getDropView();</p>
		<p class="HTMLPreformatted">List&lt;ExecuteCommandType&gt; getExecuteCommand();</p>
		<p class="HTMLPreformatted">List&lt;InsertType&gt; getInsert();</p>
		<p class="HTMLPreformatted">List&lt;LoadDataType&gt; getLoadData();</p>
		<p class="HTMLPreformatted">List&lt;LoadUpdateDataType&gt; getLoadUpdateData();</p>
		<p class="HTMLPreformatted">List&lt;MergeColumnsType&gt; getMergeColumns();</p>
		<p class="HTMLPreformatted">List&lt;ModifyDataTypeType&gt; getModifyDataType();</p>
		<p class="HTMLPreformatted">List&lt;RenameColumnType&gt; getRenameColumn();</p>
		<p class="HTMLPreformatted">List&lt;RenameTableType&gt; getRenameTable();</p>
		<p class="HTMLPreformatted">List&lt;RenameViewType&gt; getRenameView();</p>
		<p class="HTMLPreformatted">List&lt;RollbackType&gt; getRollback();</p>
		<p class="HTMLPreformatted">List&lt;SqlType&gt; getSql();</p>
		<p class="HTMLPreformatted">List&lt;SqlFileType&gt; getSqlFile();</p>
		<p class="HTMLPreformatted">List&lt;StopType&gt; getStop();</p>
		<p class="HTMLPreformatted">List&lt;UpdateType&gt; getUpdate();</p>
		<h2>Sequences</h2>
		<ul>
			<li>
				<p><strong>AlterSequenceType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.AlterSequenceType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getIncrementBy();</p>
		<p class="HTMLPreformatted">String getMaxValue();</p>
		<p class="HTMLPreformatted">String getMinValue();</p>
		<p class="HTMLPreformatted">Object getOrdered();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getSequenceName();</p>
		<p class="HTMLPreformatted">String getStartValue();</p>
		<ul>
			<li>
				<p><strong>CreateSequenceType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.CreateSequenceType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">int getCacheSize();</p>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">Object getCycle();</p>
		<p class="HTMLPreformatted">String getIncrementBy();</p>
		<p class="HTMLPreformatted">String getMaxValue();</p>
		<p class="HTMLPreformatted">String getMinValue();</p>
		<p class="HTMLPreformatted">Object getOrdered();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getSequenceName();</p>
		<p class="HTMLPreformatted">String getStartValue();</p>
		<p class="HTMLPreformatted">boolean isSetCacheSize();</p>
		<ul>
			<li>
				<p><strong>DropSequenceType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropSequenceType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getIncrementBy();</p>
		<p class="HTMLPreformatted">String getMaxValue();</p>
		<p class="HTMLPreformatted">String getMinValue();</p>
		<p class="HTMLPreformatted">Object getOrdered();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getSequenceName();</p>
		<p class="HTMLPreformatted">String getStartValue();</p>
		<ul>
			<li>
				<p><strong>SequenceExistsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.SequenceExistsType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getSequenceName();</p>
		<h2>SQL</h2>
		<ul>
			<li>
				<p><strong>ModifySqlType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ModifySqlType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">List&lt;AppendType&gt; getAppend();</p>
		<p class="HTMLPreformatted">Object getApplyToRollback();</p>
		<p class="HTMLPreformatted">String getContext();</p>
		<p class="HTMLPreformatted">String getDbms();</p>
		<p class="HTMLPreformatted">String getLabels();</p>
		<p class="HTMLPreformatted">FeatureMap getModifySqlChildren();</p>
		<p class="HTMLPreformatted">List&lt;PrependType&gt; getPrepend();</p>
		<p class="HTMLPreformatted">List&lt;RegExpReplaceType&gt; getRegExpReplace();</p>
		<p class="HTMLPreformatted">List&lt;ReplaceType&gt; getReplace();</p>
		<ul>
			<li>
				<p><strong>SqlFileType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.SqlFileType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getDbms();</p>
		<p class="HTMLPreformatted">String getEncoding();</p>
		<p class="HTMLPreformatted">String getEndDelimiter();</p>
		<p class="HTMLPreformatted">String getPath();</p>
		<p class="HTMLPreformatted">Object getRelativeToChangelogFile();</p>
		<p class="HTMLPreformatted">Object getSplitStatements();</p>
		<p class="HTMLPreformatted">Object getStripComments();</p>
		<p class="HTMLPreformatted">boolean isSetEncoding();</p>
		<ul>
			<li>
				<p><strong>SqlType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.SqlType</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">Note: Call the RuleFunctions class static method getText(mySqlType); to get the text associated with this refactoring.</p>
		<p class="HTMLPreformatted">String getComment();</p>
		<p class="HTMLPreformatted">String getDbms();</p>
		<p class="HTMLPreformatted">String getEndDelimiter();</p>
		<p class="HTMLPreformatted">Object getSplitStatements();</p>
		<p class="HTMLPreformatted">Object getStripComments();</p>
		<h2>Storage Options</h2>
		<ul>
			<li>
				<p><strong>StorageOptionsType</span> <em>import com.datical.xml.ns.appdba.StorageOptionsType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myStorageOptionsType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getContext();</p>
		<p class="HTMLPreformatted">String getDbms();</p>
		<p class="HTMLPreformatted">String getPath();</p>
		<p class="HTMLPreformatted">boolean isSetRelativeToChangelogFile();</p>
		<ul>
			<li>
				<p><strong>IndexStorageOptionsType</span> <em>import com.datical.xml.ns.appdba.IndexStorageOptionsType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myIndexStorageOptionsType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getIndexName();</p>
		<p class="HTMLPreformatted">String getPath();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<ul>
			<li>
				<p><strong>TableStorageOptionsType</span> <em>import com.datical.xml.ns.appdba.TableStorageOptionsType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myTableStorageOptionsType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getPath();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<h2>Synonyms</h2>
		<ul>
			<li>
				<p><strong>CreateSynonymType</span> <span class="Emphasis">import com.datical.xml.ns.appdba.CreateSynonymType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getObjectCatalogName();</p>
		<p class="HTMLPreformatted">String getObjectName();</p>
		<p class="HTMLPreformatted">String getObjectSchemaName();</p>
		<p class="HTMLPreformatted">String getObjectType();</p>
		<p class="HTMLPreformatted">String getSynonymCatalogName();</p>
		<p class="HTMLPreformatted">String getSynonymName();</p>
		<p class="HTMLPreformatted">String getSynonymSchemaName();</p>
		<p class="HTMLPreformatted">boolean isSetPrivate();</p>
		<p class="HTMLPreformatted">boolean isSetReplaceIfExists();</p>
		<ul>
			<li>
				<p><strong>DropSynonymType</span> <span class="Emphasis">import com.datical.xml.ns.appdba.DropSynonymType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getObjectType();</p>
		<p class="HTMLPreformatted">String getSynonymCatalogName();</p>
		<p class="HTMLPreformatted">String getSynonymName();</p>
		<p class="HTMLPreformatted">String getSynonymSchemaName();</p>
		<p class="HTMLPreformatted">boolean isSetPrivate();</p>
		<h2>Tables</h2>
		<ul>
			<li>
				<p><strong>CreateTableType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.CreateTableType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">List&lt;ColumnType&gt; getColumn();</p>
		<p class="HTMLPreformatted">String getRemarks();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">StorageOptionsType getStorageOptions();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<p class="HTMLPreformatted">String getTablespace();</p>
		<p class="HTMLPreformatted">String getTemporary();</p>
		<ul>
			<li>
				<p><strong>DropTableType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropTableType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">Object getCascadeConstraints();</p>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<ul>
			<li>
				<p><strong>RenameTableType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.RenameTableType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getNewTableName();</p>
		<p class="HTMLPreformatted">String getOldTableName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<ul>
			<li>
				<p><strong>TableExistsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.TableExistsType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<ul>
			<li>
				<p><strong>TableIsEmptyType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.TableIsEmptyType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<h2>Triggers</h2>
		<ul>
			<li>
				<p><strong>CreateTriggerType</span> <em>import com.datical.xml.ns.storedlogic.CreateTriggerType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myCreateTriggerType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getDbms();</p>
		<p class="HTMLPreformatted">String getEncoding();</p>
		<p class="HTMLPreformatted">String getPath();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getScope();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<p class="HTMLPreformatted">String getTriggerName();</p>
		<p class="HTMLPreformatted">String getXmlns();</p>
		<p class="HTMLPreformatted">boolean isSetDisabled();</p>
		<p class="HTMLPreformatted">boolean isSetRelativeToChangelogFile();</p>
		<p class="HTMLPreformatted">boolean isSetReplaceIfExists();</p>
		<ul>
			<li>
				<p><strong>DisableTriggerType</span> <span class="Emphasis">import com.datical.xml.ns.storedlogic.DisableTriggerType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getScope();</p>
		<p class="HTMLPreformatted">String getTriggerName();</p>
		<p class="HTMLPreformatted">String getXmlns();</p>
		<ul>
			<li>
				<p><strong>DropTriggerType</span> <em>import com.datical.xml.ns.storedlogic.DropTriggerType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myDropTriggerType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getScope();</p>
		<p class="HTMLPreformatted">String getTriggerName();</p>
		<p class="HTMLPreformatted">String getXmlns();</p>
		<ul>
			<li>
				<p><strong>EnableTriggerType</span> <em>import com.datical.xml.ns.storedlogic.EnableTriggerType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myEnableTriggerType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getScope();</p>
		<p class="HTMLPreformatted">String getTriggerName();</p>
		<p class="HTMLPreformatted">String getXmlns();</p>
		<ul>
			<li>
				<p><strong>RenameTriggerType</span> <em>import com.datical.xml.ns.storedlogic.RenameTriggerType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myRenameTriggerType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getNewTriggerName();</p>
		<p class="HTMLPreformatted">String getOldTriggerName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getXmlns();</p>
		<h2>Views</h2>
		<ul>
			<li>
				<p><strong>CreateViewType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.CreateViewType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">Object getFullDefinition();</p>
		<p class="HTMLPreformatted">Object getReplaceIfExists();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getValue();</p>
		<p class="HTMLPreformatted">String getViewName();</p>
		<ul>
			<li>
				<p><strong>DropViewType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropViewType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getViewName();</p>
		<ul>
			<li>
				<p><strong>RenameViewType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.RenameViewType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getNewViewName();</p>
		<p class="HTMLPreformatted">String getOldViewName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<ul>
			<li>
				<p><strong>ViewExistsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ViewExistsType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getViewName();</p>
		<h2>Miscellaneous</h2>
		<h3>ChangeLogs and ChangeSets</h3>
		<ul>
			<li>
				<p><strong>ChangeLogPropertyDefinedType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ChangeLogPropertyDefinedType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getProperty();</p>
		<p class="HTMLPreformatted">String getValue();</p>
		<ul>
			<li>
				<p><strong>ChangeSetExecutedType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ChangeSetExecutedType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getAuthor();</p>
		<p class="HTMLPreformatted">String getChangeLogFile();</p>
		<p class="HTMLPreformatted">String getId();</p>
		<ul>
			<li>
				<p><strong>ChangeSetType</span> <em>import org.liquibase.xml.ns.dbchangelog.ChangeSetType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myChangeSetType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p class="HTMLPreformatted">List&lt;AddAutoIncrementType&gt; getAddAutoIncrement();</p>
		<p class="HTMLPreformatted">List&lt;AddCheckConstraintType&gt; getAddCheckConstraint();</p>
		<p class="HTMLPreformatted">List&lt;AddColumnType&gt; getAddColumn();</p>
		<p class="HTMLPreformatted">List&lt;AddDefaultValueType&gt; getAddDefaultValue();</p>
		<p class="HTMLPreformatted">List&lt;AddForeignKeyConstraintType&gt; getAddForeignKeyConstraint();</p>
		<p class="HTMLPreformatted">List&lt;AddLookupTableType&gt; getAddLookupTable();</p>
		<p class="HTMLPreformatted">List&lt;AddNotNullConstraintType&gt; getAddNotNullConstraint();</p>
		<p class="HTMLPreformatted">List&lt;AddPrimaryKeyType&gt; getAddPrimaryKey();</p>
		<p class="HTMLPreformatted">List&lt;AddUniqueConstraintType&gt; getAddUniqueConstraint();</p>
		<p class="HTMLPreformatted">List&lt;AlterSequenceType&gt; getAlterSequence();</p>
		<p class="HTMLPreformatted">FeatureMap getAny();</p>
		<p class="HTMLPreformatted">FeatureMap getAnyAttribute();</p>
		<p class="HTMLPreformatted">String getAuthor();</p>
		<p class="HTMLPreformatted">FeatureMap getChangeSetChildren();</p>
		<p class="HTMLPreformatted">List&lt;CommentType&gt; getComments();</p>
		<p class="HTMLPreformatted">String getContext();</p>
		<p class="HTMLPreformatted">List&lt;CreateFunctionType&gt; getCreateFunction();</p>
		<p class="HTMLPreformatted">List&lt;CreateIndexType&gt; getCreateIndex();</p>
		<p class="HTMLPreformatted">List&lt;CreatePackageType&gt; getCreatePackage();</p>
		<p class="HTMLPreformatted">List&lt;CreatePackageBodyType&gt; getCreatePackageBody();</p>
		<p class="HTMLPreformatted">List&lt;CreateProcedureType&gt; getCreateProcedure();</p>
		<p class="HTMLPreformatted">List&lt;CreateSequenceType&gt; getCreateSequence();</p>
		<p class="HTMLPreformatted">List&lt;CreateSynonymType&gt; getCreateSynonym();</p>
		<p class="HTMLPreformatted">List&lt;CreateTableType&gt; getCreateTable();</p>
		<p class="HTMLPreformatted">List&lt;CreateTriggerType&gt; getCreateTrigger();</p>
		<p class="HTMLPreformatted">List&lt;CreateViewType&gt; getCreateView();</p>
		<p class="HTMLPreformatted">List&lt;CustomChangeType&gt; getCustomChange();</p>
		<p class="HTMLPreformatted">String getDbms();</p>
		<p class="HTMLPreformatted">List&lt;DeleteType&gt; getDelete();</p>
		<p class="HTMLPreformatted">List&lt;DisableCheckConstraintType&gt; getDisableCheckConstraint();</p>
		<p class="HTMLPreformatted">List&lt;DisableTriggerType&gt; getDisableTrigger();</p>
		<p class="HTMLPreformatted">List&lt;DropAllForeignKeyConstraintsType&gt; getDropAllForeignKeyConstraints();</p>
		<p class="HTMLPreformatted">List&lt;DropCheckConstraintType&gt; getDropCheckConstraint();</p>
		<p class="HTMLPreformatted">List&lt;DropColumnType&gt; getDropColumn();</p>
		<p class="HTMLPreformatted">List&lt;DropDefaultValueType&gt; getDropDefaultValue();</p>
		<p class="HTMLPreformatted">List&lt;DropForeignKeyConstraintType&gt; getDropForeignKeyConstraint();</p>
		<p class="HTMLPreformatted">List&lt;DropFunctionType&gt; getDropFunction();</p>
		<p class="HTMLPreformatted">List&lt;DropIndexType&gt; getDropIndex();</p>
		<p class="HTMLPreformatted">List&lt;DropNotNullConstraintType&gt; getDropNotNullConstraint();</p>
		<p class="HTMLPreformatted">List&lt;DropPackageType&gt; getDropPackage();</p>
		<p class="HTMLPreformatted">List&lt;DropPackageBodyType&gt; getDropPackageBody();</p>
		<p class="HTMLPreformatted">List&lt;DropPrimaryKeyType&gt; getDropPrimaryKey();</p>
		<p class="HTMLPreformatted">List&lt;DropProcedureType&gt; getDropProcedure();</p>
		<p class="HTMLPreformatted">List&lt;DropSequenceType&gt; getDropSequence();</p>
		<p class="HTMLPreformatted">List&lt;DropSynonymType&gt; getDropSynonym();</p>
		<p class="HTMLPreformatted">List&lt;DropTableType&gt; getDropTable();</p>
		<p class="HTMLPreformatted">List&lt;DropTriggerType&gt; getDropTrigger();</p>
		<p class="HTMLPreformatted">List&lt;DropUniqueConstraintType&gt; getDropUniqueConstraint();</p>
		<p class="HTMLPreformatted">List&lt;DropViewType&gt; getDropView();</p>
		<p class="HTMLPreformatted">List&lt;EnableCheckConstraintType&gt; getEnableCheckConstraint();</p>
		<p class="HTMLPreformatted">List&lt;EnableTriggerType&gt; getEnableTrigger();</p>
		<p class="HTMLPreformatted">List&lt;ExecuteCommandType&gt; getExecuteCommand();</p>
		<p class="HTMLPreformatted">Object getFailOnError();</p>
		<p class="HTMLPreformatted">String getId();</p>
		<p class="HTMLPreformatted">List&lt;InsertType&gt; getInsert();</p>
		<p class="HTMLPreformatted">String getLabels();</p>
		<p class="HTMLPreformatted">List&lt;LoadDataType&gt; getLoadData();</p>
		<p class="HTMLPreformatted">List&lt;LoadUpdateDataType&gt; getLoadUpdateData();</p>
		<p class="HTMLPreformatted">String getLogicalFilePath();</p>
		<p class="HTMLPreformatted">List&lt;MergeColumnsType&gt; getMergeColumns();</p>
		<p class="HTMLPreformatted">List&lt;ModifyDataTypeType&gt; getModifyDataType();</p>
		<p class="HTMLPreformatted">List&lt;ModifySqlType&gt; getModifySql();</p>
		<p class="HTMLPreformatted">ObjectQuotingStrategy getObjectQuotingStrategy();</p>
		<p class="HTMLPreformatted">OnChangeSetValidationFail getOnValidationFail();</p>
		<p class="HTMLPreformatted">List&lt;OutputType&gt; getOutput();</p>
		<p class="HTMLPreformatted">PreConditionsType getPreConditions();</p>
		<p class="HTMLPreformatted">List&lt;RenameColumnType&gt; getRenameColumn();</p>
		<p class="HTMLPreformatted">List&lt;RenameTableType&gt; getRenameTable();</p>
		<p class="HTMLPreformatted">List&lt;RenameTriggerType&gt; getRenameTrigger();</p>
		<p class="HTMLPreformatted">List&lt;RenameViewType&gt; getRenameView();</p>
		<p class="HTMLPreformatted">List&lt;RollbackType&gt; getRollback();</p>
		<p class="HTMLPreformatted">Object getRunAlways();</p>
		<p class="HTMLPreformatted">Object getRunInTransaction();</p>
		<p class="HTMLPreformatted">Object getRunOnChange();</p>
		<p class="HTMLPreformatted">List&lt;SqlType&gt; getSql();</p>
		<p class="HTMLPreformatted">List&lt;SqlFileType&gt; getSqlFile();</p>
		<p class="HTMLPreformatted">List&lt;StopType&gt; getStop();</p>
		<p class="HTMLPreformatted">TagDatabaseType getTagDatabase();</p>
		<p class="HTMLPreformatted">List&lt;UpdateType&gt; getUpdate();</p>
		<p class="HTMLPreformatted">List&lt;ValidCheckSumType&gt; getValidCheckSum();</p>
		<p class="HTMLPreformatted">boolean isSetObjectQuotingStrategy();</p>
		<p class="HTMLPreformatted">boolean isSetOnValidationFail();</p>
		<p class="HTMLPreformatted">boolean isSetRunInTransaction();</p>
		<ul>
			<li>
				<p><strong>CommentType</span> <em>import org.liquibase.xml.ns.dbchangelog.CommentType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myCommentType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p></p>
		<ul>
			<li>
				<p><strong>DatabaseChangeLogType</span> <em>import</em> <span class="Emphasis">org.liquibase.xml.ns.dbchangelog.DatabaseChangeLogType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">FeatureMap getAnyAttribute();</p>
		<p class="HTMLPreformatted">List&lt;ChangeSetType&gt; getChangeSet();</p>
		<p class="HTMLPreformatted">FeatureMap getGroup();</p>
		<p class="HTMLPreformatted">List&lt;IncludeType&gt; getInclude();</p>
		<p class="HTMLPreformatted">List&lt;IncludeAllType&gt; getIncludeAll();</p>
		<p class="HTMLPreformatted">String getLogicalFilePath();</p>
		<p class="HTMLPreformatted">ObjectQuotingStrategy getObjectQuotingStrategy();</p>
		<p class="HTMLPreformatted">PreConditionsType1 getPreConditions();</p>
		<p class="HTMLPreformatted">List&lt;PropertyType&gt; getProperty();</p>
		<p class="HTMLPreformatted">boolean isSetObjectQuotingStrategy();</p>
		<h3>DML - Data Loading</h3>
		<ul>
			<li>
				<p><strong>AddLookupTableType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.AddLookupTableType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getConstraintName();</p>
		<p class="HTMLPreformatted">String getExistingColumnName();</p>
		<p class="HTMLPreformatted">String getExistingTableCatalogName();</p>
		<p class="HTMLPreformatted">String getExistingTableName();</p>
		<p class="HTMLPreformatted">String getExistingTableSchemaName();</p>
		<p class="HTMLPreformatted">String getNewColumnDataType();</p>
		<p class="HTMLPreformatted">String getNewColumnName();</p>
		<p class="HTMLPreformatted">String getNewTableCatalogName();</p>
		<p class="HTMLPreformatted">String getNewTableName();</p>
		<p class="HTMLPreformatted">String getNewTableSchemaName();</p>
		<ul>
			<li>
				<p><strong>LoadDataType</span> <em>import org.liquibase.xml.ns.dbchangelog.LoadDataType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myLoadDataType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">List&lt;ColumnLoadDataType&gt; getColumn();</p>
		<p class="HTMLPreformatted">String getEncoding();</p>
		<p class="HTMLPreformatted">String getFile();</p>
		<p class="HTMLPreformatted">String getQuotchar();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getSeparator();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<p class="HTMLPreformatted">boolean isSetEncoding();</p>
		<p class="HTMLPreformatted">boolean isSetQuotchar();</p>
		<p class="HTMLPreformatted">boolean isSetSeparator();</p>
		<ul>
			<li>
				<p><strong>LoadUpdateDataType</span> <em>import org.liquibase.xml.ns.dbchangelog.LoadUpdateDataType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myLoadUpdateDataType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">List&lt;ColumnLoadUpdateDataType&gt; getColumn();</p>
		<p class="HTMLPreformatted">String getEncoding();</p>
		<p class="HTMLPreformatted">String getFile();</p>
		<p class="HTMLPreformatted">String getPrimaryKey();</p>
		<p class="HTMLPreformatted">String getQuotchar();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getSeparator();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<p class="HTMLPreformatted">boolean isSetEncoding();</p>
		<p class="HTMLPreformatted">boolean isSetQuotchar();</p>
		<p class="HTMLPreformatted">boolean isSetSeparator();</p>
		<h3>Miscellaneous</h3>
		<ul>
			<li>
				<p><strong>AndType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.AndType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">List&lt;AndType&gt; getAnd();</p>
		<p class="HTMLPreformatted">FeatureMap getAny();</p>
		<p class="HTMLPreformatted">List&lt;ChangeLogPropertyDefinedType&gt; getChangeLogPropertyDefined();</p>
		<p class="HTMLPreformatted">List&lt;ChangeSetExecutedType&gt; getChangeSetExecuted();</p>
		<p class="HTMLPreformatted">List&lt;ColumnExistsType&gt; getColumnExists();</p>
		<p class="HTMLPreformatted">List&lt;CustomPreconditionType&gt; getCustomPrecondition();</p>
		<p class="HTMLPreformatted">List&lt;DbmsType&gt; getDbms();</p>
		<p class="HTMLPreformatted">List&lt;ExpectedQuotingStrategyType&gt; getExpectedQuotingStrategy();</p>
		<p class="HTMLPreformatted">List&lt;ForeignKeyConstraintExistsType&gt; getForeignKeyConstraintExists();</p>
		<p class="HTMLPreformatted">FeatureMap getGroup();</p>
		<p class="HTMLPreformatted">List&lt;IndexExistsType&gt; getIndexExists();</p>
		<p class="HTMLPreformatted">List&lt;NotType&gt; getNot();</p>
		<p class="HTMLPreformatted">List&lt;OrType&gt; getOr();</p>
		<p class="HTMLPreformatted">List&lt;PrimaryKeyExistsType&gt; getPrimaryKeyExists();</p>
		<p class="HTMLPreformatted">List&lt;RowCountType&gt; getRowCount();</p>
		<p class="HTMLPreformatted">List&lt;RunningAsType&gt; getRunningAs();</p>
		<p class="HTMLPreformatted">List&lt;SequenceExistsType&gt; getSequenceExists();</p>
		<p class="HTMLPreformatted">List&lt;SqlCheckType&gt; getSqlCheck();</p>
		<p class="HTMLPreformatted">List&lt;TableExistsType&gt; getTableExists();</p>
		<p class="HTMLPreformatted">List&lt;TableIsEmptyType&gt; getTableIsEmpty();</p>
		<p class="HTMLPreformatted">List&lt;ViewExistsType&gt; getViewExists();</p>
		<ul>
			<li>
				<p><strong>AppendType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.AppendType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getValue();</p>
		<ul>
			<li>
				<p><strong>ArgType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ArgType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getValue();</p>
		<ul>
			<li>
				<p><strong>CustomChangeType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.CustomChangeType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">FeatureMap getAnyAttribute();</p>
		<p class="HTMLPreformatted">String getClass_();</p>
		<p class="HTMLPreformatted">List&lt;ParamType1&gt; getParam();</p>
		<ul>
			<li>
				<p><strong>CustomPreconditionType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.CustomPreconditionType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getClassName();</p>
		<p class="HTMLPreformatted">List&lt;ParamType2&gt; getParam();</p>
		<ul>
			<li>
				<p><strong>DbmsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DbmsType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getType();</p>
		<ul>
			<li>
				<p><strong>DeleteType</span> <em>import org.liquibase.xml.ns.dbchangelog.DeleteType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myDeleteType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<p class="HTMLPreformatted">EObject getWhere();</p>
		<p class="HTMLPreformatted">WhereParamsType getWhereParams();</p>
		<ul>
			<li>
				<p><strong>ExecuteCommandType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ExecuteCommandType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">List&lt;ArgType&gt; getArg();</p>
		<p class="HTMLPreformatted">String getExecutable();</p>
		<p class="HTMLPreformatted">String getOs();</p>
		<ul>
			<li>
				<p><strong>ExpectedQuotingStrategyType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ExpectedQuotingStrategyType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getStrategy();</p>
		<ul>
			<li>
				<p><strong>IncludeAllType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.IncludeAllType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">FeatureMap getAnyAttribute();</p>
		<p class="HTMLPreformatted">String getFilter();</p>
		<p class="HTMLPreformatted">String getPath();</p>
		<p class="HTMLPreformatted">Object getRelativeToChangelogFile();</p>
		<ul>
			<li>
				<p><strong>IncludeType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.IncludeType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">FeatureMap getAnyAttribute();</p>
		<p class="HTMLPreformatted">String getFile();</p>
		<p class="HTMLPreformatted">Object getRelativeToChangelogFile();</p>
		<ul>
			<li>
				<p><strong>InsertType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.InsertType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">List&lt;ColumnType&gt; getColumn();</p>
		<p class="HTMLPreformatted">String getDbms();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<ul>
			<li>
				<p><strong>ModifyDataTypeType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ModifyDataTypeType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">String getColumnName();</p>
		<p class="HTMLPreformatted">String getNewDataType();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<ul>
			<li>
				<p><strong>NotType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.NotType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">List&lt;AndType&gt; getAnd();</p>
		<p class="HTMLPreformatted">FeatureMap getAny();</p>
		<p class="HTMLPreformatted">List&lt;ChangeLogPropertyDefinedType&gt; getChangeLogPropertyDefined();</p>
		<p class="HTMLPreformatted">List&lt;ChangeSetExecutedType&gt; getChangeSetExecuted();</p>
		<p class="HTMLPreformatted">List&lt;ColumnExistsType&gt; getColumnExists();</p>
		<p class="HTMLPreformatted">List&lt;CustomPreconditionType&gt; getCustomPrecondition();</p>
		<p class="HTMLPreformatted">List&lt;DbmsType&gt; getDbms();</p>
		<p class="HTMLPreformatted">List&lt;ExpectedQuotingStrategyType&gt; getExpectedQuotingStrategy();</p>
		<p class="HTMLPreformatted">List&lt;ForeignKeyConstraintExistsType&gt; getForeignKeyConstraintExists();</p>
		<p class="HTMLPreformatted">FeatureMap getGroup();</p>
		<p class="HTMLPreformatted">List&lt;IndexExistsType&gt; getIndexExists();</p>
		<p class="HTMLPreformatted">List&lt;NotType&gt; getNot();</p>
		<p class="HTMLPreformatted">List&lt;OrType&gt; getOr();</p>
		<p class="HTMLPreformatted">List&lt;PrimaryKeyExistsType&gt; getPrimaryKeyExists();</p>
		<p class="HTMLPreformatted">List&lt;RowCountType&gt; getRowCount();</p>
		<p class="HTMLPreformatted">List&lt;RunningAsType&gt; getRunningAs();</p>
		<p class="HTMLPreformatted">List&lt;SequenceExistsType&gt; getSequenceExists();</p>
		<p class="HTMLPreformatted">List&lt;SqlCheckType&gt; getSqlCheck();</p>
		<p class="HTMLPreformatted">List&lt;TableExistsType&gt; getTableExists();</p>
		<p class="HTMLPreformatted">List&lt;TableIsEmptyType&gt; getTableIsEmpty();</p>
		<p class="HTMLPreformatted">List&lt;ViewExistsType&gt; getViewExists();</p>
		<ul>
			<li>
				<p><strong>OrType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.OrType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">List&lt;AndType&gt; getAnd();</p>
		<p class="HTMLPreformatted">FeatureMap getAny();</p>
		<p class="HTMLPreformatted">List&lt;ChangeLogPropertyDefinedType&gt; getChangeLogPropertyDefined();</p>
		<p class="HTMLPreformatted">List&lt;ChangeSetExecutedType&gt; getChangeSetExecuted();</p>
		<p class="HTMLPreformatted">List&lt;ColumnExistsType&gt; getColumnExists();</p>
		<p class="HTMLPreformatted">List&lt;CustomPreconditionType&gt; getCustomPrecondition();</p>
		<p class="HTMLPreformatted">List&lt;DbmsType&gt; getDbms();</p>
		<p class="HTMLPreformatted">List&lt;ExpectedQuotingStrategyType&gt; getExpectedQuotingStrategy();</p>
		<p class="HTMLPreformatted">List&lt;ForeignKeyConstraintExistsType&gt; getForeignKeyConstraintExists();</p>
		<p class="HTMLPreformatted">FeatureMap getGroup();</p>
		<p class="HTMLPreformatted">List&lt;IndexExistsType&gt; getIndexExists();</p>
		<p class="HTMLPreformatted">List&lt;NotType&gt; getNot();</p>
		<p class="HTMLPreformatted">List&lt;OrType&gt; getOr();</p>
		<p class="HTMLPreformatted">List&lt;PrimaryKeyExistsType&gt; getPrimaryKeyExists();</p>
		<p class="HTMLPreformatted">List&lt;RowCountType&gt; getRowCount();</p>
		<p class="HTMLPreformatted">List&lt;RunningAsType&gt; getRunningAs();</p>
		<p class="HTMLPreformatted">List&lt;SequenceExistsType&gt; getSequenceExists();</p>
		<p class="HTMLPreformatted">List&lt;SqlCheckType&gt; getSqlCheck();</p>
		<p class="HTMLPreformatted">List&lt;TableExistsType&gt; getTableExists();</p>
		<p class="HTMLPreformatted">List&lt;TableIsEmptyType&gt; getTableIsEmpty();</p>
		<p class="HTMLPreformatted">List&lt;ViewExistsType&gt; getViewExists();</p>
		<ul>
			<li>
				<p><strong>OutputType</span> <em>import org.liquibase.xml.ns.dbchangelog.OutputType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myOutputType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getTarget();</p>
		<ul>
			<li>
				<p><strong>ParamType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ParamType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getName();</p>
		<p class="HTMLPreformatted">String getValue();</p>
		<p class="HTMLPreformatted">String getValueBoolean();</p>
		<p class="HTMLPreformatted">String getValueComputed();</p>
		<p class="HTMLPreformatted">String getValueDate();</p>
		<p class="HTMLPreformatted">String getValueNumeric();</p>
		<p class="HTMLPreformatted">String getValueSequenceCurrent();</p>
		<p class="HTMLPreformatted">String getValueSequenceNext();</p>
		<ul>
			<li>
				<p><strong>PreConditionsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.PreConditionsType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">List&lt;AndType&gt; getAnd();</p>
		<p class="HTMLPreformatted">FeatureMap getAny();</p>
		<p class="HTMLPreformatted">List&lt;ChangeLogPropertyDefinedType&gt; getChangeLogPropertyDefined();</p>
		<p class="HTMLPreformatted">List&lt;ChangeSetExecutedType&gt; getChangeSetExecuted();</p>
		<p class="HTMLPreformatted">List&lt;ColumnExistsType&gt; getColumnExists();</p>
		<p class="HTMLPreformatted">List&lt;CustomPreconditionType&gt; getCustomPrecondition();</p>
		<p class="HTMLPreformatted">List&lt;DbmsType&gt; getDbms();</p>
		<p class="HTMLPreformatted">List&lt;ExpectedQuotingStrategyType&gt; getExpectedQuotingStrategy();</p>
		<p class="HTMLPreformatted">List&lt;ForeignKeyConstraintExistsType&gt; getForeignKeyConstraintExists();</p>
		<p class="HTMLPreformatted">FeatureMap getGroup();</p>
		<p class="HTMLPreformatted">List&lt;IndexExistsType&gt; getIndexExists();</p>
		<p class="HTMLPreformatted">List&lt;NotType&gt; getNot();</p>
		<p class="HTMLPreformatted">OnChangeSetPreconditionErrorOrFail getOnError();</p>
		<p class="HTMLPreformatted">String getOnErrorMessage();</p>
		<p class="HTMLPreformatted">OnChangeSetPreconditionErrorOrFail getOnFail();</p>
		<p class="HTMLPreformatted">String getOnFailMessage();</p>
		<p class="HTMLPreformatted">OnChangeLogPreconditionOnSqlOutput getOnSqlOutput();</p>
		<p class="HTMLPreformatted">List&lt;OrType&gt; getOr();</p>
		<p class="HTMLPreformatted">List&lt;PrimaryKeyExistsType&gt; getPrimaryKeyExists();</p>
		<p class="HTMLPreformatted">List&lt;RowCountType&gt; getRowCount();</p>
		<p class="HTMLPreformatted">List&lt;RunningAsType&gt; getRunningAs();</p>
		<p class="HTMLPreformatted">List&lt;SequenceExistsType&gt; getSequenceExists();</p>
		<p class="HTMLPreformatted">List&lt;SqlCheckType&gt; getSqlCheck();</p>
		<p class="HTMLPreformatted">List&lt;TableExistsType&gt; getTableExists();</p>
		<p class="HTMLPreformatted">List&lt;TableIsEmptyType&gt; getTableIsEmpty();</p>
		<p class="HTMLPreformatted">List&lt;ViewExistsType&gt; getViewExists();</p>
		<p class="HTMLPreformatted">boolean isSetOnError();</p>
		<p class="HTMLPreformatted">boolean isSetOnFail();</p>
		<p class="HTMLPreformatted">boolean isSetOnSqlOutput();</p>
		<ul>
			<li>
				<p><strong>PrependType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.PrependType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getValue();</p>
		<ul>
			<li>
				<p><strong>PropertyType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.PropertyType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getContext();</p>
		<p class="HTMLPreformatted">String getDbms();</p>
		<p class="HTMLPreformatted">String getFile();</p>
		<p class="HTMLPreformatted">String getLabels();</p>
		<p class="HTMLPreformatted">String getName();</p>
		<p class="HTMLPreformatted">String getValue();</p>
		<ul>
			<li>
				<p><strong>RegExpReplaceType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.RegExpReplaceType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getReplace();</p>
		<p class="HTMLPreformatted">String getWith();</p>
		<ul>
			<li>
				<p><strong>ReplaceType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ReplaceType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getReplace();</p>
		<p class="HTMLPreformatted">String getWith();</p>
		<ul>
			<li>
				<p><strong>RowCountType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.RowCountType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">int getExpectedRows();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<p class="HTMLPreformatted">boolean isSetExpectedRows();</p>
		<ul>
			<li>
				<p><strong>RunningAsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.RunningAsType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getUsername();</p>
		<ul>
			<li>
				<p><strong>SqlCheckType</span> <em>import org.liquibase.xml.ns.dbchangelog.SqlCheckType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(mySqlCheckType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getExpectedResult();</p>
		<ul>
			<li>
				<p><strong>StopType</span> <em>import org.liquibase.xml.ns.dbchangelog.StopType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myStopType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p></p>
		<ul>
			<li>
				<p><strong>TagDatabaseType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.TagDatabaseType;</strong></p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getTag();</p>
		<ul>
			<li>
				<p><strong>UpdateType</span> <em>import org.liquibase.xml.ns.dbchangelog.UpdateType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myUpdateType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getCatalogName();</p>
		<p class="HTMLPreformatted">List&lt;ColumnType&gt; getColumn();</p>
		<p class="HTMLPreformatted">String getSchemaName();</p>
		<p class="HTMLPreformatted">String getTableName();</p>
		<p class="HTMLPreformatted">EObject getWhere();</p>
		<p class="HTMLPreformatted">WhereParamsType getWhereParams();</p>
		<ul>
			<li>
				<p><strong>ValidCheckSumType</span> <em>import org.liquibase.xml.ns.dbchangelog.ValidCheckSumType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myValidCheckSumType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p class="HTMLPreformatted">String getComment();</p>
		<ul>
			<li>
				<p><strong>WhereParamsType</span> <em>import org.liquibase.xml.ns.dbchangelog.WhereParamsType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</em> Call the RuleFunctions class static method <span class="Strong">getText(myWhereParamsType);</strong> to get the text associated with this refactoring.</p>
			</li>
		</ul>
		<p class="HTMLPreformatted">List&lt;ParamType&gt; getParam();</p>
	</body>
</html>