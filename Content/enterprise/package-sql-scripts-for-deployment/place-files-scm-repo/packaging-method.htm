<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title>Liquibase Enterprise Documentation</title><meta name="description" content="Liquibase Enterprise Documentation" /></head>
    <body>
        <h1>Choosing a Packaging Method</h1> <MadCap:snippetText src="../../../Resources/Snippets/images/.ver_icon_size_enterprise.flsnp" /><p>You have choices in how to arrange folders in source control and set options for how to process them. This section provides an overview of how to choose one, based on factors</p><ul><li>Size and scope of SQL script</li><li>Frequency of SQL script changes</li><li>Staffing and organizational considerations (specialization)&#160;</li></ul><p>The <strong>packageOrderStrategy</strong>&#160;property introduced in version 5.8 allows you to choose from three ordering strategies (DEFAULT, PACKAGEMETHOD, ALPHANUMERIC).</p><p>See also <a href="custom-packaging-order.htm">Custom Packaging Order</a> for more details on <strong>packageOrderStrategy</strong> and on using the <strong>folderOrder</strong> property in <code>metadata.properties</code>.</p><p>In addition, if packaging order must be specified manually, you can use a manifest file to specify the SQL scripts to package and the order to package them in.</p><h1 id="ChoosingaPackagingMethod-Legacy(DEFAULT)">Legacy (DEFAULT)</h1> <MadCap:snippetText src="../../../Resources/Snippets/images/.ver_icon_size_enterprise.flsnp" /><p>This packaging order is specified by <strong>packageOrderStrategy=DEFAULT</strong>. The legacy ordering is the packaging order within fixed folders that has been used historically in <MadCap:variable name="General.DaticalDB" />. See <a href="fixed-folder-names.htm">Fixed Folder Names</a>.</p><p>Files are processed by the following ordering criteria:</p><ol><li>Commit time - the files in the earliest single commit are processed first, then the files in the next commit, and so on.</li><li>File type - within a commit group, files are processed in a fixed file type sequence</li><li>Filename (alphabetical) - within a file type folder, files are processed in alphabetical order.</li></ol><p>The DEFAULT order works well for a team that writes granular SQL scripts in a Continuous Integration/Continuous Deployment process.</p><ul><li>Scripts are small (one per object is ideal)</li><li>Script changes are committed rapidly over time</li><li>The team delivers sets of changes for release in a short timeframe (weekly, monthly)</li></ul><h1 id="ChoosingaPackagingMethod-BypackageMethodproperty(PACKAGEMETHOD)">By packageMethod property (PACKAGEMETHOD)</h1> <MadCap:snippetText src="../../../Resources/Snippets/images/.ver_icon_size_enterprise.flsnp" /><p>This packaging order is specified by <strong>packageOrderStrategy=PACKAGEMETHOD</strong>. The PACKAGEMETHOD strategy works with&#160;flexible folder names. See <a href="flexible-folder-names.htm">Flexible Folder Names</a>.</p><ul><li>The metadata.properties file is used with folders that you name. It provides the <strong>fileType</strong> and <strong>packageMethod</strong> properties to apply to all scripts in a folder (where the metadata.properties file is placed).</li><li>The team commits SQL scripts less frequently or at irregular intervals.</li><li>There may be separate teams that are in charge of different types of SQL changes: DDL, DML, stored logic.&#160;&#160;</li></ul><h1 id="ChoosingaPackagingMethod-Alphabetically(ALPHANUMERIC)">Alphabetically (ALPHANUMERIC)</h1> <MadCap:snippetText src="../../../Resources/Snippets/images/.ver_icon_size_enterprise.flsnp" /><p>This packaging order is specified by <strong>packageOrderStrategy=ALPHANUMERIC</strong>. When you use this packaging order, all files eligible for packaging are processed in alphabetical order <em>only</em>. The files to process are considered by both folder and filename: <code>&lt;foldername&gt;/&lt;filename&gt;</code>.</p><p>This differs from the default packaging order in important ways:</p><ul><li>Commit time: Commit time does not matter. All files committed since the last packaging run are considered as a single group.</li><li>Folder order: Because folder is considered as part of the filename, the custom fixed folder order is not used. Instead, the folders are processed in alphabetical order.</li><li>Name: folder and filename are considered as one string:&#160;<code>&lt;foldername&gt;/&lt;filename&gt;.&#160;</code></li></ul><h2 id="ChoosingaPackagingMethod-ExampleofALPHANUMERICPackageOrder">Example of ALPHANUMERIC Package Order</h2><p>Consider the following set of files and their commit times:</p><table><tbody><tr><th>Folder/Filename</th><th>Commit Time</th></tr><tr><td><p>ddl/alpha.sql<br />ddl/beta.sql<br /><span style="color: rgb(0,51,102);">ddl_direct/beta2.sql</span><br />sql_direct/eddy.sql<br />sql_direct/epsilon.sql<br />view/delta.sql</p></td><td>21:00</td></tr><tr><td>ddl/barney.sql</td><td>22:00</td></tr></tbody></table><p>The following table shows the packaging order of the sample set of files for the DEFAULT packaging order and the ALPHANUMERIC packaging order.&#160;&#160;</p><table><tbody><tr><th>DEFAULT</th><th>ALPHANUMERIC</th></tr><tr><td><ol><li>ddl/alpha.sql</li><li>ddl/beta.sql</li><li><span style="color: rgb(0,51,102);">ddl_direct/beta2.sql</span></li><li>view/delta.sql</li><li>sql_direct/eddy.sql</li><li>sql_direct/epsilon.sql</li><li>ddl/barney.sql</li></ol></td><td><ol><li>ddl/alpha.sql</li><li>ddl/barney.sql</li><li>ddl/beta.sql</li><li><span style="color: rgb(0,51,102);">ddl_direct/beta2.sql</span></li><li>sql_direct/eddy.sql</li><li>sql_direct/epsilon.sql</li><li>view/delta.sql</li></ol></td></tr><tr><td><p>Notes</p><ul><li>Two commit times: ddl/barney.sql is packaged last</li><li>Fixed folder order: ddl, <span style="color: rgb(255,0,0);"><span style="color: rgb(0,51,102);">ddl_direct</span><span>,</span>&#160;</span>view, sql_direct</li><li>Alphanumeric within each folder</li></ul></td><td><p>Notes</p><ul><li>Commit time is not considered, so ddl/barney.sql is packaged earlier in the sequence</li><li>Folder+filename order is strictly alphabetical, so view/delta.sql is packaged later in the sequence</li></ul></td></tr></tbody></table><p>The ALPHANUMERIC packaging order may be appropriate in the following organizational contexts:</p><ul><li>There are a large number of teams, each with a smaller area of specialization&#160;</li><li>The team commits SQL scripts less frequently or at irregular intervals.</li><li>Teams are organized according to different types of SQL changes: DDL,&#160;DML, individual stored-logic types.&#160;&#160;</li></ul><h1 id="ChoosingaPackagingMethod-FolderOrder">Folder Order</h1> <MadCap:snippetText src="../../../Resources/Snippets/images/.ver_icon_size_enterprise.flsnp" /><p>The <strong>folderOrder</strong> property in the metadata.properties file allows you to specify a set of selected folders in order. Files from these folders are pulled to the front of the list of files for packaging. This method is intended as an extension to be used with the PACKAGEMETHOD and ALPHANUMERIC strategies. See <a href="custom-packaging-order.htm">Custom Packaging Order</a>.</p><ul><li>It must be specified in the metadata.properties file placed in the top of the SQL script hierarchy. The top folder is specified by <strong style="text-align: left;">sqlScmSQLBaseDir&#160;</strong>in <code>deployPackager.properties</code>.</li><li>Examples of how it could be used:<ul><li>DDL can be divided into processing groups in accordance with your organizations specification for dependencies (all tables before indexes, for example).</li><li>DML can be placed in a desired place in the processing order.</li><li>Stored logic can be ordered according to demands of the SQL code base.</li></ul></li></ul><h1 id="ChoosingaPackagingMethod-ManifestFile">Manifest File</h1> <MadCap:snippetText src="../../../Resources/Snippets/images/.ver_icon_size_enterprise.flsnp" /><p>See <a href="packaging-manifest-file.htm">Packaging from a Manifest File</a>.</p><ul><li>Large sets of changes are committed all of a piece (rather than in multiple commits of smaller scripts).</li><li>Changes may be committed at any interval, but typically at longer intervals.</li><li>Due to the size of the changes committed or due to special requirements, commit order must be specified manually.</li></ul></body>
</html>