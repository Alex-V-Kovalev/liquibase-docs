<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
	<head>
		<title>Liquibase Enterprise Documentation</title>
		<meta name="description" content="Liquibase Enterprise Documentation" />
	</head>
	<body>
		<h1>Rollback Script Handling</h1>
		<MadCap:snippetText src="../../../Resources/Snippets/images/.ver_icon_size_enterprise.flsnp" />
		<p><span>If you have provided a custom rollback script for a <strong>non-DDL</strong> SQL script, then you normally do the following:</span></p>
		<ul>
			<li><span>Replace the original script: write a -replace or _replace script.</span></li>
			<li><span>Edit its existing custom rollback script.</span></li>
		</ul>
		<p><span>A non-DDL script is one that is not packaged in the ddl directory.</span></p>
		<p>Do not use a <code>-replace</code>/_replace script for a rollback script (<code>myscript-rollback-replace</code>). Packaging fails with an error if a script using <code>-rollback-replace</code> is found. </p>
		<p>Rollback scripts are always repackaged. When you change them, the version is incremented.</p>
		<p><span>See also <a href="../../move-operations-changes-release-pipeline/roll-back-changes/roll-back-changes.htm" rel="nofollow">Rolling Back Changes</a>.</span></p>
		<h2 id="RollbackScriptHandling-ExampleScripts">Example Scripts</h2>
		<p><span>The following scenarios start with an existing SQL script and a custom rollback script for it.</span></p>
		<ul>
			<li><code><span>myscript.sql</span></code></li>
			<li><code><span>myscript-rollback.sql or myscript_rollback.sql</span></code></li>
		</ul>
		<h2 id="RollbackScriptHandling-ExplicitReplacementofBothFiles">Explicit Replacement of Both Files</h2>
		<p><span>You want to replace the existing script and modify its rollback behavior. Write a replace script for the original script and update its custom rollback script. Package them in the same packaging run.</span></p>
		<ul>
			<li><code><span>myscript-replace.sql or myscript_replace.sql</span></code></li>
			<li><code><span>myscript-rollback.sql or myscript_rollback.sql</span></code></li>
		</ul>
		<h2 id="RollbackScriptHandling-ImplicitUsageofExistingRollbackScript">Implicit Usage of Existing Rollback Script</h2>
		<p><span>You want to replace the existing file but do not want to update its custom rollback script. </span></p>
		<ul>
			<li><code><span>myscript-replace.sql or myscript_replace.sql</span></code></li>
		</ul>
		<p><span>In this case, <code>myscript-rollback.sql or myscript_rollback.sql</code> is replaced and the rollback script is repackaged for use with the replacement script. Its version is incremented.</span></p>
		<h2 id="RollbackScriptHandling-ReplacingOnlyaRollbackScript">Replacing Only a Rollback Script</h2>
		<p><span>You want to replace a rollback script. You can do this at any time, regardless of whether you are replacing the original script.</span></p>
		<ul>
			<li><code><span>myscript-rollback.sql or myscript_rollback.sql</span></code></li>
		</ul>
		<p><span>In this case, edit </span><code>myscript-rollback.sql</code> or myscript_rollback.sql in place. During the packaging run it&#160;<span>is repackaged and its version is incremented.</span></p>
		<h2 id="RollbackScriptHandling-CasesWhereRollbackScriptsAreNotAllowed">Cases Where Rollback Scripts Are Not Allowed</h2>
		<ul>
			<li>Liquibase changelogs. See <a href="../packaging-changelogs.htm">Packaging Liquibase Changelogs</a>.</li>
		</ul>
	</body>
</html>