<?xml version="1.0" encoding="utf-8"?>
<html>
    <head><title></title>
    </head>
    <body>
        <h1>Support for SqlProj?</h1> <MadCap:snippetText src="../../Resources/Snippets/images/.ver_icon_size_enterprise.flsnp" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" /><p><br /></p><p><strong>Question</strong>:&#160;&#160;<span style="color: rgb(23,43,77);">Can <MadCap:variable name="General.CompanyName" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" /> do a schema diff and sync against a versioned sqlproj or do the DDL scripts need to be created manually in all cases? That feeds into my larger question which is what are the recommendations for schema maintenance that would fit the paradigms of the tool?</span></p><p><span style="color: rgb(23,43,77);"><strong>Answer</strong>:&#160;&#160;</span> <span style="color: rgb(23,43,77);">I'm not quite sure what you're trying to accomplish. Are you trying to bring the current state of a DB into <MadCap:variable name="General.CompanyName" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" /> (basically transform your DB into changesets)?&#160;</span>Or are you worried about actions happening outside &lt;MadCap:variable name="General.DaticalDB" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" /&gt; and mixing with <MadCap:variable name="General.CompanyName" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" /> changesets (a big no-no usually)?</p><p style="margin-left: 30.0px;"><strong>Question</strong>:&#160;&#160;So the thought is that there would still be a source of truth for what a clean schema would look like. My understanding of <MadCap:variable name="General.CompanyName" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" /> is that it primarily works with change scripts, and from everyone I've spoken to it seems to only work with change scripts. This means that over time the idea of a clean schema gets lost because we're essentially working against points in time and would need to find some clean starting point and replay to get a clean scheme.</p><p style="margin-left: 30.0px;">Alternatively, does <MadCap:variable name="General.CompanyName" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" /> manage this for us? If I wanted a clean deploy of a given database, can <MadCap:variable name="General.CompanyName" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" /> take the historical changes and deploy a clean schema to a new instance for me? How could I use it to manage things that are normally managed in SqlProj's like reference data?</p><p style="margin-left: 30.0px;">The historical use cases I have for this are transient local developer testing, different types of automated integration testing where we don't want to maintain a consistent instance of a database, and new environment creation where we don't want to clone an existing one.</p><p style="margin-left: 30.0px;"><strong>Answer</strong>:&#160;&#160;You have different ways to deal with this:</p><ul><li><p>Some customers use systems like Delphix to set up their lower environment databases from the upper ones, then simply deploy the changesets managed by <MadCap:variable name="General.CompanyName" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" />.</p></li><li><p>The other solution as you mentioned is to use the "Baseline" option when you create a new project and Ref DB. This will convert your whole DB into changesets that will allow you to redeploy from scratch in the future. Depending on the size of your DB, this could be a little slow. It will also create a lot of changesets that have not real utility except in your scenario. My experience has been that we have not used this option a lot recently.</p></li></ul></body>
</html>