<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title>Liquibase Enterprise Documentation</title><meta name="description" content="Liquibase Enterprise Documentation" /></head>
    <body>
        <h1>Assembling Data for <MadCap:variable name="General.CompanyName" /> Support</h1> <MadCap:snippetText src="../../Resources/Snippets/images/.ver_icon_size_enterprise.flsnp" /><h1 id="AssemblingDataforDatical/LiquibaseSupport-&quot;Scrub&quot;SensitiveDatafromyourFilesbeforesendingthemtoDatical/LiquibaseSupport">"Scrub" Sensitive Data from your Files before sending them to Liquibase Support</h1> <MadCap:snippetText src="../../Resources/Snippets/images/.ver_icon_size_enterprise.flsnp" /><p><MadCap:variable name="General.DaticalDB" /> customers: Providing your log files, project files, changelogs, and html reports can help our support team diagnose and resolve an issue more quickly. However, some of your files may contain sensitive information.</p><p>For <MadCap:variable name="General.DaticalDB" /> versions 5.9 and higher, you can use the&#160;<code>hammer debug export</code> command to "scrub" sensitive information such as hosts, ports, and credentials from your files before sending them to our support team. The&#160;<code>hammer debug export</code> command will create a new zip file in your&#160;<span style="color: rgb(34,34,34);">&lt;ProjectName&gt;/Reports/debug directory that contains the files you specify to include. The files in the zip will have the actual values for hosts, ports, usernames and password hashes (password hashes are only relevant if you use the less secure Stored Credentials option) replaced by the scrubber with more generic strings (tokens). This is to avoid emailing files that contain the actual values as they may be sensitive information.</span></p><p>The <code>hammer debug export</code> command provides a simple way to archive the needed files into a zip file that you then send to our support team:</p><ul style="list-style-type: square;"><li>You can specify which files to include in the zip.</li><li>The command must be run from the command line (not from <MadCap:variable name="General.DMCProductShortName" />).</li><li>The "scrubber" will only handle files that are located somewhere within your&#160;<span style="color: rgb(34,34,34);">&lt;ProjectName&gt; directory structure for that project. If there are relevant files located outside of the project's directory structure (for example the daticaldb.log file for operations performed in the <MadCap:variable name="General.DMCProductShortName" />), you can copy that log into the project directory structure prior to running the hammer debug export command.</span></li><li><span style="color: rgb(34,34,34);">You can add a new step near the end of your automation jobs so that the&#160;<code>hammer debug export</code> command creates the zip of "scrubbed" files automatically for each job.</span></li></ul><h2 id="AssemblingDataforDatical/LiquibaseSupport-Command:hammerdebugexport">Command: hammer debug export</h2><p>The command creates a zip file of files in a project directory to send to <MadCap:variable name="General.CompanyName" /> Support or for your teams to see more details about a particular operation.</p><p>Options provide control over what files are included in the zip. The files are "scrubbed" to remove certain sensitive data by default.</p><h3 id="AssemblingDataforDatical/LiquibaseSupport-ProjectDirectory">Project Directory</h3><p>The project directory is the source of all files needed.</p><p class="title">Important</p><p>Run the command in the root of the project directory.</p><h3 id="AssemblingDataforDatical/LiquibaseSupport-OutputLocation">Output Location</h3><p>By default the command zips the files and places the zip archive file in the project directory:</p><pre class="syntaxhighlighter-pre" xml:space="preserve">&lt;ProjectName&gt;/Reports/debug/&lt;project&gt;.zip</pre><p>Use the --report option to specify a different file name and/or location.</p><h3 id="AssemblingDataforDatical/LiquibaseSupport-WhichsensitivedataisScrubbed/Replaced/Redacted">Which sensitive data is Scrubbed/Replaced/Redacted</h3><p>By default, the <code>hammer debug export</code> command ensures that sensitive information is redacted. Values are replaced with tokens. Each token is a more generic string that uniquely replaces the actual values for a particular item of information.</p><p>The following information is redacted by default:</p><ul><li>hostname or IP address</li><li>port</li><li>database names<ul><li>Oracle: service name, TNS name, SID</li><li>Other database: database name</li></ul></li><li>user names</li><li>passwords (the encoded "password hashes" in the datical.project file, IF you use the less secure Stored Credentials option with <MadCap:variable name="General.DaticalDB" />)</li></ul><p>Use the <code>--scrub=false</code>&#160;option if you do not want to have these values replaced with tokens.</p><h3 id="AssemblingDataforDatical/LiquibaseSupport-IncludingandExcludingFiles">Including and Excluding Files</h3><p>Include&#160;(–include) or exclude&#160;(–exclude) files. The value for either option is a search string. All files with names and/or extensions that match the string search are included. </p><p>All files must be in the project file hierarchy. If you want to add a file from outside the project, copy it to the file hierarchy. Place it in the root &lt;<span style="color: rgb(34,34,34);">ProjectName</span>&gt; directory, or in the &lt;<span style="color: rgb(34,34,34);">ProjectName</span>&gt;/Log subdirectory, or other subdirectory. </p><h3 id="AssemblingDataforDatical/LiquibaseSupport-IncludingFilesbyLastModifiedDate">Including Files by Last Modified Date</h3><p>You can include only files modified within a specified number of hours. This is optional.</p><p>Use the --lastmodified option to specify a number of hours. All files are included that have a last modified date within the number of hours measured from the time the command is run.</p><h3 id="AssemblingDataforDatical/LiquibaseSupport-IncludingNon-ProjectFiles">Including Non-Project Files</h3><p>If <MadCap:variable name="General.CompanyName" /> Support asks you to include files that are not already part of the <MadCap:variable name="General.LBEnterprise" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" />project directory, you must place them in the project directory structure before running the hammer debug export command:</p><ul><li>If you were running an operation in the <MadCap:variable name="General.DMCProductShortName" /> and got an error, that error would be logged in the daticaldb.log file in your <MadCap:variable name="General.DaticalDB" /> installation directory (such as "DaticalDB" or "DaticalDB_6.12"). In that scenario you would need to copy the log file from your installation directory to your project directory structure prior to running the hammer debug export "scrubber" command.</li><li>If you use automation software like Jenkins to run packager or deploys, <MadCap:variable name="General.CompanyName" /> Support may ask you for the packager.log or daticaldb.log from the automation job. You must copy them into your local project directory before running the hammer debug export command. To avoid needing to do this, you can add a step near the end of your automation jobs to run the hammer debug export command so the zip of scrubbed files will automatically be created for each job.</li></ul><h3 id="AssemblingDataforDatical/LiquibaseSupport-Othercommandoptions">Other command options</h3><p>All of the hammer debug export command options are shown here:&#160;<a href="../cli-commands/cli-commands.htm">CLI Commands#debugexport</a></p><h2 id="AssemblingDataforDatical/LiquibaseSupport-CommonUseCaseScenarios">Common Use Case Scenarios</h2><p><MadCap:variable name="General.DaticalDB" /> has found patterns in customer needs, customer security policies, and requirements for files to fully diagnose a problem. Here are some example scenarios:</p><ul><li>Standard for Problem Diagnosis - provide the standard files most commonly used for troubleshooting</li><li>Default - if no command options are specified, the command will copy all of the files in the project directory into the debug zip file</li><li>Exclude DML Files - provide all files except DML files. Security policy may determine whether you are allowed to share DML files. DML files may contain sensitive information about people and accounts.</li></ul><h3 id="AssemblingDataforDatical/LiquibaseSupport-StandardforProblemDiagnosis">Standard for Problem Diagnosis</h3><p>Scrub and provide the standard information required for <MadCap:variable name="General.CompanyName" /> Support to start diagnosing a problem.</p><ul><li>datical.project - definition of the project, contains connection information&#160;(includes encoded "password hashes" IF you use the less secure Stored Credentials option <MadCap:variable name="General.DaticalDB" />)</li><li>changelog.xml - the changelog lists all of the change sets</li><li>daticaldb.log - main <MadCap:variable name="General.DaticalDB" /> log (use an asterisk where a date may be within the filename, daticaldb*.log)</li><li>packager.log - log from running the Deployment Packager</li><li>html reports - forecastReport.html, deployReport.html, packagerReport.html (use an asterisk to wildcard all html reports, *.html)</li></ul><h4 id="AssemblingDataforDatical/LiquibaseSupport-ExampleofStandard">Example of Standard</h4><pre class="syntaxhighlighter-pre" xml:space="preserve">hammer debug export --include=datical.project,changelog.xml,daticaldb*.log,packager.log,*.html</pre><h3 id="AssemblingDataforDatical/LiquibaseSupport-Using--report">Using --report</h3><p>You can use the --report option to specify the alternative path and/or filename for the zip archive produced by this command. This is optional. </p><h4 id="AssemblingDataforDatical/LiquibaseSupport-Exampleof--reporttogotoafoldercalledtmp">Example of --report to go to a folder called tmp</h4><pre class="syntaxhighlighter-pre" xml:space="preserve">hammer debug export --include="datical.project,changelog.xml,daticaldb*.log,*.html,deployPackager.properties,packager.log" --report=/tmp</pre><p>If you already use a BUILD_NUMBER variable in your automation configuration, you could include the build number as part of the filename of the zip file created by the hammer debug export command.</p><h4 id="AssemblingDataforDatical/LiquibaseSupport-Exampleof--reportwithBUILD_NUMBER">Example of --report with BUILD_NUMBER</h4><pre class="syntaxhighlighter-pre" xml:space="preserve">hammer debug export --include="datical.project,changelog.xml,daticaldb*.log,*.html,deployPackager.properties,packager.log" --report=scrubbed_debug_files_${BUILD_NUMBER}.zip</pre><h3 id="AssemblingDataforDatical/LiquibaseSupport-Default(nocommandoptionsspecified)">Default (no command options specified)</h3><p>Include and scrub all files in the project directory. The zip created may be quite large because it would include all of the sql scripts and all other files.</p><h4 id="AssemblingDataforDatical/LiquibaseSupport-ExampleofDefault">Example of Default</h4><pre class="syntaxhighlighter-pre" xml:space="preserve">hammer debug export</pre><h3 id="AssemblingDataforDatical/LiquibaseSupport-ExcludeDML">Exclude DML</h3><p>Scrub and include almost all of the files from the project directory structure, except html reports and DML files in the Resources folders. (Note that this example is from a single schema project. The Resources paths may be different for multi-schema projects.)</p><h4 id="AssemblingDataforDatical/LiquibaseSupport-ExampleofExcludingDML">Example of Excluding DML</h4><pre class="syntaxhighlighter-pre" xml:space="preserve">hammer debug export --exclude=*.html,Resources/sql,Resources/sql_scripts</pre><p><strong>PATH</strong></p><p>If you are running the hammer debug export command from within your project directory and there is an error that hammer is not found, you may need to add your repl folder to your path. For example:</p><p>C:\Users\John\DaticalDB_6.15\repl</p></body>
</html>