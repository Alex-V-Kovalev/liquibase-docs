<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" xml:lang="en-us">
    <head><title></title>
        <link href="../../../../../Resources/Stylesheets/Data+Models+for+Rules.css" rel="stylesheet" />
    </head>
    <body>
        <h1 class="Heading1">Rule Packages</h1> <MadCap:snippetText src="../../../../../Resources/Snippets/images/.ver_icon_size_enterprise.flsnp" /><p>Package names are used to define a namespace for your rules. Even though rules are in different files, using the same package name puts them in the same namespace.</p><p>Initially, this gives you a way to group similar rules together. These groupings are available in the <MadCap:variable name="General.DaticalDB" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" /> rule package explorer to easily view groups of rules and find specific rules to work on.</p><p>Suggested methods to package rules:</p><p><span class="HTMLCode_1">package </span><span class="Emphasis_2">&lt;company&gt;.rules.&lt;rule execution phase&gt;</span></p><p><span class="HTMLCode_1">package </span><span class="Emphasis_2">&lt;company&gt;.rules.&lt;rule execution phase&gt;.&lt;rule goal&gt;.&lt;rule db object&gt;</span></p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">&lt;company&gt;:</span> com.datical, com.americanexpress, com.wellsfargo, etc.</p></li><li class="li_1"><p class="p_1"><span class="Strong">&lt;rule execution phase&gt;:</span> PreForecast, Forecast, or PostForecast</p></li><li class="li_1"><p class="p_1"><span class="Strong">&lt;rule goal&gt;:</span> Access Control, Dependency Validation, Data Safety, <br />Corporate Standards, Audit and Compliance,</p></li><li class="li_1"><p class="p_1"><span class="Strong">&lt;rule db object&gt;:</span> group the rules by the primary object type we're writing the rule <br />about (Table, Column, Index, StoredProcedure, Trigger, etc)</p></li></ul><p class="title">Avoid Duplicate Function Naming in Rule Packages</p><p>If custom functions are included in Rule definitions signatures for those functions should be unique to avoid overloading. A function's signature is derived from a function's name, argument and return type. Overloading functions can result in the wrong function being used when a rule is executed which could, in turn, negatively affect the outcome.&#160; Examples of matching and non-matching signatures are provided below.</p><h3 class="Heading3">Matching Function Signature Example</h3><p class="HTMLPreformatted">function boolean containsSuspectString(String sql){...}</p><p class="HTMLPreformatted">function boolean containsSuspectString(String sql){...}</p><h3 class="Heading3">Unique Function Signature Examples</h3><p class="HTMLPreformatted"># Unique Return Types</p><p class="HTMLPreformatted">function boolean containsSuspectString(String sql){...}</p><p class="HTMLPreformatted">function char containsSuspectString(String sql){...}</p><p class="HTMLPreformatted">&#160;</p><p class="HTMLPreformatted"># Unique Names</p><p class="HTMLPreformatted">function boolean containsSuspectString(String sql){...}</p><p class="HTMLPreformatted">function boolean hasSuspectString(String sql){...}</p><p class="HTMLPreformatted">&#160;</p><p class="HTMLPreformatted"># Unique Arguments</p><p class="HTMLPreformatted">function boolean containsSuspectString(String sql){...}</p><p class="HTMLPreformatted">function boolean containsSuspectString(Char[] sql){...}</p><p class="HTMLPreformatted">&#160;</p><h3 class="Heading3">Using Shared Functions Across Multiple Rules</h3><p class="auto-cursor-target">If you want to use the same functions in multiple rule files in a package, you can include the functions in a single file and import them as needed into your rules.</p><p class="auto-cursor-target">Suggested method to package utility functions:&#160;</p><p><span class="HTMLCode_1">package </span><span class="Emphasis_2">&lt;company&gt;.rules.utilities</span></p><p>&#160;</p></body>
</html>