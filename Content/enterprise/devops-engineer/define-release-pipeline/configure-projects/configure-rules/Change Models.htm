<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" xml:lang="en-us">
    <head><title></title>
        <link href="../../../../../Resources/Stylesheets/Data+Models+for+Rules.css" rel="stylesheet" />
    </head>
    <body>
        <h1 class="Heading1">Change Models</h1> <MadCap:snippetText src="../../../../../Resources/Snippets/images/.ver_icon_size_enterprise.flsnp" /><h2 class="Heading2">All Change Models</h2><p class="HTMLPreformatted">Boolean supportsRollback()</p><ul class="ul_3"><li class="li_1"><p class="p_1">Returns a Boolean indicating that a change model supports auto-rollback (or not)</p></li></ul><h2 class="Heading2">Auto Increment</h2><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">AddAutoIncrementType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.AddAutoIncrementType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getColumnDataType();</p><p class="HTMLPreformatted">String getColumnName();</p><p class="HTMLPreformatted">long getIncrementBy();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">long getStartWith();</p><p class="HTMLPreformatted">String getTableName();</p><p class="HTMLPreformatted">boolean isSetIncrementBy();</p><p class="HTMLPreformatted">boolean isSetStartWith();</p><h2 class="Heading2">Columns</h2><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">AddColumnType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.AddColumnType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">List&lt;ColumnAddColumnType&gt; getColumn();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">ColumnAddColumnType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ColumnAddColumnType;</span></p></li></ul><p class="HTMLPreformatted">String getAfterColumn();</p><p class="HTMLPreformatted">String getBeforeColumn();</p><p class="HTMLPreformatted">BigInteger getPosition();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">ColumnBaseType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ColumnBaseType;</span><span class="Emphasis"><br /></span><span class="Emphasis">Note: Call the RuleFunctions class static method getText(myColumnBaseType); to get the text associated with this refactoring. </span></p></li></ul><p class="HTMLPreformatted">Object getAutoIncrement();</p><p class="HTMLPreformatted">ConstraintsType getConstraints();</p><p class="HTMLPreformatted">String getDefaultValue();</p><p class="HTMLPreformatted">Object getDefaultValueBoolean();</p><p class="HTMLPreformatted">String getDefaultValueComputed();</p><p class="HTMLPreformatted">String getDefaultValueDate();</p><p class="HTMLPreformatted">String getDefaultValueNumeric();</p><p class="HTMLPreformatted">String getDefaultValueSequenceCurrent();</p><p class="HTMLPreformatted">String getDefaultValueSequenceNext();</p><p class="HTMLPreformatted">String getEncoding();</p><p class="HTMLPreformatted">long getIncrementBy();</p><p class="HTMLPreformatted">String getName();</p><p class="HTMLPreformatted">String getRemarks();</p><p class="HTMLPreformatted">long getStartWith();</p><p class="HTMLPreformatted">String getType();</p><p class="HTMLPreformatted">String getValue();</p><p class="HTMLPreformatted">String getValueBlobFile();</p><p class="HTMLPreformatted">String getValueBoolean();</p><p class="HTMLPreformatted">String getValueClobFile();</p><p class="HTMLPreformatted">String getValueComputed();</p><p class="HTMLPreformatted">String getValueDate();</p><p class="HTMLPreformatted">String getValueNumeric();</p><p class="HTMLPreformatted">String getValueSequenceCurrent();</p><p class="HTMLPreformatted">String getValueSequenceNext();</p><p class="HTMLPreformatted">boolean isSetIncrementBy();</p><p class="HTMLPreformatted">boolean isSetStartWith();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">ColumnExistsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ColumnExistsType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getColumnName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">ColumnLoadDataType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ColumnLoadDataType;</span></p></li></ul><p class="HTMLPreformatted">String getDefaultValue();</p><p class="HTMLPreformatted">Object getDefaultValueBoolean();</p><p class="HTMLPreformatted">String getDefaultValueComputed();</p><p class="HTMLPreformatted">String getDefaultValueDate();</p><p class="HTMLPreformatted">String getDefaultValueNumeric();</p><p class="HTMLPreformatted">String getHeader();</p><p class="HTMLPreformatted">Object getIndex();</p><p class="HTMLPreformatted">String getName();</p><p class="HTMLPreformatted">String getType();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">ColumnLoadUpdateDataType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ColumnLoadUpdateDataType;</span></p></li></ul><p class="HTMLPreformatted">String getDefaultValue();</p><p class="HTMLPreformatted">Object getDefaultValueBoolean();</p><p class="HTMLPreformatted">String getDefaultValueComputed();</p><p class="HTMLPreformatted">String getDefaultValueDate();</p><p class="HTMLPreformatted">String getDefaultValueNumeric();</p><p class="HTMLPreformatted">String getHeader();</p><p class="HTMLPreformatted">Object getIndex();</p><p class="HTMLPreformatted">String getName();</p><p class="HTMLPreformatted">String getType();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">ColumnType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ColumnType;</span><span class="Emphasis"><br /></span><span class="Emphasis">Note: Call the RuleFunctions class static method getText(myColumnType); to get the text associated with this refactoring.</span></p></li></ul><p class="HTMLPreformatted">Object getAutoIncrement();</p><p class="HTMLPreformatted">Object getComputed();</p><p class="HTMLPreformatted">ConstraintsType getConstraints();</p><p class="HTMLPreformatted">String getDefaultValue();</p><p class="HTMLPreformatted">Object getDefaultValueBoolean();</p><p class="HTMLPreformatted">String getDefaultValueComputed();</p><p class="HTMLPreformatted">String getDefaultValueDate();</p><p class="HTMLPreformatted">String getDefaultValueNumeric();</p><p class="HTMLPreformatted">String getDefaultValueSequenceCurrent();</p><p class="HTMLPreformatted">String getDefaultValueSequenceNext();</p><p class="HTMLPreformatted">String getEncoding();</p><p class="HTMLPreformatted">long getIncrementBy();</p><p class="HTMLPreformatted">String getName();</p><p class="HTMLPreformatted">String getRemarks();</p><p class="HTMLPreformatted">long getStartWith();</p><p class="HTMLPreformatted">String getType();</p><p class="HTMLPreformatted">String getValue();</p><p class="HTMLPreformatted">String getValueBlobFile();</p><p class="HTMLPreformatted">String getValueBoolean();</p><p class="HTMLPreformatted">String getValueClobFile();</p><p class="HTMLPreformatted">String getValueComputed();</p><p class="HTMLPreformatted">String getValueDate();</p><p class="HTMLPreformatted">String getValueNumeric();</p><p class="HTMLPreformatted">String getValueSequenceCurrent();</p><p class="HTMLPreformatted">String getValueSequenceNext();</p><p class="HTMLPreformatted">boolean isSetIncrementBy();</p><p class="HTMLPreformatted">boolean isSetStartWith();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">DropColumnType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropColumnType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getColumnName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">MergeColumnsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.MergeColumnsType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getColumn1Name();</p><p class="HTMLPreformatted">String getColumn2Name();</p><p class="HTMLPreformatted">String getFinalColumnName();</p><p class="HTMLPreformatted">String getFinalColumnType();</p><p class="HTMLPreformatted">String getJoinString();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">RenameColumnType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.RenameColumnType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getColumnDataType();</p><p class="HTMLPreformatted">String getNewColumnName();</p><p class="HTMLPreformatted">String getOldColumnName();</p><p class="HTMLPreformatted">String getRemarks();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><h2 class="Heading2">Constraints</h2><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">ConstraintsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ConstraintsType;</span></p></li></ul><p class="HTMLPreformatted">String getCheckConstraint();</p><p class="HTMLPreformatted">Object getDeferrable();</p><p class="HTMLPreformatted">Object getDeleteCascade();</p><p class="HTMLPreformatted">String getForeignKeyName();</p><p class="HTMLPreformatted">Object getInitiallyDeferred();</p><p class="HTMLPreformatted">Object getNullable();</p><p class="HTMLPreformatted">Object getPrimaryKey();</p><p class="HTMLPreformatted">String getPrimaryKeyName();</p><p class="HTMLPreformatted">String getPrimaryKeyTablespace();</p><p class="HTMLPreformatted">String getReferencedColumnNames();</p><p class="HTMLPreformatted">String getReferencedTableName();</p><p class="HTMLPreformatted">String getReferences();</p><p class="HTMLPreformatted">Object getUnique();</p><p class="HTMLPreformatted">String getUniqueConstraintName();</p><h3 class="Heading3">Check Constraints</h3><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">AddCheckConstraintType</span> <span class="Emphasis">import com.datical.xml.ns.storedlogic.AddCheckConstraintType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myAddCheckConstraintType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p>&#160;</p><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getConstraintName();</p><p class="HTMLPreformatted">Boolean getDisabled();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><p class="HTMLPreformatted">String getXmlns();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">DisableCheckConstraintType</span> <span class="Emphasis">import com.datical.xml.ns.storedlogic.DisableCheckConstraintType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myDisableCheckConstraintType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getConstraintName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><p class="HTMLPreformatted">String getXmlns();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">DropCheckConstraintType</span> <span class="Emphasis">import com.datical.xml.ns.storedlogic.DropCheckConstraintType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getConstraintName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><p class="HTMLPreformatted">String getXmlns();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">EnableCheckConstraintType</span> <span class="Emphasis">import com.datical.xml.ns.storedlogic.EnableCheckConstraintType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myEnableCheckConstraintType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getConstraintName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><p class="HTMLPreformatted">String getXmlns();</p><h3 class="Heading3">Foreign Key Constraints</h3><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">AddForeignKeyConstraintType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.AddForeignKeyConstraintType;</span></p></li></ul><p class="HTMLPreformatted">String getBaseColumnNames();</p><p class="HTMLPreformatted">String getBaseTableCatalogName();</p><p class="HTMLPreformatted">String getBaseTableName();</p><p class="HTMLPreformatted">String getBaseTableSchemaName();</p><p class="HTMLPreformatted">String getConstraintName();</p><p class="HTMLPreformatted">Object getDeferrable();</p><p class="HTMLPreformatted">Object getDeleteCascade();</p><p class="HTMLPreformatted">Object getInitiallyDeferred();</p><p class="HTMLPreformatted">FkCascadeActionOptions getOnDelete();</p><p class="HTMLPreformatted">FkCascadeActionOptions getOnUpdate();</p><p class="HTMLPreformatted">String getReferencedColumnNames();</p><p class="HTMLPreformatted">String getReferencedTableCatalogName();</p><p class="HTMLPreformatted">String getReferencedTableName();</p><p class="HTMLPreformatted">String getReferencedTableSchemaName();</p><p class="HTMLPreformatted">Object getReferencesUniqueColumn();</p><p class="HTMLPreformatted">boolean isSetOnDelete();</p><p class="HTMLPreformatted">boolean isSetOnUpdate();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">DropAllForeignKeyConstraintsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropAllForeignKeyConstraintsType;</span></p></li></ul><p class="HTMLPreformatted">String getBaseTableCatalogName();</p><p class="HTMLPreformatted">String getBaseTableName();</p><p class="HTMLPreformatted">String getBaseTableSchemaName();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">DropForeignKeyConstraintType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropForeignKeyConstraintType;</span></p></li></ul><p class="HTMLPreformatted">String getBaseTableCatalogName();</p><p class="HTMLPreformatted">String getBaseTableName();</p><p class="HTMLPreformatted">String getBaseTableSchemaName();</p><p class="HTMLPreformatted">String getConstraintName();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">ForeignKeyConstraintExistsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ForeignKeyConstraintExistsType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getForeignKeyName();</p><p class="HTMLPreformatted">String getForeignKeyTableName();</p><p class="HTMLPreformatted">String getSchemaName();</p><h3 class="Heading3">Not Null Constraints</h3><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">AddNotNullConstraintType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.AddNotNullConstraintType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getColumnDataType();</p><p class="HTMLPreformatted">String getColumnName();</p><p class="HTMLPreformatted">String getDefaultNullValue();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">DropNotNullConstraintType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropNotNullConstraintType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getColumnDataType();</p><p class="HTMLPreformatted">String getColumnName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><h3 class="Heading3">Unique Constraints</h3><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">AddUniqueConstraintType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.AddUniqueConstraintType;</span></p></li></ul><p>&#160;</p><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getColumnNames();</p><p class="HTMLPreformatted">String getConstraintName();</p><p class="HTMLPreformatted">Object getDeferrable();</p><p class="HTMLPreformatted">Object getDisabled();</p><p class="HTMLPreformatted">Object getInitiallyDeferred();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><p class="HTMLPreformatted">String getTablespace();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">DropUniqueConstraintType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropUniqueConstraintType;</span></p></li></ul><p>&#160;</p><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getConstraintName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><p class="HTMLPreformatted">String getUniqueColumns();</p><h2 class="Heading2">Default Values</h2><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">AddDefaultValueType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.AddDefaultValueType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getColumnDataType();</p><p class="HTMLPreformatted">String getColumnName();</p><p class="HTMLPreformatted">String getDefaultValue();</p><p class="HTMLPreformatted">String getDefaultValueBoolean();</p><p class="HTMLPreformatted">String getDefaultValueComputed();</p><p class="HTMLPreformatted">String getDefaultValueDate();</p><p class="HTMLPreformatted">String getDefaultValueNumeric();</p><p class="HTMLPreformatted">String getDefaultValueSequenceNext();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">DropDefaultValueType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropDefaultValueType;</span></p></li></ul><p>&#160;</p><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getColumnDataType();</p><p class="HTMLPreformatted">String getColumnName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><h2 class="Heading2">Functions</h2><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">CreateFunctionType</span> <span class="Emphasis">import com.datical.xml.ns.storedlogic.CreateFunctionType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myCreateFunctionType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getDbms();</p><p class="HTMLPreformatted">String getEncoding();</p><p class="HTMLPreformatted">String getFunctionName();</p><p class="HTMLPreformatted">String getPath();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getXmlns();</p><p class="HTMLPreformatted">boolean isSetRelativeToChangelogFile();</p><p class="HTMLPreformatted">boolean isSetReplaceIfExists();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">DropFunctionType</span> <span class="Emphasis">import com.datical.xml.ns.storedlogic.DropFunctionType;</span></p></li></ul><p>&#160;</p><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getFunctionName();</p><p class="HTMLPreformatted">String getSchemaName();</p><h2 class="Heading2">Indices</h2><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">CreateIndexType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.CreateIndexType;</span></p></li></ul><p class="HTMLPreformatted">String getAssociatedWith();</p><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">Object getClustered();</p><p class="HTMLPreformatted">List&lt;ColumnType&gt; getColumn();</p><p class="HTMLPreformatted">String getIndexName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">StorageOptionsType getStorageOptions();</p><p class="HTMLPreformatted">String getTableName();</p><p class="HTMLPreformatted">String getTablespace();</p><p class="HTMLPreformatted">Object getUnique();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">DropIndexType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropIndexType;</span></p></li></ul><p class="HTMLPreformatted">String getAssociatedWith();</p><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getIndexName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">IndexExistsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.IndexExistsType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getColumnNames();</p><p class="HTMLPreformatted">String getIndexName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><h2 class="Heading2">Packages</h2><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">CreatePackageBodyType</span> <span class="Emphasis">import com.datical.xml.ns.storedlogic.CreatePackageBodyType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myCreatePackageBodyType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getDbms();</p><p class="HTMLPreformatted">String getEncoding();</p><p class="HTMLPreformatted">String getPackageBodyName();</p><p class="HTMLPreformatted">String getPath();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">boolean isSetRelativeToChangelogFile();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">CreatePackageType</span> <span class="Emphasis">import com.datical.xml.ns.storedlogic.CreatePackageType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myCreatePackageType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getDbms();</p><p class="HTMLPreformatted">String getEncoding();</p><p class="HTMLPreformatted">String getPackageName();</p><p class="HTMLPreformatted">String getPath();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">boolean isSetRelativeToChangelogFile();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">DropPackageBodyType</span> <span class="Emphasis">import com.datical.xml.ns.storedlogic.DropPackageBodyType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getPackageBodyName();</p><p class="HTMLPreformatted">String getSchemaName();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">DropPackageType</span> <span class="Emphasis">import com.datical.xml.ns.storedlogic.DropPackageType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getPackageName();</p><p class="HTMLPreformatted">String getSchemaName();</p><h2 class="Heading2">Primary Keys</h2><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">AddPrimaryKeyType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.AddPrimaryKeyType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getColumnNames();</p><p class="HTMLPreformatted">String getConstraintName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><p class="HTMLPreformatted">String getTablespace();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">DropPrimaryKeyType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropPrimaryKeyType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getConstraintName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">PrimaryKeyExistsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.PrimaryKeyExistsType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getPrimaryKeyName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><h2 class="Heading2">Procedures</h2><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">CreateProcedureType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.CreateProcedureType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myCreateProcedureType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getComment();</p><p class="HTMLPreformatted">String getDbms();</p><p class="HTMLPreformatted">String getEncoding();</p><p class="HTMLPreformatted">String getPath();</p><p class="HTMLPreformatted">String getProcedureName();</p><p class="HTMLPreformatted">Object getRelativeToChangelogFile();</p><p class="HTMLPreformatted">Object getReplaceIfExists();</p><p class="HTMLPreformatted">String getSchemaName();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">DropProcedureType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropProcedureType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getProcedureName();</p><p class="HTMLPreformatted">String getSchemaName();</p><h2 class="Heading2">Rollback</h2><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">RollbackType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.RollbackType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myRollbackType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p class="HTMLPreformatted">List&lt;AddAutoIncrementType&gt; getAddAutoIncrement();</p><p class="HTMLPreformatted">List&lt;AddColumnType&gt; getAddColumn();</p><p class="HTMLPreformatted">List&lt;AddDefaultValueType&gt; getAddDefaultValue();</p><p class="HTMLPreformatted">List&lt;AddForeignKeyConstraintType&gt; getAddForeignKeyConstraint();</p><p class="HTMLPreformatted">List&lt;AddLookupTableType&gt; getAddLookupTable();</p><p class="HTMLPreformatted">List&lt;AddNotNullConstraintType&gt; getAddNotNullConstraint();</p><p class="HTMLPreformatted">List&lt;AddPrimaryKeyType&gt; getAddPrimaryKey();</p><p class="HTMLPreformatted">List&lt;AddUniqueConstraintType&gt; getAddUniqueConstraint();</p><p class="HTMLPreformatted">List&lt;AlterSequenceType&gt; getAlterSequence();</p><p class="HTMLPreformatted">FeatureMap getAny();</p><p class="HTMLPreformatted">String getChangeSetAuthor();</p><p class="HTMLPreformatted">FeatureMap getChangeSetChildren();</p><p class="HTMLPreformatted">String getChangeSetId();</p><p class="HTMLPreformatted">String getChangeSetPath();</p><p class="HTMLPreformatted">List&lt;String&gt; getComments();</p><p class="HTMLPreformatted">List&lt;CreateIndexType&gt; getCreateIndex();</p><p class="HTMLPreformatted">List&lt;CreateProcedureType&gt; getCreateProcedure();</p><p class="HTMLPreformatted">List&lt;CreateSequenceType&gt; getCreateSequence();</p><p class="HTMLPreformatted">List&lt;CreateTableType&gt; getCreateTable();</p><p class="HTMLPreformatted">List&lt;CreateViewType&gt; getCreateView();</p><p class="HTMLPreformatted">List&lt;CustomChangeType&gt; getCustomChange();</p><p class="HTMLPreformatted">List&lt;DeleteType&gt; getDelete();</p><p class="HTMLPreformatted">List&lt;DropAllForeignKeyConstraintsType&gt; getDropAllForeignKeyConstraints();</p><p class="HTMLPreformatted">List&lt;DropColumnType&gt; getDropColumn();</p><p class="HTMLPreformatted">List&lt;DropDefaultValueType&gt; getDropDefaultValue();</p><p class="HTMLPreformatted">List&lt;DropForeignKeyConstraintType&gt; getDropForeignKeyConstraint();</p><p class="HTMLPreformatted">List&lt;DropIndexType&gt; getDropIndex();</p><p class="HTMLPreformatted">List&lt;DropNotNullConstraintType&gt; getDropNotNullConstraint();</p><p class="HTMLPreformatted">List&lt;DropPrimaryKeyType&gt; getDropPrimaryKey();</p><p class="HTMLPreformatted">List&lt;DropSequenceType&gt; getDropSequence();</p><p class="HTMLPreformatted">List&lt;DropTableType&gt; getDropTable();</p><p class="HTMLPreformatted">List&lt;DropUniqueConstraintType&gt; getDropUniqueConstraint();</p><p class="HTMLPreformatted">List&lt;DropViewType&gt; getDropView();</p><p class="HTMLPreformatted">List&lt;ExecuteCommandType&gt; getExecuteCommand();</p><p class="HTMLPreformatted">List&lt;InsertType&gt; getInsert();</p><p class="HTMLPreformatted">List&lt;LoadDataType&gt; getLoadData();</p><p class="HTMLPreformatted">List&lt;LoadUpdateDataType&gt; getLoadUpdateData();</p><p class="HTMLPreformatted">List&lt;MergeColumnsType&gt; getMergeColumns();</p><p class="HTMLPreformatted">List&lt;ModifyDataTypeType&gt; getModifyDataType();</p><p class="HTMLPreformatted">List&lt;RenameColumnType&gt; getRenameColumn();</p><p class="HTMLPreformatted">List&lt;RenameTableType&gt; getRenameTable();</p><p class="HTMLPreformatted">List&lt;RenameViewType&gt; getRenameView();</p><p class="HTMLPreformatted">List&lt;RollbackType&gt; getRollback();</p><p class="HTMLPreformatted">List&lt;SqlType&gt; getSql();</p><p class="HTMLPreformatted">List&lt;SqlFileType&gt; getSqlFile();</p><p class="HTMLPreformatted">List&lt;StopType&gt; getStop();</p><p class="HTMLPreformatted">List&lt;UpdateType&gt; getUpdate();</p><h2 class="Heading2">Sequences</h2><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">AlterSequenceType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.AlterSequenceType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getIncrementBy();</p><p class="HTMLPreformatted">String getMaxValue();</p><p class="HTMLPreformatted">String getMinValue();</p><p class="HTMLPreformatted">Object getOrdered();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getSequenceName();</p><p class="HTMLPreformatted">String getStartValue();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">CreateSequenceType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.CreateSequenceType;</span></p></li></ul><p class="HTMLPreformatted">int getCacheSize();</p><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">Object getCycle();</p><p class="HTMLPreformatted">String getIncrementBy();</p><p class="HTMLPreformatted">String getMaxValue();</p><p class="HTMLPreformatted">String getMinValue();</p><p class="HTMLPreformatted">Object getOrdered();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getSequenceName();</p><p class="HTMLPreformatted">String getStartValue();</p><p class="HTMLPreformatted">boolean isSetCacheSize();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">DropSequenceType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropSequenceType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getIncrementBy();</p><p class="HTMLPreformatted">String getMaxValue();</p><p class="HTMLPreformatted">String getMinValue();</p><p class="HTMLPreformatted">Object getOrdered();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getSequenceName();</p><p class="HTMLPreformatted">String getStartValue();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">SequenceExistsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.SequenceExistsType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getSequenceName();</p><h2 class="Heading2">SQL</h2><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">ModifySqlType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ModifySqlType;</span></p></li></ul><p class="HTMLPreformatted">List&lt;AppendType&gt; getAppend();</p><p class="HTMLPreformatted">Object getApplyToRollback();</p><p class="HTMLPreformatted">String getContext();</p><p class="HTMLPreformatted">String getDbms();</p><p class="HTMLPreformatted">String getLabels();</p><p class="HTMLPreformatted">FeatureMap getModifySqlChildren();</p><p class="HTMLPreformatted">List&lt;PrependType&gt; getPrepend();</p><p class="HTMLPreformatted">List&lt;RegExpReplaceType&gt; getRegExpReplace();</p><p class="HTMLPreformatted">List&lt;ReplaceType&gt; getReplace();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">SqlFileType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.SqlFileType;</span></p></li></ul><p class="HTMLPreformatted">String getDbms();</p><p class="HTMLPreformatted">String getEncoding();</p><p class="HTMLPreformatted">String getEndDelimiter();</p><p class="HTMLPreformatted">String getPath();</p><p class="HTMLPreformatted">Object getRelativeToChangelogFile();</p><p class="HTMLPreformatted">Object getSplitStatements();</p><p class="HTMLPreformatted">Object getStripComments();</p><p class="HTMLPreformatted">boolean isSetEncoding();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">SqlType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.SqlType</span></p></li></ul><p class="HTMLPreformatted">Note: Call the RuleFunctions class static method getText(mySqlType); to get the text associated with this refactoring. </p><p class="HTMLPreformatted">String getComment();</p><p class="HTMLPreformatted">String getDbms();</p><p class="HTMLPreformatted">String getEndDelimiter();</p><p class="HTMLPreformatted">Object getSplitStatements();</p><p class="HTMLPreformatted">Object getStripComments();</p><h2 class="Heading2">Storage Options</h2><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">StorageOptionsType</span> <span class="Emphasis">import com.datical.xml.ns.appdba.StorageOptionsType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myStorageOptionsType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p class="HTMLPreformatted">String getContext();</p><p class="HTMLPreformatted">String getDbms();</p><p class="HTMLPreformatted">String getPath();</p><p class="HTMLPreformatted">boolean isSetRelativeToChangelogFile();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">IndexStorageOptionsType</span> <span class="Emphasis">import com.datical.xml.ns.appdba.IndexStorageOptionsType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myIndexStorageOptionsType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p class="HTMLPreformatted">String getIndexName();</p><p class="HTMLPreformatted">String getPath();</p><p class="HTMLPreformatted">String getTableName();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">TableStorageOptionsType</span> <span class="Emphasis">import com.datical.xml.ns.appdba.TableStorageOptionsType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myTableStorageOptionsType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p class="HTMLPreformatted">String getPath();</p><p class="HTMLPreformatted">String getTableName();</p><h2 class="Heading2">Synonyms</h2><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">CreateSynonymType</span> <span class="Emphasis">import com.datical.xml.ns.appdba.CreateSynonymType;</span></p></li></ul><p class="HTMLPreformatted">String getObjectCatalogName();</p><p class="HTMLPreformatted">String getObjectName();</p><p class="HTMLPreformatted">String getObjectSchemaName();</p><p class="HTMLPreformatted">String getObjectType();</p><p class="HTMLPreformatted">String getSynonymCatalogName();</p><p class="HTMLPreformatted">String getSynonymName();</p><p class="HTMLPreformatted">String getSynonymSchemaName();</p><p class="HTMLPreformatted">boolean isSetPrivate();</p><p class="HTMLPreformatted">boolean isSetReplaceIfExists();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">DropSynonymType</span> <span class="Emphasis">import com.datical.xml.ns.appdba.DropSynonymType;</span></p></li></ul><p class="HTMLPreformatted">String getObjectType();</p><p class="HTMLPreformatted">String getSynonymCatalogName();</p><p class="HTMLPreformatted">String getSynonymName();</p><p class="HTMLPreformatted">String getSynonymSchemaName();</p><p class="HTMLPreformatted">boolean isSetPrivate();</p><h2 class="Heading2">Tables</h2><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">CreateTableType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.CreateTableType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">List&lt;ColumnType&gt; getColumn();</p><p class="HTMLPreformatted">String getRemarks();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">StorageOptionsType getStorageOptions();</p><p class="HTMLPreformatted">String getTableName();</p><p class="HTMLPreformatted">String getTablespace();</p><p class="HTMLPreformatted">String getTemporary();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">DropTableType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropTableType;</span></p></li></ul><p class="HTMLPreformatted">Object getCascadeConstraints();</p><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">RenameTableType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.RenameTableType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getNewTableName();</p><p class="HTMLPreformatted">String getOldTableName();</p><p class="HTMLPreformatted">String getSchemaName();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">TableExistsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.TableExistsType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">TableIsEmptyType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.TableIsEmptyType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><h2 class="Heading2">Triggers</h2><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">CreateTriggerType</span> <span class="Emphasis">import com.datical.xml.ns.storedlogic.CreateTriggerType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myCreateTriggerType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getDbms();</p><p class="HTMLPreformatted">String getEncoding();</p><p class="HTMLPreformatted">String getPath();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getScope();</p><p class="HTMLPreformatted">String getTableName();</p><p class="HTMLPreformatted">String getTriggerName();</p><p class="HTMLPreformatted">String getXmlns();</p><p class="HTMLPreformatted">boolean isSetDisabled();</p><p class="HTMLPreformatted">boolean isSetRelativeToChangelogFile();</p><p class="HTMLPreformatted">boolean isSetReplaceIfExists();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">DisableTriggerType</span> <span class="Emphasis">import com.datical.xml.ns.storedlogic.DisableTriggerType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getScope();</p><p class="HTMLPreformatted">String getTriggerName();</p><p class="HTMLPreformatted">String getXmlns();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">DropTriggerType</span> <span class="Emphasis">import com.datical.xml.ns.storedlogic.DropTriggerType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myDropTriggerType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getScope();</p><p class="HTMLPreformatted">String getTriggerName();</p><p class="HTMLPreformatted">String getXmlns();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">EnableTriggerType</span> <span class="Emphasis">import com.datical.xml.ns.storedlogic.EnableTriggerType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myEnableTriggerType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getScope();</p><p class="HTMLPreformatted">String getTriggerName();</p><p class="HTMLPreformatted">String getXmlns();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">RenameTriggerType</span> <span class="Emphasis">import com.datical.xml.ns.storedlogic.RenameTriggerType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myRenameTriggerType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getNewTriggerName();</p><p class="HTMLPreformatted">String getOldTriggerName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getXmlns();</p><h2 class="Heading2">Views</h2><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">CreateViewType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.CreateViewType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">Object getFullDefinition();</p><p class="HTMLPreformatted">Object getReplaceIfExists();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getValue();</p><p class="HTMLPreformatted">String getViewName();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">DropViewType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DropViewType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getViewName();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">RenameViewType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.RenameViewType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getNewViewName();</p><p class="HTMLPreformatted">String getOldViewName();</p><p class="HTMLPreformatted">String getSchemaName();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">ViewExistsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ViewExistsType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getViewName();</p><h2 class="Heading2">Miscellaneous</h2><h3 class="Heading3">ChangeLogs and ChangeSets</h3><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">ChangeLogPropertyDefinedType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ChangeLogPropertyDefinedType;</span></p></li></ul><p class="HTMLPreformatted">String getProperty();</p><p class="HTMLPreformatted">String getValue();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">ChangeSetExecutedType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ChangeSetExecutedType;</span></p></li></ul><p class="HTMLPreformatted">String getAuthor();</p><p class="HTMLPreformatted">String getChangeLogFile();</p><p class="HTMLPreformatted">String getId();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">ChangeSetType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ChangeSetType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myChangeSetType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p class="HTMLPreformatted">List&lt;AddAutoIncrementType&gt; getAddAutoIncrement();</p><p class="HTMLPreformatted">List&lt;AddCheckConstraintType&gt; getAddCheckConstraint();</p><p class="HTMLPreformatted">List&lt;AddColumnType&gt; getAddColumn();</p><p class="HTMLPreformatted">List&lt;AddDefaultValueType&gt; getAddDefaultValue();</p><p class="HTMLPreformatted">List&lt;AddForeignKeyConstraintType&gt; getAddForeignKeyConstraint();</p><p class="HTMLPreformatted">List&lt;AddLookupTableType&gt; getAddLookupTable();</p><p class="HTMLPreformatted">List&lt;AddNotNullConstraintType&gt; getAddNotNullConstraint();</p><p class="HTMLPreformatted">List&lt;AddPrimaryKeyType&gt; getAddPrimaryKey();</p><p class="HTMLPreformatted">List&lt;AddUniqueConstraintType&gt; getAddUniqueConstraint();</p><p class="HTMLPreformatted">List&lt;AlterSequenceType&gt; getAlterSequence();</p><p class="HTMLPreformatted">FeatureMap getAny();</p><p class="HTMLPreformatted">FeatureMap getAnyAttribute();</p><p class="HTMLPreformatted">String getAuthor();</p><p class="HTMLPreformatted">FeatureMap getChangeSetChildren();</p><p class="HTMLPreformatted">List&lt;CommentType&gt; getComments();</p><p class="HTMLPreformatted">String getContext();</p><p class="HTMLPreformatted">List&lt;CreateFunctionType&gt; getCreateFunction();</p><p class="HTMLPreformatted">List&lt;CreateIndexType&gt; getCreateIndex();</p><p class="HTMLPreformatted">List&lt;CreatePackageType&gt; getCreatePackage();</p><p class="HTMLPreformatted">List&lt;CreatePackageBodyType&gt; getCreatePackageBody();</p><p class="HTMLPreformatted">List&lt;CreateProcedureType&gt; getCreateProcedure();</p><p class="HTMLPreformatted">List&lt;CreateSequenceType&gt; getCreateSequence();</p><p class="HTMLPreformatted">List&lt;CreateSynonymType&gt; getCreateSynonym();</p><p class="HTMLPreformatted">List&lt;CreateTableType&gt; getCreateTable();</p><p class="HTMLPreformatted">List&lt;CreateTriggerType&gt; getCreateTrigger();</p><p class="HTMLPreformatted">List&lt;CreateViewType&gt; getCreateView();</p><p class="HTMLPreformatted">List&lt;CustomChangeType&gt; getCustomChange();</p><p class="HTMLPreformatted">String getDbms();</p><p class="HTMLPreformatted">List&lt;DeleteType&gt; getDelete();</p><p class="HTMLPreformatted">List&lt;DisableCheckConstraintType&gt; getDisableCheckConstraint();</p><p class="HTMLPreformatted">List&lt;DisableTriggerType&gt; getDisableTrigger();</p><p class="HTMLPreformatted">List&lt;DropAllForeignKeyConstraintsType&gt; getDropAllForeignKeyConstraints();</p><p class="HTMLPreformatted">List&lt;DropCheckConstraintType&gt; getDropCheckConstraint();</p><p class="HTMLPreformatted">List&lt;DropColumnType&gt; getDropColumn();</p><p class="HTMLPreformatted">List&lt;DropDefaultValueType&gt; getDropDefaultValue();</p><p class="HTMLPreformatted">List&lt;DropForeignKeyConstraintType&gt; getDropForeignKeyConstraint();</p><p class="HTMLPreformatted">List&lt;DropFunctionType&gt; getDropFunction();</p><p class="HTMLPreformatted">List&lt;DropIndexType&gt; getDropIndex();</p><p class="HTMLPreformatted">List&lt;DropNotNullConstraintType&gt; getDropNotNullConstraint();</p><p class="HTMLPreformatted">List&lt;DropPackageType&gt; getDropPackage();</p><p class="HTMLPreformatted">List&lt;DropPackageBodyType&gt; getDropPackageBody();</p><p class="HTMLPreformatted">List&lt;DropPrimaryKeyType&gt; getDropPrimaryKey();</p><p class="HTMLPreformatted">List&lt;DropProcedureType&gt; getDropProcedure();</p><p class="HTMLPreformatted">List&lt;DropSequenceType&gt; getDropSequence();</p><p class="HTMLPreformatted">List&lt;DropSynonymType&gt; getDropSynonym();</p><p class="HTMLPreformatted">List&lt;DropTableType&gt; getDropTable();</p><p class="HTMLPreformatted">List&lt;DropTriggerType&gt; getDropTrigger();</p><p class="HTMLPreformatted">List&lt;DropUniqueConstraintType&gt; getDropUniqueConstraint();</p><p class="HTMLPreformatted">List&lt;DropViewType&gt; getDropView();</p><p class="HTMLPreformatted">List&lt;EnableCheckConstraintType&gt; getEnableCheckConstraint();</p><p class="HTMLPreformatted">List&lt;EnableTriggerType&gt; getEnableTrigger();</p><p class="HTMLPreformatted">List&lt;ExecuteCommandType&gt; getExecuteCommand();</p><p class="HTMLPreformatted">Object getFailOnError();</p><p class="HTMLPreformatted">String getId();</p><p class="HTMLPreformatted">List&lt;InsertType&gt; getInsert();</p><p class="HTMLPreformatted">String getLabels();</p><p class="HTMLPreformatted">List&lt;LoadDataType&gt; getLoadData();</p><p class="HTMLPreformatted">List&lt;LoadUpdateDataType&gt; getLoadUpdateData();</p><p class="HTMLPreformatted">String getLogicalFilePath();</p><p class="HTMLPreformatted">List&lt;MergeColumnsType&gt; getMergeColumns();</p><p class="HTMLPreformatted">List&lt;ModifyDataTypeType&gt; getModifyDataType();</p><p class="HTMLPreformatted">List&lt;ModifySqlType&gt; getModifySql();</p><p class="HTMLPreformatted">ObjectQuotingStrategy getObjectQuotingStrategy();</p><p class="HTMLPreformatted">OnChangeSetValidationFail getOnValidationFail();</p><p class="HTMLPreformatted">List&lt;OutputType&gt; getOutput();</p><p class="HTMLPreformatted">PreConditionsType getPreConditions();</p><p class="HTMLPreformatted">List&lt;RenameColumnType&gt; getRenameColumn();</p><p class="HTMLPreformatted">List&lt;RenameTableType&gt; getRenameTable();</p><p class="HTMLPreformatted">List&lt;RenameTriggerType&gt; getRenameTrigger();</p><p class="HTMLPreformatted">List&lt;RenameViewType&gt; getRenameView();</p><p class="HTMLPreformatted">List&lt;RollbackType&gt; getRollback();</p><p class="HTMLPreformatted">Object getRunAlways();</p><p class="HTMLPreformatted">Object getRunInTransaction();</p><p class="HTMLPreformatted">Object getRunOnChange();</p><p class="HTMLPreformatted">List&lt;SqlType&gt; getSql();</p><p class="HTMLPreformatted">List&lt;SqlFileType&gt; getSqlFile();</p><p class="HTMLPreformatted">List&lt;StopType&gt; getStop();</p><p class="HTMLPreformatted">TagDatabaseType getTagDatabase();</p><p class="HTMLPreformatted">List&lt;UpdateType&gt; getUpdate();</p><p class="HTMLPreformatted">List&lt;ValidCheckSumType&gt; getValidCheckSum();</p><p class="HTMLPreformatted">boolean isSetObjectQuotingStrategy();</p><p class="HTMLPreformatted">boolean isSetOnValidationFail();</p><p class="HTMLPreformatted">boolean isSetRunInTransaction();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">CommentType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.CommentType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myCommentType);</span> to get the text associated with this refactoring.</p></li></ul><p>&#160;</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">DatabaseChangeLogType</span> <span class="Emphasis">import</span> <span class="Emphasis">org.liquibase.xml.ns.dbchangelog.DatabaseChangeLogType;</span></p></li></ul><p class="HTMLPreformatted">FeatureMap getAnyAttribute();</p><p class="HTMLPreformatted">List&lt;ChangeSetType&gt; getChangeSet();</p><p class="HTMLPreformatted">FeatureMap getGroup();</p><p class="HTMLPreformatted">List&lt;IncludeType&gt; getInclude();</p><p class="HTMLPreformatted">List&lt;IncludeAllType&gt; getIncludeAll();</p><p class="HTMLPreformatted">String getLogicalFilePath();</p><p class="HTMLPreformatted">ObjectQuotingStrategy getObjectQuotingStrategy();</p><p class="HTMLPreformatted">PreConditionsType1 getPreConditions();</p><p class="HTMLPreformatted">List&lt;PropertyType&gt; getProperty();</p><p class="HTMLPreformatted">boolean isSetObjectQuotingStrategy();</p><h3 class="Heading3">DML - Data Loading</h3><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">AddLookupTableType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.AddLookupTableType;</span></p></li></ul><p class="HTMLPreformatted">String getConstraintName();</p><p class="HTMLPreformatted">String getExistingColumnName();</p><p class="HTMLPreformatted">String getExistingTableCatalogName();</p><p class="HTMLPreformatted">String getExistingTableName();</p><p class="HTMLPreformatted">String getExistingTableSchemaName();</p><p class="HTMLPreformatted">String getNewColumnDataType();</p><p class="HTMLPreformatted">String getNewColumnName();</p><p class="HTMLPreformatted">String getNewTableCatalogName();</p><p class="HTMLPreformatted">String getNewTableName();</p><p class="HTMLPreformatted">String getNewTableSchemaName();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">LoadDataType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.LoadDataType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myLoadDataType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">List&lt;ColumnLoadDataType&gt; getColumn();</p><p class="HTMLPreformatted">String getEncoding();</p><p class="HTMLPreformatted">String getFile();</p><p class="HTMLPreformatted">String getQuotchar();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getSeparator();</p><p class="HTMLPreformatted">String getTableName();</p><p class="HTMLPreformatted">boolean isSetEncoding();</p><p class="HTMLPreformatted">boolean isSetQuotchar();</p><p class="HTMLPreformatted">boolean isSetSeparator();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">LoadUpdateDataType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.LoadUpdateDataType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myLoadUpdateDataType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">List&lt;ColumnLoadUpdateDataType&gt; getColumn();</p><p class="HTMLPreformatted">String getEncoding();</p><p class="HTMLPreformatted">String getFile();</p><p class="HTMLPreformatted">String getPrimaryKey();</p><p class="HTMLPreformatted">String getQuotchar();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getSeparator();</p><p class="HTMLPreformatted">String getTableName();</p><p class="HTMLPreformatted">boolean isSetEncoding();</p><p class="HTMLPreformatted">boolean isSetQuotchar();</p><p class="HTMLPreformatted">boolean isSetSeparator();</p><h3 class="Heading3">Miscellaneous</h3><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">AndType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.AndType;</span></p></li></ul><p class="HTMLPreformatted">List&lt;AndType&gt; getAnd();</p><p class="HTMLPreformatted">FeatureMap getAny();</p><p class="HTMLPreformatted">List&lt;ChangeLogPropertyDefinedType&gt; getChangeLogPropertyDefined();</p><p class="HTMLPreformatted">List&lt;ChangeSetExecutedType&gt; getChangeSetExecuted();</p><p class="HTMLPreformatted">List&lt;ColumnExistsType&gt; getColumnExists();</p><p class="HTMLPreformatted">List&lt;CustomPreconditionType&gt; getCustomPrecondition();</p><p class="HTMLPreformatted">List&lt;DbmsType&gt; getDbms();</p><p class="HTMLPreformatted">List&lt;ExpectedQuotingStrategyType&gt; getExpectedQuotingStrategy();</p><p class="HTMLPreformatted">List&lt;ForeignKeyConstraintExistsType&gt; getForeignKeyConstraintExists();</p><p class="HTMLPreformatted">FeatureMap getGroup();</p><p class="HTMLPreformatted">List&lt;IndexExistsType&gt; getIndexExists();</p><p class="HTMLPreformatted">List&lt;NotType&gt; getNot();</p><p class="HTMLPreformatted">List&lt;OrType&gt; getOr();</p><p class="HTMLPreformatted">List&lt;PrimaryKeyExistsType&gt; getPrimaryKeyExists();</p><p class="HTMLPreformatted">List&lt;RowCountType&gt; getRowCount();</p><p class="HTMLPreformatted">List&lt;RunningAsType&gt; getRunningAs();</p><p class="HTMLPreformatted">List&lt;SequenceExistsType&gt; getSequenceExists();</p><p class="HTMLPreformatted">List&lt;SqlCheckType&gt; getSqlCheck();</p><p class="HTMLPreformatted">List&lt;TableExistsType&gt; getTableExists();</p><p class="HTMLPreformatted">List&lt;TableIsEmptyType&gt; getTableIsEmpty();</p><p class="HTMLPreformatted">List&lt;ViewExistsType&gt; getViewExists();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">AppendType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.AppendType;</span></p></li></ul><p class="HTMLPreformatted">String getValue();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">ArgType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ArgType;</span></p></li></ul><p class="HTMLPreformatted">String getValue();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">CustomChangeType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.CustomChangeType;</span></p></li></ul><p class="HTMLPreformatted">FeatureMap getAnyAttribute();</p><p class="HTMLPreformatted">String getClass_();</p><p class="HTMLPreformatted">List&lt;ParamType1&gt; getParam();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">CustomPreconditionType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.CustomPreconditionType;</span></p></li></ul><p class="HTMLPreformatted">String getClassName();</p><p class="HTMLPreformatted">List&lt;ParamType2&gt; getParam();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">DbmsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DbmsType;</span></p></li></ul><p class="HTMLPreformatted">String getType();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">DeleteType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.DeleteType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myDeleteType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><p class="HTMLPreformatted">EObject getWhere();</p><p class="HTMLPreformatted">WhereParamsType getWhereParams();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">ExecuteCommandType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ExecuteCommandType;</span></p></li></ul><p class="HTMLPreformatted">List&lt;ArgType&gt; getArg();</p><p class="HTMLPreformatted">String getExecutable();</p><p class="HTMLPreformatted">String getOs();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">ExpectedQuotingStrategyType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ExpectedQuotingStrategyType;</span></p></li></ul><p class="HTMLPreformatted">String getStrategy();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">IncludeAllType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.IncludeAllType;</span></p></li></ul><p class="HTMLPreformatted">FeatureMap getAnyAttribute();</p><p class="HTMLPreformatted">String getFilter();</p><p class="HTMLPreformatted">String getPath();</p><p class="HTMLPreformatted">Object getRelativeToChangelogFile();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">IncludeType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.IncludeType;</span></p></li></ul><p class="HTMLPreformatted">FeatureMap getAnyAttribute();</p><p class="HTMLPreformatted">String getFile();</p><p class="HTMLPreformatted">Object getRelativeToChangelogFile();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">InsertType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.InsertType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">List&lt;ColumnType&gt; getColumn();</p><p class="HTMLPreformatted">String getDbms();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">ModifyDataTypeType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ModifyDataTypeType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">String getColumnName();</p><p class="HTMLPreformatted">String getNewDataType();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">NotType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.NotType;</span></p></li></ul><p class="HTMLPreformatted">List&lt;AndType&gt; getAnd();</p><p class="HTMLPreformatted">FeatureMap getAny();</p><p class="HTMLPreformatted">List&lt;ChangeLogPropertyDefinedType&gt; getChangeLogPropertyDefined();</p><p class="HTMLPreformatted">List&lt;ChangeSetExecutedType&gt; getChangeSetExecuted();</p><p class="HTMLPreformatted">List&lt;ColumnExistsType&gt; getColumnExists();</p><p class="HTMLPreformatted">List&lt;CustomPreconditionType&gt; getCustomPrecondition();</p><p class="HTMLPreformatted">List&lt;DbmsType&gt; getDbms();</p><p class="HTMLPreformatted">List&lt;ExpectedQuotingStrategyType&gt; getExpectedQuotingStrategy();</p><p class="HTMLPreformatted">List&lt;ForeignKeyConstraintExistsType&gt; getForeignKeyConstraintExists();</p><p class="HTMLPreformatted">FeatureMap getGroup();</p><p class="HTMLPreformatted">List&lt;IndexExistsType&gt; getIndexExists();</p><p class="HTMLPreformatted">List&lt;NotType&gt; getNot();</p><p class="HTMLPreformatted">List&lt;OrType&gt; getOr();</p><p class="HTMLPreformatted">List&lt;PrimaryKeyExistsType&gt; getPrimaryKeyExists();</p><p class="HTMLPreformatted">List&lt;RowCountType&gt; getRowCount();</p><p class="HTMLPreformatted">List&lt;RunningAsType&gt; getRunningAs();</p><p class="HTMLPreformatted">List&lt;SequenceExistsType&gt; getSequenceExists();</p><p class="HTMLPreformatted">List&lt;SqlCheckType&gt; getSqlCheck();</p><p class="HTMLPreformatted">List&lt;TableExistsType&gt; getTableExists();</p><p class="HTMLPreformatted">List&lt;TableIsEmptyType&gt; getTableIsEmpty();</p><p class="HTMLPreformatted">List&lt;ViewExistsType&gt; getViewExists();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">OrType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.OrType;</span></p></li></ul><p class="HTMLPreformatted">List&lt;AndType&gt; getAnd();</p><p class="HTMLPreformatted">FeatureMap getAny();</p><p class="HTMLPreformatted">List&lt;ChangeLogPropertyDefinedType&gt; getChangeLogPropertyDefined();</p><p class="HTMLPreformatted">List&lt;ChangeSetExecutedType&gt; getChangeSetExecuted();</p><p class="HTMLPreformatted">List&lt;ColumnExistsType&gt; getColumnExists();</p><p class="HTMLPreformatted">List&lt;CustomPreconditionType&gt; getCustomPrecondition();</p><p class="HTMLPreformatted">List&lt;DbmsType&gt; getDbms();</p><p class="HTMLPreformatted">List&lt;ExpectedQuotingStrategyType&gt; getExpectedQuotingStrategy();</p><p class="HTMLPreformatted">List&lt;ForeignKeyConstraintExistsType&gt; getForeignKeyConstraintExists();</p><p class="HTMLPreformatted">FeatureMap getGroup();</p><p class="HTMLPreformatted">List&lt;IndexExistsType&gt; getIndexExists();</p><p class="HTMLPreformatted">List&lt;NotType&gt; getNot();</p><p class="HTMLPreformatted">List&lt;OrType&gt; getOr();</p><p class="HTMLPreformatted">List&lt;PrimaryKeyExistsType&gt; getPrimaryKeyExists();</p><p class="HTMLPreformatted">List&lt;RowCountType&gt; getRowCount();</p><p class="HTMLPreformatted">List&lt;RunningAsType&gt; getRunningAs();</p><p class="HTMLPreformatted">List&lt;SequenceExistsType&gt; getSequenceExists();</p><p class="HTMLPreformatted">List&lt;SqlCheckType&gt; getSqlCheck();</p><p class="HTMLPreformatted">List&lt;TableExistsType&gt; getTableExists();</p><p class="HTMLPreformatted">List&lt;TableIsEmptyType&gt; getTableIsEmpty();</p><p class="HTMLPreformatted">List&lt;ViewExistsType&gt; getViewExists();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">OutputType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.OutputType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myOutputType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p class="HTMLPreformatted">String getTarget();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">ParamType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ParamType;</span></p></li></ul><p class="HTMLPreformatted">String getName();</p><p class="HTMLPreformatted">String getValue();</p><p class="HTMLPreformatted">String getValueBoolean();</p><p class="HTMLPreformatted">String getValueComputed();</p><p class="HTMLPreformatted">String getValueDate();</p><p class="HTMLPreformatted">String getValueNumeric();</p><p class="HTMLPreformatted">String getValueSequenceCurrent();</p><p class="HTMLPreformatted">String getValueSequenceNext();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">PreConditionsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.PreConditionsType;</span></p></li></ul><p class="HTMLPreformatted">List&lt;AndType&gt; getAnd();</p><p class="HTMLPreformatted">FeatureMap getAny();</p><p class="HTMLPreformatted">List&lt;ChangeLogPropertyDefinedType&gt; getChangeLogPropertyDefined();</p><p class="HTMLPreformatted">List&lt;ChangeSetExecutedType&gt; getChangeSetExecuted();</p><p class="HTMLPreformatted">List&lt;ColumnExistsType&gt; getColumnExists();</p><p class="HTMLPreformatted">List&lt;CustomPreconditionType&gt; getCustomPrecondition();</p><p class="HTMLPreformatted">List&lt;DbmsType&gt; getDbms();</p><p class="HTMLPreformatted">List&lt;ExpectedQuotingStrategyType&gt; getExpectedQuotingStrategy();</p><p class="HTMLPreformatted">List&lt;ForeignKeyConstraintExistsType&gt; getForeignKeyConstraintExists();</p><p class="HTMLPreformatted">FeatureMap getGroup();</p><p class="HTMLPreformatted">List&lt;IndexExistsType&gt; getIndexExists();</p><p class="HTMLPreformatted">List&lt;NotType&gt; getNot();</p><p class="HTMLPreformatted">OnChangeSetPreconditionErrorOrFail getOnError();</p><p class="HTMLPreformatted">String getOnErrorMessage();</p><p class="HTMLPreformatted">OnChangeSetPreconditionErrorOrFail getOnFail();</p><p class="HTMLPreformatted">String getOnFailMessage();</p><p class="HTMLPreformatted">OnChangeLogPreconditionOnSqlOutput getOnSqlOutput();</p><p class="HTMLPreformatted">List&lt;OrType&gt; getOr();</p><p class="HTMLPreformatted">List&lt;PrimaryKeyExistsType&gt; getPrimaryKeyExists();</p><p class="HTMLPreformatted">List&lt;RowCountType&gt; getRowCount();</p><p class="HTMLPreformatted">List&lt;RunningAsType&gt; getRunningAs();</p><p class="HTMLPreformatted">List&lt;SequenceExistsType&gt; getSequenceExists();</p><p class="HTMLPreformatted">List&lt;SqlCheckType&gt; getSqlCheck();</p><p class="HTMLPreformatted">List&lt;TableExistsType&gt; getTableExists();</p><p class="HTMLPreformatted">List&lt;TableIsEmptyType&gt; getTableIsEmpty();</p><p class="HTMLPreformatted">List&lt;ViewExistsType&gt; getViewExists();</p><p class="HTMLPreformatted">boolean isSetOnError();</p><p class="HTMLPreformatted">boolean isSetOnFail();</p><p class="HTMLPreformatted">boolean isSetOnSqlOutput();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">PrependType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.PrependType;</span></p></li></ul><p class="HTMLPreformatted">String getValue();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">PropertyType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.PropertyType;</span></p></li></ul><p class="HTMLPreformatted">String getContext();</p><p class="HTMLPreformatted">String getDbms();</p><p class="HTMLPreformatted">String getFile();</p><p class="HTMLPreformatted">String getLabels();</p><p class="HTMLPreformatted">String getName();</p><p class="HTMLPreformatted">String getValue();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">RegExpReplaceType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.RegExpReplaceType;</span></p></li></ul><p class="HTMLPreformatted">String getReplace();</p><p class="HTMLPreformatted">String getWith();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">ReplaceType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ReplaceType;</span></p></li></ul><p class="HTMLPreformatted">String getReplace();</p><p class="HTMLPreformatted">String getWith();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">RowCountType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.RowCountType;</span></p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">int getExpectedRows();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><p class="HTMLPreformatted">boolean isSetExpectedRows();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">RunningAsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.RunningAsType;</span></p></li></ul><p class="HTMLPreformatted">String getUsername();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">SqlCheckType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.SqlCheckType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(mySqlCheckType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p class="HTMLPreformatted">String getExpectedResult();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">StopType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.StopType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myStopType);</span> to get the text associated with this refactoring.</p></li></ul><p>&#160;</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">TagDatabaseType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.TagDatabaseType;</span></p></li></ul><p class="HTMLPreformatted">String getTag();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">UpdateType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.UpdateType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myUpdateType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p class="HTMLPreformatted">String getCatalogName();</p><p class="HTMLPreformatted">List&lt;ColumnType&gt; getColumn();</p><p class="HTMLPreformatted">String getSchemaName();</p><p class="HTMLPreformatted">String getTableName();</p><p class="HTMLPreformatted">EObject getWhere();</p><p class="HTMLPreformatted">WhereParamsType getWhereParams();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">ValidCheckSumType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.ValidCheckSumType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myValidCheckSumType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p class="HTMLPreformatted">String getComment();</p><ul class="ul_3"><li class="li_1"><p class="p_1"><span class="Strong">WhereParamsType</span> <span class="Emphasis">import org.liquibase.xml.ns.dbchangelog.WhereParamsType;</span><span class="Emphasis"><br /></span><span class="Strong">Note:</span> Call the RuleFunctions class static method <span class="Strong">getText(myWhereParamsType);</span> to get the text associated with this refactoring.&#160;</p></li></ul><p class="HTMLPreformatted">List&lt;ParamType&gt; getParam();</p></body>
</html>