<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" xml:lang="en-us">
    <head><title></title>
    </head>
    <body>
        <h1>Developer Workflows: Manage Changesets During Development and Test</h1>
        <MadCap:snippetText src="../../../../Resources/Snippets/images/.ver_icon_size_enterprise.flsnp" />
        <ul>
            <li>
                <p><a href="../../../database-admin/package-sql-scripts-for-deployment/workflow-deploy-changesets/best-practice-workflow.htm">Best Practices for Developer Workflows</a>
                </p>
            </li>
            <li>
                <p><a href="../../../database-admin/package-sql-scripts-for-deployment/workflow-deploy-changesets/effect-during-murges.htm">Effects During Merges</a>
                </p>
            </li>
            <li>
                <p><a href="../../../database-admin/package-sql-scripts-for-deployment/workflow-deploy-changesets/path-attributes-changesets.htm">Path and File Attributes for Changesets</a>
                </p>
            </li>
            <li>
                <p><a href="../../../database-admin/package-sql-scripts-for-deployment/workflow-deploy-changesets/abandon-restore-changeset.htm">Abandoning and Restoring a Changeset: ignore and unignore</a>
                </p>
            </li>
            <li>
                <p><a href="../../../database-admin/package-sql-scripts-for-deployment/workflow-deploy-changesets/changeset-version-strategy.htm">Changeset Versioning: version and versionStrategy</a>
                </p>
            </li>
            <li>
                <p><a href="../../../dba/package/package-sql-scripts-for-deployment/workflow-deploy-changesets/cleaning-deployed-changesets.htm">Cleaning Up Deployed Changesets: cleanup</a>
                </p>
            </li>
            <li>
                <p><a href="../../../database-admin/package-sql-scripts-for-deployment/workflow-deploy-changesets/replace-deployed-changesets.htm">Replacing Deployed Changesets: replace</a>
                </p>
            </li>
            <li>
                <p><a href="../../../database-admin/package-sql-scripts-for-deployment/workflow-deploy-changesets/rollback-script-handling.htm">Rollback Script Handling</a>
                </p>
            </li>
        </ul>
        <h2>Overview</h2>
        <p>The normal flow of deployment goes through stages. Depending on your environment, you may have more or fewer stages.</p>
        <p>Development &gt; Test &gt; Production</p>
        <h3>Developer Workflow</h3>
        <p>During development and test you may find problems with the original SQL scripts that were packaged and deployed to test. A failed test might indicate a need to remove or replace changesets that were deployed to Test and make adjustments in the Development environment. These adjustments might require the developer to:</p>
        <ul>
            <li>
                <p><strong>Ignore a changeset</strong> - Abandon changeset in place and prevent it from being deployed further. If needed, you can recover it (unignore) later.</p>
            </li>
            <li>
                <p><strong>Clean up a previously deployed changeset</strong> - Ignore deployed changeset, create changesets to clean up any changes that were created.</p>
            </li>
            <li>
                <p><strong>Replace a previously deployed changeset</strong> - Replace the changes in a changeset with other changes. This usually implies running a cleanup first.</p>
            </li>
            <li>
                <p><strong>Use versions with changesets</strong> - Deploy only the latest version of a changeset. This capability is intended for use with programmatic parts of the database (stored logic).</p>
            </li>
        </ul>
        <p>To enable this capabilty, new changeset attributes are added to all changesets generated from a SQL script.</p>
        <h3>Comparison to Rollback</h3>
        <p>The normal release workflow allows you to deploy and roll back changesets throughout a project pipeline. Rollbacks can be automatic for some changes or be performed by custom rollback scripts you supply. See <a href="https://datical-cs.atlassian.net/wiki/spaces/DDOC/pages/896570268/Rolling+Back+Changes">Rolling Back Changes</a>.</p>
        <p>However, the development workflow is for making changes to the changesets (and other changesets they affect). When you use the -ignore, -cleanup, and -replace scripts, they mark the original changesets so that they are no longer deployed. Changes are anticipated at these stages in a pipeline. They are not expected in later stages.</p>
        <p>See <a href="../../../dba/package/package-sql-scripts-for-deployment/workflow-deploy-changesets/rollback-script-handling.htm">Rollback Script Handling</a> for more information on how to work with existing rollback scripts in a development workflow.</p>
        <h3>Example: ignoring a deployed changeset</h3>
        <p>To signal a change, you create a special file using the same base name as the original SQL script, apply a suffix (for example, -ignore), and place it in the same directory where you placed the original file.</p>
        <ul>
            <li>
                <p><span class="HTMLCode_1">invoice_columns.sql</span>
                </p>
            </li>
            <li>
                <p><span class="HTMLCode_1">invoice_columns-ignore.sql or invoice_columns_ignore.sql</span>
                </p>
            </li>
        </ul>
        <p>When <span class="HTMLCode_1">invoice_columns-ignore.sql or invoice_columns_ignore.sql</span> is processed, the <span class="HTMLCode_1">ignore</span> attribute is set on all of the original changesets produced by <span class="HTMLCode_1">invoice_columns.sql</span>. The changesets are no longer deployed.</p>
        <p>Do not use more than one suffix when working in a development workflow (-ignore, -unignore, -replace, -cleanup, -rollback). For example, when you update a <span class="HTMLCode_1">myscript-rollback.sql or myscript_rollback.sql</span> file, you update it in place. Do not create a <span class="HTMLCode_1">myscript-rollback-replace</span> script. It causes an error during packaging.</p>
        <h4>It is important to maintain consistent case in workflow file names!</h4>
        <p>When creating a new workflow file it is important to maintain file name casing that is consistent with the original file. <span class="HTMLCode_1">MYSCRIPT-ignore.sql</span> will not match <span class="HTMLCode_1">myscript.sql</span>.</p>
        <p>If you are using git, you may have to run the following command to configure your repository to enforce consistent file name case:&#160;<span class="HTMLCode_2">git config core.ignorecase false</span></p>
    </body>
</html>