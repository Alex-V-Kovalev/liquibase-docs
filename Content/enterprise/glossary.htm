<?xml version="1.0" encoding="utf-8"?>
<html>
    <head><title></title>
    </head>
    <body>
        <h1>Datical Glossary</h1>
        <p class="auto-cursor-target">These terms apply to Datical DB and DMC.&#160;</p>
        <div class="table-wrap">
            <table class="wrapped confluenceTable">
                <colgroup>
                    <col style="width: 99.0px;" />
                    <col style="width: 680.0px;" />
                </colgroup>
                <tbody>
                    <tr>
                        <th class="confluenceTh">Term</th>
                        <th class="confluenceTh">Definition</th>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Automation Client</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">Interface that allows third-party automation software to perform Datical operations. The Datical DB CLI operates as this interface. You install Datical DB as part of your automation solution. The automation software runs Datical CLI commands.&#160;&#160;</td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>CLI</strong>
                        </td>
                        <td colspan="1" class="confluenceTd"><em>Command Line Interface</em> - Datical DB hammer program.&#160;Use it at the system prompt to run Datical DB commands. To see a list of commands, run <code>hammer help</code>.&#160;</td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Changeset</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">XML-based representation of an operation on a database object. During packaging, SQL scripts are refactored into changesets and deployed to the REF database.&#160;</td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Changelog</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">XML-based log of all changesets in the REF database. The status of other databases (steps) in the release pipeline is determined by comparing the changesets deployed to that step to the changelog.&#160;</td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Continuous Integration (CI)</strong>
                        </td>
                        <td colspan="1" class="confluenceTd"><em>S</em>oftware development practice where members of a team integrate their work frequently (at least daily).&#160; Each integration is verified by automated build and test to detect errors as quickly as possible. Datical supports continuous integration of database changes. The <em>packaging</em> operation is analogous to compiling source code.&#160;</td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Context</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">Collective reference for one or more <em>steps</em>. Contexts are defined in the <em>project</em>. Datical operations may include an option to operate on specified contexts.&#160;</td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>DbDef</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">Also a <em>step. </em>A DbDef specifies a connection to a database. Datical operations are typically performed on a single step or DbDef.&#160;</td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Datical DB</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">
                            <div class="content-wrapper">
                                <p>Datical application that is installed for each user. The <em>GUI</em> and <em>CLI</em> components provide the user interface. It is used to create and manage projects and perform Datical operations.&#160;&#160;</p>
                                <div class="confluence-information-macro confluence-information-macro-information conf-macro output-block">
                                    <div class="confluence-information-macro-body">
                                        <p>Liquibase Enterprise and Liquibase Business were formerly known as Datical DB</p>
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Datical Service</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">An older Datical application that provided centralized, server-based management of users and projects. Users accessed&#160;the management console through a web browser.&#160; The older Datical Service was only used with older Datical DB versions 5.6 through 6.17.</td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Deployment Monitoring Console (DMC)</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">The current application to provide the ability for users to view status and reports in a web browser.&#160; The Deployment Monitoring Console (DMC) is only used with newer Datical DB versions 7.0 and higher.&#160; The DMC documentation can be found here:&#160;<a class="external-link" href="https://dmc.datical.com/" rel="nofollow">https://dmc.datical.com/</a></td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Deployment Plan</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">Older terminology for a Datical <em>project</em>.&#160;</td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Desktop Client</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">Another term for Datical DB, especially the GUI. End users employ it to create and administer projects and perform Datical operations.&#160;&#160;</td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Deploy</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">Datical operation that applies a set of changes to a database (a step in the release pipeline).&#160;</td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Forecast</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">
                            <p>Datical operation that tests a database change before deploying it. A forecast has two parts:</p>
                            <ul>
                                <li><em>Rule</em> compliance</li>
                                <li><em>Simulation</em> of the change against the database where it will be applied</li>
                            </ul>
                            <p>The forecast report indicates success or failure and lists the status of rules tested.&#160;</p>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>GUI</strong>
                        </td>
                        <td colspan="1" class="confluenceTd"><em>Graphical User Interface</em> - An application in Datical DB. It provides tools for creating and managing projects, as well as running Datical operations (package, forecast, deploy, status, rollback).&#160;</td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Label</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">
                            <p>Free-text label on a <em>changeset</em> commonly used to manage how changesets are deployed. Labels can be defined in multiple places:</p>
                            <ul>
                                <li>Automatic - during packaging, some labels are created automatically (SQL script name, pipeline label for REF step)</li>
                                <li>Project - one or more labels can be defined for the project</li>
                                <li>Pipeline - one or more labels can be defined for the project</li>
                                <li>SQL scripts - metadata.properties files can define additional labels</li>
                                <li>SCM check-in - a change to one or more SQL scripts checked in with a label. The label can identify a ticket number or other representation of the changes.&#160;</li>
                                <li>Release management - it is common to define a label that refers to groups of changes defined by other labels.&#160;</li>
                            </ul>
                            <p>Datical operations can specify one or more labels as a means of selecting the changesets to work on.&#160;</p>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Operations</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">
                            <p>Fundamental Datical operations manage database changes through the release pipeline.&#160;</p>
                            <ul>
                                <li>Package - convert SQL scripts into changesets</li>
                                <li>Status - determine what changesets are deployed to a step (database)</li>
                                <li>Deploy - update a step (database) with specified changesets</li>
                                <li>Rollback - remove changesets from a step (database)</li>
                            </ul>
                            <p>Datical DB provides other operations as well. Use the GUI or CLI perform operations.&#160;</p>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Packaging</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">Datical operation that refactors SQL scripts into changesets.&#160;</td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd">
                            <p><strong>Pipeline</strong>
                            </p>
                        </td>
                        <td colspan="1" class="confluenceTd">
                            <ol>
                                <li>Part of a Datical project. Within the project, pipelines represent implementation streams. For example, a project may define three streams:<ul><li>Current release</li><li>Next release</li><li>Hotfix</li></ul></li>
                                <li>Short for release pipeline.&#160;</li>
                            </ol>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Project</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">
                            <p>In Datical DB, the representation of the release pipeline.&#160; It defines the following components:</p>
                            <ul>
                                <li>Step (which include a <em>DbDef</em> to connect to the database)</li>
                                <li>Pipelines, a sequence of steps</li>
                                <li>Settings to define characteristics of the project and behavior underlying Datical operations.&#160;</li>
                            </ul>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd">
                            <p><strong>Reference Database&#160;</strong>
                            </p>
                        </td>
                        <td colspan="1" class="confluenceTd"><em>Also REF or RefDB.&#160;</em>This is the first database in a release pipeline. Datical DB requires it as an internal part of its function.&#160; It is set up as a schema-only database to minimize processing requirements for Datical operations. <em>Packaging</em> operations refactor SQL scripts into changesets and deploy them to the REF database.&#160;</td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Release pipeline</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">
                            <p>A set of sequential staging areas for applications to undergo testing on the way to release. There may be many stages in a release pipeline. Functionally the stages represent areas of work:</p>
                            <ul>
                                <li>REF - repository of packaged database changes and the reference changelog for the release pipeline.</li>
                                <li>Development - active work on changes</li>
                                <li>Test - testing of changes</li>
                                <li>Prod - staging and release</li>
                            </ul>
                            <p>Datical DB represent stages in a release pipeline as <em>steps</em>. Each step includes a connection to the database that supports that stage. A <em>DbDef</em> defines the database connection for a step.&#160;</p>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>REPL</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">Name of the CLI component within Datical DB. You install and update the REPL component.&#160;</td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Rule</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">Constraint placed upon an aspect of a database change. Rules are defined for each project. During a <em>forecast</em> operation, a database change is tested against rules for the project.&#160;</td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Rules Engine</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">General term for the part of Datical DB that performs rules checking.&#160;</td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Schema</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">
                            <p>For Datical, a sub-part of a database. A <em>project</em> defines one or more schema in the database to manage.&#160;</p>
                            <p>In general, a database schema defines the structure of a database and relationships among its component objects.&#160;</p>
                            <p><strong>Note</strong>: Terminology varies among database vendors for the top-level concepts of database organization (catalog, database, schema, instance, user).&#160;</p>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Simulation</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">Testing the effect a change would have on the database where it will be deployed, part of a <em>forecast</em> operation. Simulation is performed upon an in-memory model of the target database.&#160;</td>
                    </tr>
                    <tr>
                        <td class="confluenceTd"><strong>Source Code Management (SCM)</strong>
                        </td>
                        <td class="confluenceTd"><em>Source Code Management</em> - Datical DB's best methodology for DevOps speed for database changes involves checking SQL scripts into an SCM. The scripts are packaged into changesets and deployed to the REF database. Various automation features can be configured to support <em>continuous integration</em>, such as triggers (run packaging immediately upon check-in) or polling (run packaging at a specified interval, such as hourly).&#160;</td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Status</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">
                            <p>Datical operation that determines the status of a step is based on the comparison of changesets deployed to it versus changesets in the changelog.&#160;</p>
                            <ul>
                                <li>Fully Deployed - all changesets in the changelog are deployed to this step</li>
                                <li>Partially Deployed - not all changesets in the changelog are deployed to this step.&#160;</li>
                            </ul>
                            <p>You can check the status of a step using the GUI or the CLI.&#160;</p>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Step</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">
                            <p>A component of a <em>project</em> that represents a stage in the <em>release pipeline</em>. A step defines a connection to a database (DbDef).</p>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="1" class="confluenceTd"><strong>Tracking Schema</strong>
                        </td>
                        <td colspan="1" class="confluenceTd">Schema where the DATABASECHANGELOG table is kept. This table is a representation of the changelog.xml file.&#160;&#160;</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </body>
</html>