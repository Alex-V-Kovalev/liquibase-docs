<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <h1>MongoDB Atlas</h1>
        <p>This guide covers two ways to authenticate a MongoDB&#160;Atlas instance with <MadCap:variable name="General.CompanyName" />. One uses the SCRAM (Username/Password)&#160;method and the other uses the X.509 Certificate method. Follow the one that fits your scenario best.</p>
        <h2>SCRAM (Username/Password)</h2>
        <p>Users often prefer the SCRAM&#160;method because of simplicity and increased security. The server stores passwords in a iterated hash format. This makes offline attacks harder, and decreases the impact of database breaches.</p>
        <h3>First you must configure MongoDB Atlas. </h3>
        <p>Learn more about each step at the links below.</p>
        <ol>
            <li><a href="https://www.mongodb.com/docs/atlas/tutorial/create-atlas-account/">Create an Atlas Account</a>
            </li>
            <li><a href="https://www.mongodb.com/docs/atlas/tutorial/deploy-free-tier-cluster/">Deploy a Free Cluster</a>
            </li>
            <li><a href="https://www.mongodb.com/docs/atlas/security/add-ip-address-to-list/">Add Your Connection IP Address to Your IP Access List</a>
            </li>
            <li><a href="https://www.mongodb.com/docs/atlas/tutorial/create-mongodb-user-for-cluster/">Create a Database User for Your Cluster</a>
            </li>
            <li>Add or change Database User role to <b>Atlas admin</b> (Security -&gt; Database Access -&gt; Edit -&gt; Database User Privileges -&gt; Built-in Role)<p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">Learn more about database users and built in roles here: <br /><a href="https://www.mongodb.com/docs/atlas/security-add-mongodb-users/#modify-database-users">Modify Database Users</a><br /><a href="https://www.mongodb.com/docs/atlas/security-add-mongodb-users/#built-in-roles">Built In Roles</a><![CDATA[
			]]></p> </li>
        </ol>
        <h3>Liquibase configuration</h3>
        <p>Once MongoDB&#160;Atlas is configured, you must then configure <MadCap:variable name="General.Liquibase" />.</p>
        <ol>
            <li>Add the <code>liquibase.command.url</code> property to the configuration file, environment variables or command line options in the following format: <br /><code>mongodb+srv://cluster0.abcd123.mongodb.net/lbcat</code></li>
            <li>Add the <code>liquibase.command.username</code> and <code>liquibase.command.password</code> properties to the same configuration file, environment variables or command line. These are the same credentials entered in Step 4 above titled:&#160;<a href="https://www.mongodb.com/docs/atlas/tutorial/create-mongodb-user-for-cluster/">Create a Database User for Your Cluster</a></li>
        </ol>
        <p>MongoDB&#160;Atlas is configured successfully with <MadCap:variable name="General.Liquibase" />.<br /></p>
        <h2>X.509 Certificate</h2>
        <p>This authorization mechanism, albeit more complex, allows system administrators to configure certificates for users within their organization. It also does not require you to memorize a password.</p>
        <h3>First you must configure MongoDB Atlas. </h3>
        <p>Learn more about each step at the links below.</p>
        <ol>
            <li><a href="https://www.mongodb.com/docs/atlas/tutorial/create-atlas-account/">Create an Atlas Account</a>
            </li>
            <li><a href="https://www.mongodb.com/docs/atlas/tutorial/deploy-free-tier-cluster/">Deploy a Free Cluster</a>
            </li>
            <li><a href="https://www.mongodb.com/docs/atlas/security/add-ip-address-to-list/">Add Your Connection IP Address to Your IP Access List</a>
            </li>
            <li><a href="https://www.mongodb.com/docs/atlas/security-add-mongodb-users/#add-database-users">Add Database Users</a> for X.509 Certificates</li>
            <li>Add or change Database User role to <b>Atlas admin</b> (Security -&gt; Database Access -&gt; Edit -&gt; Database User Privileges -&gt; Built-in Role)<p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">Learn more about database users and built in roles here: <br /><a href="https://www.mongodb.com/docs/atlas/security-add-mongodb-users/#modify-database-users">Modify Database Users</a><br /><a href="https://www.mongodb.com/docs/atlas/security-add-mongodb-users/#built-in-roles">Built In Roles</a><![CDATA[
			]]></p> </li>
        </ol>
        <h3>Java Configuration</h3>
        <p>Java Truststore is a Java mechanism that stores Certificates. It is used only by Java applications. The below command creates the <code>CA.p12</code> Truststore file that contains the certificate which was pulled from MongoDB&#160;Atlas above in Step 4.</p>
        <ol>
            <li>Connect MongoDB&#160;Atlas to Truststore by running the following in the CLI:<br /><code>openssl pkcs12 -export -in X509-cert-137983036943191321.pem -name mongoAtlas -caname CA -out CA.p12 -passout pass:qwerty123</code></li>
        </ol>
        <p>The <code>CA.p12</code> Truststore file that contains the certificate can now be used by <MadCap:variable name="General.Liquibase" /> to connect to MongoDB Atlas. </p>
        <h3>Liquibase configuration</h3>
        <p>Once MongoDB&#160;Atlas and Java are configured, you must then configure <MadCap:variable name="General.Liquibase" />.</p>
        <ol>
            <li>Add the <code>liquibase.command.url</code> property to the configuration file, environment variables or command line options in the following format:<br /><code>liquibase.command.url mongodb+srv://cluster0.xtsabc123.mongodb.net/lbcat?authSource=%24external&amp;authMechanism=MONGODB-X509&amp;&amp;tlsCertificateKeyFile=X509-cert-137983036943191321.pem</code>`</li>
            <li>Add <code>JAVA_OPTS="-Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=CA.p12 -Djavax.net.ssl.keyStorePassword=qwerty123"</code> to the environment variables before running liquibase commands.</li>
        </ol>
        <p>MongoDB&#160;Atlas is configured successfully with <MadCap:variable name="General.Liquibase" />.<br /></p>
    </body>
</html>