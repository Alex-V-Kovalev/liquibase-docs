<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title><MadCap:variable name="Heading.Level1" /></title>
        <link rel="canonical" href="https://docs.liquibase.com/start/install/node-package-manager/home.html" />
        <meta name="description" content="Learn how to install Liquibase with the Node Package Manager (NPM)." />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
    </head>
    <body>
        <h1>Node Package Manager (NPM)</h1>
        <p>The NPM installation method was developed with TypeScript and JavaScript engineers in mind. This method provides a smooth user experience with the NPM packager and the CLI tool. This is made possible by transpiling both an ES Module and a Common JS module in the dist code. The Node CLI of this package can be used with node-liquibase. All 'top level' Liquibase commands are implemented in this package. <a href="https://github.com/liquibase/node-liquibase/blob/master/src/enums/liquibase-commands.enum.ts">Here's a complete listing</a> of commands that have been implemented.</p>
        <p class="note" MadCap:autonum="&lt;b&gt;Note: &lt;/b&gt;">Be sure to only import from the <MadCap:variable name="General.Liquibase" /> module name when importing the modules to use them in a JavaScript or TypeScript file. This package name is required  due to dependent projects.<br /></p>
        <p>The new package includes:</p>
        <ul>
            <li><MadCap:variable name="General.Liquibase" /> command documentation right at your fingertips</li>
            <li><MadCap:variable name="General.changeset" /> command Parameter documentation</li>
            <li><MadCap:variable name="General.changeset" /> CLI Command API Parity</li>
        </ul>
        <h2>Want to Help?</h2>
        <p>This project needs some work on the infrastructure and build tooling side. For now the workflow to test an 'end user ready' version of the project, you'll first need to build/compile the code, and then you can run it using the Node CLI's REPL <code>node path/to/something.js</code>.</p>
        <p>There is an issue in path resolution within THIS application code in addition to the complexities in Liquibase Core. Until this is resolved the resolved path for the Liquibase executable will differ between compiled and source code. This will affect your experience if you try to transpile the code on the fly using ts-node. I have not resolved the issue yet.</p>
        <h3>Build</h3>
        <p>To build all of the things:</p><pre>npm run build</pre>
        <h3>Tests</h3>
        <p>Run tests with:</p><pre>npm run test</pre>
        <h3>Env Vars</h3>
        <p>To substitute your own user/pass for a given environment, make a copy of .env.example in root directory as .env and update accordingly.</p>
        <h2>CI: Generate Action</h2>
        <p>There is a GitHub action executed on every Liquibase release. This GitHub Action automates the generation of Liquibase command list and protobuf files for a specified Liquibase version.</p>
        <h3>Workflow Steps</h3>
        <ol>
            <li>Install Dependencies: Installs necessary dependencies including protobuf-compiler and npm packages.</li>
            <li>Build Liquibase Protobuf Generator Docker Image: Builds a Docker image named liquibase-protobuf-generator specific to the provided Liquibase version.</li>
            <li>Generate Liquibase Command List: Executes a Docker command to generate a JSON file containing a list of Liquibase commands supported by the specified version.</li>
            <li>Iterate Over Commands and Generate Protobuf Files: Loops through the commands retrieved from the JSON file, executes Docker commands to generate protobuf files for each command, and then moves the generated TypeScript files to a directory named proto-commands.</li>
            <li>Update Liquibase Binaries: Downloads and extracts the Liquibase binaries for the specified version, replacing the existing binaries.</li>
            <li>Create Pull Request: It creates a pull request with the generated changes.</li>
        </ol>
        <p>This action streamlines the process of updating Liquibase-related files and creating pull requests for version updates.</p>
        <p>After the PR is created you can see potential new/modified liquibase commands and proced to update this module following the steps shown at <a href="https://github.com/liquibase/node-liquibase?tab=readme-ov-file#extending-liquibase-node-package-step-by-step-guide">Extending Liquibase Node Package: Step-by-Step Guide</a></p>
        <h2>Related Links</h2>
        <ul>
            <li><a href="https://docs.chocolatey.org/en-us/">NPM&#160;Documentation</a>
            </li>
            <li><a href="https://www.npmjs.com/package/liquibase#installation">NodeJS and <MadCap:variable name="General.Liquibase" /></a>
            </li>
        </ul>
    </body>
</html>